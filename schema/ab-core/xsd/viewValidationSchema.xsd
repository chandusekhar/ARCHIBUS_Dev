<?xml version="1.0" encoding="ISO-8859-1" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" >

<!-- XML Name data type.  An xsd:NCName value that must start with a lowercase letter, and can only contain letters, digits, underscores and hyphens. It must end with a letter or digit. -->
<xs:simpleType name="nameIdentifier">
    <xs:restriction base="xs:string">
        <xs:pattern value="[a-zA-Z][a-zA-Z0-9_\-.:]*[a-zA-Z0-9]"/>
    </xs:restriction>
</xs:simpleType>

<!-- XML Identifier data type. This must be unique in the document and can only occur in one attribute of an element. It must start with a lowercase letter, and can only contain letters, digits, underscores and hyphens. It must end with a letter or digit. -->
<xs:simpleType name="elementIdType">
    <xs:restriction base="xs:ID">
        <xs:pattern value="[a-zA-Z][a-zA-Z0-9_\-.:]*[a-zA-Z0-9]"/>
    </xs:restriction>
</xs:simpleType>

<!--  Short string used for column widths and such. May be an integer 0 - 9999, pixel count 0px - 9999px, or percentage 0% - 100%.  -->
<xs:simpleType name="sizeToken">
    <xs:restriction base="xs:token">
        <xs:pattern value="\d{1,4}|\d{1,4}px|\d{1,2}%|100%"/>
    </xs:restriction>
</xs:simpleType>

<!--  String used for boolean flags. May be 'true', 'false' or a macro starting with '${' and ending with '}'.  -->
<xs:simpleType name="booleanExpression">
    <xs:restriction base="xs:string">
        <xs:pattern value="true|false|$\{.+\}"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the panel element's 'type' attribute.  -->
<xs:simpleType name="panelTypeAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="columnReport" />
		<xs:enumeration value="console" />
		<xs:enumeration value="control" />
		<xs:enumeration value="chart" />
		<xs:enumeration value="crossTable" />
		<xs:enumeration value="dataView" />
		<xs:enumeration value="drawing" />
		<xs:enumeration value="form"/>
		<xs:enumeration value="grid"/>
		<xs:enumeration value="hierTree" />
		<xs:enumeration value="html" />
		<xs:enumeration value="legend" />
		<xs:enumeration value="tree" />
		<xs:enumeration value="paginatedReport" />
		<xs:enumeration value="view"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for number of columns in a panel of type 'form'.  -->
<xs:simpleType name="formPanelColumnsAttrType">
    <xs:restriction base="xs:integer">
        <xs:minInclusive value="1"/>
        <xs:maxInclusive value="12"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource/table element's 'role' attribute.  -->
<xs:simpleType name="databaseRoleAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="data" />
		<xs:enumeration value="schema" />
		<xs:enumeration value="security" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource element's 'type' attribute.  -->
<xs:simpleType name="dataSourceTypeAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="grouping" />
		<xs:enumeration value="DrawingControlHighlight" />
		<xs:enumeration value="DrawingControlLabels" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the layout element's 'type' attribute.  -->
<xs:simpleType name="layoutTypeAttrType">
    <xs:restriction base="xs:token">
        <xs:enumeration value="borderLayout"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the panel or tabs element's 'region' attribute.  -->
<xs:simpleType name="layoutRegionAttrType">
    <xs:restriction base="xs:string">
        <xs:enumeration value="north"/>
        <xs:enumeration value="south"/>
        <xs:enumeration value="east"/>
        <xs:enumeration value="west"/>
        <xs:enumeration value="center"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the panel or tabs element's 'region' attribute.  -->
<xs:complexType name="layoutRegionElementType">
    <xs:attribute name="id" type="xs:ID" use="optional"/>
    <xs:attribute name="initialSize" type="sizeToken" />
    <xs:attribute name="split" type="xs:boolean" />
    <xs:attribute name="autoScroll" type="xs:boolean" />
    <xs:attribute name="minSize" type="sizeToken" />
    <xs:attribute name="maxSize" type="sizeToken" />
    <xs:attribute name="collapsed" type="booleanExpression" />
</xs:complexType>

<!--  Data type for layout element.  -->
<xs:complexType name="layoutElementType" >
    <xs:all >
        <xs:element name="north" type="layoutRegionElementType" minOccurs="0"/>
		<xs:element name="south" type="layoutRegionElementType" minOccurs="0"/>
		<xs:element name="east"  type="layoutRegionElementType" minOccurs="0"/>
		<xs:element name="west"  type="layoutRegionElementType" minOccurs="0"/>
		<xs:element name="center" type="layoutRegionElementType" minOccurs="0"/>
    </xs:all>
    <xs:attribute name="id" type="xs:ID" use="optional" />
    <xs:attribute name="containingLayout" type="xs:IDREF" />
    <xs:attribute name="region" type="layoutRegionAttrType" />
    <xs:attribute name="type" type="layoutTypeAttrType"/>
    <xs:attribute name="file" type="xs:string"/>
</xs:complexType>

<!--  Data type for layout element.  -->
<xs:complexType name="designInfoElementType" >
    <xs:attribute name="isAlterable" type="xs:boolean" />
    <xs:attribute name="pattern" type="xs:string" />
    <xs:attribute name="type" type="xs:string" />
</xs:complexType>

<!--  Data type for message element's simple content complex type.  -->
<xs:complexType name="messageElementType">
    <xs:simpleContent>
        <xs:extension base="xs:string">
            <xs:attribute name="translatable" type="xs:boolean" />
			<xs:attribute name="name" type="xs:string" />
	</xs:extension>
    </xs:simpleContent>
</xs:complexType>


<!--  Data type for view/panel/field/action title element's simple content complex type.  -->
<xs:complexType name="titleElementType"> 
    <xs:simpleContent>
        <xs:extension base="xs:string">
            <xs:attribute name="translatable" type="xs:boolean" />
			<xs:attribute name="hidden" type="booleanExpression" />
			<xs:attribute name="cssClass" type="xs:string" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for dataSource field title element's simple content complex type.  -->
<xs:complexType name="simpleTitleElementType"> 
    <xs:simpleContent>
        <xs:extension base="xs:string">
            <xs:attribute name="translatable" type="xs:boolean" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for view/panel/field/action title elements allowing child elements.  -->
<xs:complexType name="richTitleElementType" mixed="true"> 
    <xs:choice minOccurs="0" maxOccurs="2">
	    <xs:element name="span" type="identifiedSpanElementType"/>
		<xs:element name="input" type="titleInputElementType"/>
    </xs:choice>
	<xs:attribute name="translatable" type="xs:boolean" />
	<xs:attribute name="hidden" type="booleanExpression" />
	<xs:attribute name="cssClass" type="xs:string" />
</xs:complexType>

<xs:complexType name="identifiedSpanElementType">
    <xs:attribute name="id" type="elementIdType" use="required" />
    <xs:attribute name="class" type="xs:string" />
    <xs:attribute name="style" type="xs:string" />
</xs:complexType>

<xs:complexType name="titleInputElementType">
    <xs:attribute name="type" type="htmlInputType" use="required"/>
    <xs:anyAttribute processContents="lax"/>
</xs:complexType>

<xs:simpleType name="htmlInputType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="checkbox" />
		<xs:enumeration value="color" />
		<xs:enumeration value="date" />
		<xs:enumeration value="datetime" />
		<xs:enumeration value="datetime-local" />
		<xs:enumeration value="email" />
		<xs:enumeration value="file" />
		<xs:enumeration value="hidden" />
		<xs:enumeration value="image" />
		<xs:enumeration value="month" />
		<xs:enumeration value="number" />
		<xs:enumeration value="password" />
		<xs:enumeration value="radio" />
		<xs:enumeration value="range" />
		<xs:enumeration value="reset" />
		<xs:enumeration value="search" />
		<xs:enumeration value="submit" />
		<xs:enumeration value="tel" />
		<xs:enumeration value="text" />
		<xs:enumeration value="time" />
		<xs:enumeration value="url" />
		<xs:enumeration value="week" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for dataSource element's complex type and constraints on table and field names.  -->
<xs:element name="dataSource">
    <xs:complexType>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="table" type="dataSourceTableElementType" />
			<xs:element name="field" type="dataSourceFieldElementType" />
			<xs:element name="parameter" type="dataSourceParameterElementType" />
			<xs:element name="sql" type="dataSourceSqlElementType" />
			<xs:element name="sortField" type="sortFieldElementType" />
			<xs:element name="restriction" type="dataSourceRestrictionElementType" />
			<xs:element name="title" type="simpleTitleElementType" />
		</xs:choice>
		<xs:attribute name="id" type="elementIdType" use="required"/>
		<xs:attribute name="databaseRole" type="databaseRoleAttrType" />
		<xs:attribute name="type" type="dataSourceTypeAttrType" />
		<xs:attribute name="distinct" type="booleanExpression" />
		<xs:attribute name="applyVpaRestrictions" type="booleanExpression" />
    </xs:complexType>

    <xs:unique name="uniqueTable">
        <xs:selector xpath="table" />
        <xs:field xpath="@name" />
    </xs:unique>
    <xs:keyref name="DataSourceField" refer="uniqueTable" >
      <xs:selector xpath="field" />
      <xs:field xpath="@table" />
    </xs:keyref>
</xs:element>

<!--  Data type for dataSource's table element.  -->
<xs:complexType name="dataSourceTableElementType">
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="role" type="dataSourceTableRoleAttrType" default="main" />
</xs:complexType>

<!--  Data type for dataSource's field element.  -->
<xs:complexType name="dataSourceFieldElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="sql" type="dataSourceSqlElementType" />
        <xs:element name="title" type="simpleTitleElementType" />
    </xs:choice>
    <xs:attribute name="table" type="nameIdentifier" />
    <xs:attribute name="name" type="nameIdentifier" use="required" />
    <xs:attribute name="dataType" type="fieldDataTypeAttributeType" />
    <xs:attribute name="size" type="xs:positiveInteger" />
    <xs:attribute name="decimals" type="xs:nonNegativeInteger" />
    <xs:attribute name="groupBy" type="xs:boolean" />
    <xs:attribute name="formula" type="formulaAttrType" />
    <xs:attribute name="baseField" type="xs:NCName" />
	<xs:attribute name="numericFormat" type="numericFormatType" />
	<xs:attribute name="currency" type="xs:string" />
	<xs:attribute name="currencyField" type="xs:string" />
    <xs:attribute name="showTotals" type="booleanExpression" />
    <xs:attribute name="required" type="xs:boolean" />
	<xs:attribute name="optional" type="xs:boolean" />
	<xs:attribute name="legendKey" type="xs:boolean" />
	<xs:attribute name="id" type="elementIdType" />
	<!-- SK: One use case we currently allow is: the data source contains physical fields, and the panel contains virtual fields. 
	At runtime, panel virtual fields are available through the data source object API. 
	This means that we have to support virtual field attributes such as baseField, formula, dataType, title in both data source and panel fields. 
	The hidden attribute is needed in drawing panel label dataSources.
	-->
	<!-- specific to drawing panel label dataSource -->
	<xs:attribute name="hidden" type="xs:boolean" />
</xs:complexType>

<!--  Data type for allowable values of the dataSource/table element's 'role' attribute.  -->
<xs:simpleType name="dataSourceTableRoleAttrType">
    <xs:restriction base="xs:string">
	    <xs:enumeration value="main" />
	    <xs:enumeration value="standard" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource element's 'type' attribute.  -->
<xs:simpleType name="formulaAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="sum" />
		<xs:enumeration value="count" />
		<xs:enumeration value="avg" />
		<xs:enumeration value="min" />
		<xs:enumeration value="max" />
		<xs:enumeration value="year" />
		<xs:enumeration value="quarter" />
		<xs:enumeration value="month" />
		<xs:enumeration value="week" />
		<xs:enumeration value="day" />
		<xs:enumeration value="sum-percent" />
		<xs:enumeration value="count-percent" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource element's 'numericFormat' attribute.  -->
<xs:simpleType name="numericFormatType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="area" />
		<xs:enumeration value="oppositeArea" />
		<xs:enumeration value="baseArea" />
		<xs:enumeration value="length" />
		<xs:enumeration value="oppositeLength" />
		<xs:enumeration value="baseLength" />
		<xs:enumeration value="default" />
		<xs:enumeration value="Default" />
		<xs:enumeration value="budgetCurrency" />
		<xs:enumeration value="paymentCurrency" />
		<xs:enumeration value="noSeparator" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for dataSource's parameter element.  -->
<xs:complexType name="dataSourceParameterElementType">
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="dataType" type="parameterDataTypeAttrType" />
    <xs:attribute name="value" type="xs:string" />
</xs:complexType>

<!--  Data type for dataSource's sql element.  -->
<xs:complexType name="dataSourceSqlElementType">
    <xs:simpleContent>
        <xs:extension base="xs:string">
            <xs:attribute name="dialect" type="dataSourceSqlDialectAttrType" />
        </xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for allowable values of the dataSource/sql element's 'dialect' attribute.  -->
<xs:simpleType name="dataSourceSqlDialectAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="generic" />
		<xs:enumeration value="sybase" />
		<xs:enumeration value="oracle" />
		<xs:enumeration value="sqlserver" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource/restriction element's 'type' attribute.  -->
<xs:simpleType name="dataSourceRestrictionTypeAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="sql" />
		<xs:enumeration value="SQL" />
		<xs:enumeration value="parsed" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for dataSource's restriction element.  -->
<xs:complexType name="dataSourceRestrictionElementType">
    <xs:sequence minOccurs="0"  maxOccurs="unbounded">
        <xs:element name="clause" type="dataSourceRestrictionClauseElementType"/>
    </xs:sequence>
    <xs:attribute name="type" type="dataSourceRestrictionTypeAttrType" use="required"/>
    <xs:attribute name="relop" type="dataSourceRestrictionRelopAttrType" />
    <xs:attribute name="sql" type="xs:string"/>
</xs:complexType>

<!--  Data type for dataSource's restriction clause element.  -->
<xs:complexType name="dataSourceRestrictionClauseElementType">
    <xs:attribute name="table" type="xs:string" use="required" />
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="op" type="dataSourceRestrictionOpAttrType"/>
    <xs:attribute name="value" type="xs:string" />
    <xs:attribute name="relop" type="dataSourceRestrictionRelopAttrType" />
</xs:complexType>

<!--  Data type for allowable values of the dataSource/restriction element's 'op' attribute.  -->
<xs:simpleType name="dataSourceRestrictionOpAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="=" />
		<xs:enumeration value="!=" />
		<xs:enumeration value="&gt;" />
		<xs:enumeration value="&gt;=" />
		<xs:enumeration value="&lt;" />
		<xs:enumeration value="&lt;=" />
		<xs:enumeration value="&lt;&gt;" />
		<xs:enumeration value="LIKE" />
		<xs:enumeration value="Like" />
		<xs:enumeration value="like" />
		<xs:enumeration value="NOT LIKE" />
		<xs:enumeration value="Not Like" />
		<xs:enumeration value="not like" />
		<xs:enumeration value="IN" />
		<xs:enumeration value="In" />
		<xs:enumeration value="in" />
		<xs:enumeration value="NOT IN" />
		<xs:enumeration value="Not In" />
		<xs:enumeration value="not in" />
		<xs:enumeration value="IS NOT NULL" />
		<xs:enumeration value="Is Not Null" />
		<xs:enumeration value="is not null" />
		<xs:enumeration value="IS NULL" />
		<xs:enumeration value="Is Null" />
		<xs:enumeration value="is null" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource/restriction element's 'relop' attribute.  -->
<xs:simpleType name="dataSourceRestrictionRelopAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="and" />
		<xs:enumeration value="AND" />
		<xs:enumeration value=")and(" />
		<xs:enumeration value=")AND(" />
		<xs:enumeration value=") and (" />
		<xs:enumeration value=") AND (" />
		<xs:enumeration value="or" />
		<xs:enumeration value="OR" />
		<xs:enumeration value=")or(" />
		<xs:enumeration value=")OR(" />
		<xs:enumeration value=") or (" />
		<xs:enumeration value=") OR (" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for JavaScript include element.  -->
<xs:complexType name="jsElementType"> 
    <xs:attribute name="url" type="xs:string" />
    <xs:attribute name="file" type="xs:string" />
</xs:complexType>

<!--  Data type for JavaScript include or reference element.  -->
<xs:complexType name="scriptElementType"> 
     <xs:simpleContent>
        <xs:extension base="xs:string">
			<xs:attribute name="src" type="xs:string" />
			<xs:attribute name="language" type="xs:string" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for CSS include element.  -->
<xs:complexType name="cssElementType" > 
    <xs:simpleContent>
        <xs:extension base="xs:string">
			<xs:attribute name="url" type="xs:string" />
			<xs:attribute name="file" type="xs:string" />
			<xs:attribute name="media" type="xs:string" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!-- DO WE REALLY ALLOW THIS IN YALTA 5 ? -->
<!--  Data type for element allowing inline inclusion of CSS.  -->
<xs:complexType name="styleElementType" > 
    <xs:simpleContent>
        <xs:extension base="xs:string">
			<xs:attribute name="type" type="xs:string" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for action/field element's tooltip child element.  -->
<xs:complexType name="tooltipElementType" > 
    <xs:simpleContent>
        <xs:extension base="xs:string">
		    <xs:attribute name="translatable" type="xs:boolean" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for allowable values of the command element's 'type' attribute.  -->
<xs:simpleType name="commandTypeAttrType">
    <xs:restriction base="xs:token">
        <xs:enumeration value="showPanel"/>
        <xs:enumeration value="showRegion"/>
        <xs:enumeration value="clearPanel"/>
        <xs:enumeration value="exportPanel"/>
		<xs:enumeration value="openDialog"/>
		<xs:enumeration value="openView"/>
        <xs:enumeration value="closeDialog"/>
        <xs:enumeration value="loadView"/>
        <xs:enumeration value="selectTabPage"/>
        <xs:enumeration value="createTabPage"/>
        <xs:enumeration value="closeTabPage"/>
        <xs:enumeration value="saveForm"/>
        <xs:enumeration value="clearForm"/>
        <xs:enumeration value="deleteRecord"/>
        <xs:enumeration value="deleteSelectedRows"/>
        <xs:enumeration value="workflowRule"/>
        <xs:enumeration value="callFunction"/>
        <xs:enumeration value="startJob"/>
        <xs:enumeration value="selectValue"/>
		<xs:enumeration value="selectFields"/>
        <xs:enumeration value="checkInNewDocument"/>
        <xs:enumeration value="checkInNewDocumentVersion"/>
        <xs:enumeration value="checkOutDocument"/>
        <xs:enumeration value="showDocument"/>
        <xs:enumeration value="lockDocument"/>
        <xs:enumeration value="deleteDocument"/>
		<xs:enumeration value="showHelp"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the command element's 'action' attribute.  -->
<xs:simpleType name="commandActionAttrType">
    <xs:restriction base="xs:token">
        <xs:enumeration value="show"/>
        <xs:enumeration value="hide"/>
        <xs:enumeration value="toggle"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable structure of the command element and its attributes.  -->
<xs:complexType name="commandElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
        <xs:element name="title" type="richTitleElementType" />
    </xs:choice>
    <xs:attribute name="id" type="nameIdentifier" />
    <xs:attribute name="type" type="commandTypeAttrType" use="required" />
    <xs:attribute name="action" type="commandActionAttrType" />
    <xs:attribute name="actionListener"  type="xs:string"/>
	<xs:attribute name="addNewDialog" type="xs:string" />
	<xs:attribute name="applyFilter" type="xs:boolean" />
    <xs:attribute name="applyMultipleSelectionRestriction" type="xs:boolean" />
    <xs:attribute name="applyParentRestriction" type="xs:boolean" /> 
    <xs:attribute name="applySelectionRestriction" type="xs:boolean" />
	<xs:attribute name="applyVpaRestrictions" type="booleanExpression" />
    <xs:attribute name="autoComplete" type="xs:boolean" /> 
	<xs:attribute name="beforeSelect" type="xs:string" />
    <xs:attribute name="clearRestriction" type="xs:boolean" /> 
    <xs:attribute name="closeButton" type="booleanExpression" /> 
    <xs:attribute name="fieldName" type="nameIdentifier" /> 
    <xs:attribute name="fieldNames"  type="xs:string"/>
	<xs:attribute name="file" type="xs:string"/>
    <xs:attribute name="functionName" type="xs:string" /> 
    <xs:attribute name="height" type="sizeToken" />
    <xs:attribute name="includeHeader" type="booleanExpression" /> 
    <xs:attribute name="isDistinct" type="xs:boolean" />
    <xs:attribute name="isExportDocument" type="booleanExpression" /> 
    <xs:attribute name="isImportDocument" type="booleanExpression" /> 
    <xs:attribute name="layout" type="nameIdentifier" />
    <xs:attribute name="newRecord" type="booleanExpression" /> 
	<xs:attribute name="orientation" type="nameIdentifier" />
    <xs:attribute name="outputType" type="nameIdentifier" /> 
	<xs:attribute name="printRestriction" type="xs:boolean" /> 
    <xs:attribute name="region" type="layoutRegionAttrType" />
    <xs:attribute name="restriction"  type="xs:string"/>
    <xs:attribute name="selectFieldNames"  type="xs:string"/>
    <xs:attribute name="selectValueType" type="nameIdentifier" />
	<xs:attribute name="showAddNewButton" type="booleanExpression"/>
	<xs:attribute name="showDialog" type="booleanExpression" />
    <xs:attribute name="showIndex" type="booleanExpression" /> 
    <xs:attribute name="sortFieldNames"  type="xs:string"/>
	<xs:attribute name="showNullFilters" type="booleanExpression"/>
    <xs:attribute name="tableName" type="nameIdentifier" /> 
    <xs:attribute name="tabPageName" type="nameIdentifier" /> 
    <xs:attribute name="tabPanelId" type="nameIdentifier" /> 
    <xs:attribute name="target" type="xs:string" /> 
    <xs:attribute name="panelId" type="nameIdentifier" /> 
    <xs:attribute name="parentPanelId" type="nameIdentifier" /> 
	<xs:attribute name="ruleId" type="nameIdentifier" /> 
	<xs:attribute name="recordLimit" type="xs:nonNegativeInteger" />
    <xs:attribute name="show" type="booleanExpression" /> 
	<xs:attribute name="showMessageAsPopup" type="booleanExpression" /> 
    <xs:attribute name="viewName" type="xs:string" /> 
    <xs:attribute name="visibleFieldNames"  type="xs:string"/>
    <xs:attribute name="width" type="sizeToken" />
    <xs:attribute name="workflowRuleId"  type="nameIdentifier"/>
</xs:complexType>

<!--  Data type for the action element allowable within a panel.  -->
<xs:complexType name="panelActionElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
		<xs:element name="action" type="panelActionElementType" />
		<xs:element name="command" type="commandElementType" />
        <xs:element name="title" type="richTitleElementType" />
		<xs:element name="tooltip" type="tooltipElementType" />
    </xs:choice>
    <xs:attribute name="id" type="nameIdentifier" />
    <xs:attribute name="type" type="panelActionTypeType"/>
	<xs:attribute name="checked" type="booleanExpression"/>
    <xs:attribute name="cssClass"  type="xs:string"/>
    <xs:attribute name="enabled" type="booleanExpression"/>
    <xs:attribute name="frame"  type="nameIdentifier"/>
    <xs:attribute name="hidden" type="booleanExpression"/>
    <xs:attribute name="imageName"  type="xs:string"/>
    <xs:attribute name="inActionbar" type="booleanExpression"/>	
    <xs:attribute name="mainAction" type="booleanExpression"/>
    <xs:attribute name="newWindow" type="xs:boolean"/>
    <xs:attribute name="onclick"  type="xs:string"/>
    <xs:attribute name="workflowRuleId"  type="nameIdentifier"/>
</xs:complexType>

<xs:complexType name="panelFieldOptionElementType">
    <xs:simpleContent>
        <xs:extension base="xs:string">
			<xs:attribute name="selected" type="xs:boolean" />
		    <xs:attribute name="translatable" type="xs:boolean" />
		    <xs:attribute name="value" type="xs:string" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<xs:simpleType name="panelActionTypeType">
    <xs:restriction base="xs:token">
        <xs:enumeration value="menu"/>
    </xs:restriction>
</xs:simpleType>

<xs:complexType name="panelInstructionsElementType">
    <xs:simpleContent>
        <xs:extension base="xs:string">
		    <xs:attribute name="translatable" type="xs:boolean" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for the field element allowable within a panel.  -->
<xs:complexType name="panelFieldElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
		<xs:element name="action" type="panelActionElementType" />
		<xs:element name="command" type="commandElementType" />
		<xs:element name="html" type="panelHtmlElementType" />
		<xs:element name="instructions" type="xs:string" />
		<xs:element name="option" type="panelFieldOptionElementType" />
        <xs:element name="title" type="richTitleElementType" /> 
		<xs:element name="tooltip" type="tooltipElementType" />
    </xs:choice >
    <xs:attribute name="id" type="elementIdType" />
    <xs:attribute name="table" type="nameIdentifier" />
    <xs:attribute name="name" type="nameIdentifier" />
	<!-- TODO should this be enumerated as bottom and top? Are there other values? -->
	<xs:attribute name="actionsPosition" type="nameIdentifier" />
    <xs:attribute name="alias" type="nameIdentifier" />
    <xs:attribute name="baseField" type="xs:string" />
    <xs:attribute name="colspan" type="xs:positiveInteger" />
    <xs:attribute name="controlType" type="panelFieldControlTypeAttrType" />
    <xs:attribute name="cssClass" type="xs:string" />
	<xs:attribute name="currency" type="xs:string" />
	<xs:attribute name="currencyField" type="xs:string" />
    <xs:attribute name="dataType" type="fieldDataTypeAttributeType" />
    <xs:attribute name="decimals" type="xs:nonNegativeInteger" />
    <xs:attribute name="displayField" type="xs:string" />
    <xs:attribute name="enabled" type="booleanExpression" />
    <xs:attribute name="focus" type="booleanExpression" />
	<xs:attribute name="formula" type="formulaAttrType" />
	<!-- specific to virtual fields -->
    <xs:attribute name="groupBy" type="xs:boolean" />	
    <xs:attribute name="height" type="sizeToken" />
    <xs:attribute name="hidden" type="booleanExpression" />
    <xs:attribute name="imageName" type="xs:string" />
    <xs:attribute name="labelClass" type="nameIdentifier" />
	<xs:attribute name="legendKey" type="xs:boolean" />
	<xs:attribute name="numericFormat" type="numericFormatType" />
    <xs:attribute name="onblur" type="xs:string" />
    <xs:attribute name="onchange" type="xs:string" />
    <xs:attribute name="onclick" type="xs:string" />
    <xs:attribute name="onfocus" type="xs:string" />
    <xs:attribute name="onkeypress" type="xs:string" />
    <xs:attribute name="op" type="xs:string" />
	<xs:attribute name="optional" type="xs:boolean" />
    <xs:attribute name="readOnly" type="booleanExpression"/>
    <xs:attribute name="required" type="booleanExpression"/>
	<xs:attribute name="restrictionParameterName" type="nameIdentifier" />
    <xs:attribute name="rowspan" type="xs:positiveInteger" />    
    <xs:attribute name="selectValueType" type="nameIdentifier" />
    <xs:attribute name="showSelectValueAction" type="booleanExpression" />
    <xs:attribute name="showLabel" type="booleanExpression" />
    <xs:attribute name="showText" type="booleanExpression" />
    <xs:attribute name="showTotals" type="booleanExpression" />
    <xs:attribute name="showPlaceholder" type="booleanExpression" />
    <xs:attribute name="size" type="xs:positiveInteger" />
    <xs:attribute name="style" type="xs:string" />
    <xs:attribute name="value" type="xs:string" />
    <xs:attribute name="width" type="sizeToken" />    
</xs:complexType>

<!--  Data type for the fieldSet element allowable within a panel.  -->
<xs:complexType name="panelFieldSetElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
		<xs:element name="action" type="panelActionElementType" />
        <xs:element name="field" type="panelFieldElementType" /> 
        <xs:element name="title" type="richTitleElementType" /> 
    </xs:choice >
    <xs:attribute name="colspan" type="xs:positiveInteger" />
    <xs:attribute name="layout" type="panelFieldSetLayoutType" />
</xs:complexType>

<!--  Data type for allowable values of the panel/field element's 'controlType' attribute.  -->
<xs:simpleType name="panelFieldControlTypeAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="button" />
		<xs:enumeration value="checkBox" />
		<xs:enumeration value="color" />
		<xs:enumeration value="comboBox" />
		<xs:enumeration value="image" />
		<xs:enumeration value="link" />
		<xs:enumeration value="multiEdit" />
		<xs:enumeration value="password" />
		<xs:enumeration value="radioButton" />
		<xs:enumeration value="text" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource/field or panel/field element's 'dataType' attribute.  -->
<xs:simpleType name="fieldDataTypeAttributeType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="composite" />
		<xs:enumeration value="date" />
		<xs:enumeration value="integer" />
		<xs:enumeration value="memo" />
		<xs:enumeration value="number" />
		<xs:enumeration value="time" />
		<xs:enumeration value="text" />
		<xs:enumeration value="verbatim" />
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="panelFieldSetLayoutType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="vbox" />
		<xs:enumeration value="fluid" />
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="parameterDataTypeAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="number" />
		<xs:enumeration value="integer" />
		<xs:enumeration value="date" />
		<xs:enumeration value="time" />
		<xs:enumeration value="text" />
		<xs:enumeration value="verbatim" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the form panel element's 'labelsPosition' attribute.  -->
<xs:simpleType name="formPanelLabelPosAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="top" />
		<xs:enumeration value="left" />
		<xs:enumeration value="center" />
		<xs:enumeration value="right" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the form panel element's 'buttonsPosition' attribute.  -->
<xs:simpleType name="formPanelButtonPosAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="top" />
		<xs:enumeration value="footer" />
	</xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the form panel element's 'tabOrder' attribute.  -->
<xs:simpleType name="formPanelTabOrderAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="row" />
		<xs:enumeration value="column" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for a panel's html element.  -->
<xs:complexType name="panelHtmlElementType">
    <xs:sequence minOccurs="0" maxOccurs="unbounded" >
        <xs:any processContents="lax" />
    </xs:sequence>	
</xs:complexType>

<!--  Data type for an element specifying the sort order of a (grid) panel.  -->
<xs:complexType name="sortFieldElementType" >
    <xs:attribute name="table" type="nameIdentifier" />
    <xs:attribute name="name" type="nameIdentifier" use="required" />
    <xs:attribute name="ascending" type="xs:boolean" />
</xs:complexType>

<!--  Data type for an element specifying the column on which a miniconsole panel will get an index  -->
<xs:complexType name="panelIndexElementType" >
    <xs:attribute name="table" type="nameIdentifier" use="required" />
    <xs:attribute name="name" type="nameIdentifier" use="required" />
</xs:complexType>

<xs:simpleType name="zeroToOneDecimal">
    <xs:restriction base="xs:decimal">
        <xs:pattern value="0|1|1.(0)+|0.(\d)+"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart's color attributes.  
		pattern's are ORed together
-->
<xs:simpleType name="rgbValueAttrType">
    <xs:restriction base="xs:token">
        <xs:pattern value="rgb\(\d{1,3},\d{1,3},\d{1,3}\)"/>
		<xs:pattern value="0x[0-9a-fA-F]{6}" />
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="rgbValueAttrList">
    <xs:restriction base="xs:token">
        <xs:pattern value="(rgb\(\d{1,3},\d{1,3},\d{1,3}\),)*\s*rgb\(\d{1,3},\d{1,3},\d{1,3}\)"/>
        <xs:pattern value="(((0x[0-9a-fA-F]{6},)*)\s*(0x[0-9a-fA-F]{6}))"/>
	</xs:restriction>
</xs:simpleType>

<xs:simpleType name="unknownSimpleType">
  <xs:restriction base="xs:integer">
    <xs:pattern value="[0-9,A-F][0-9,A-F][0-9,A-F]([0-9,A-F][0-9,A-F][0-9,A-F])?"/>
  </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart's 'fillType' attribute.  -->
<xs:simpleType name="fillTypeAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="solid" />
		<xs:enumeration value="linearGradient" />
		<xs:enumeration value="radialGradient" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis element's 'labelFunction' attribute.  -->
<xs:simpleType name="legendLocationAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="right" />
		<xs:enumeration value="left" />
		<xs:enumeration value="top" />
		<xs:enumeration value="topLeft" />
		<xs:enumeration value="topRight" />
		<xs:enumeration value="bottom" />
		<xs:enumeration value="bottomLeft" />
		<xs:enumeration value="bottomRight" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis data label location.  -->
<xs:simpleType name="dataLabelLocationAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="inside" />
		<xs:enumeration value="outside" />
		<xs:enumeration value="none" />
		<xs:enumeration value="insideWithCallout" />
		<xs:enumeration value="topRightcallout" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis element's 'labelFunction' attribute.  -->
<xs:simpleType name="labelFunctionAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="data" />
		<xs:enumeration value="schema" />
		<xs:enumeration value="security" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis element's 'labelFunction' attribute.  -->
<xs:simpleType name="chartDataAxisTypeAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="pie" />
		<xs:enumeration value="line" />
		<xs:enumeration value="column" />
		<xs:enumeration value="bar" />
		<xs:enumeration value="area" />
    </xs:restriction>
</xs:simpleType>

<!-- Parameter Type to allow users to set up what kind of parameter to be passed from outer dataSource -->
<xs:simpleType name="chartDataAxisParameterTypeAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="text" />
		<xs:enumeration value="date" />
		<xs:enumeration value="time" />
		<xs:enumeration value="number" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis element's 'type' attribute.  -->
<xs:simpleType name="chartLabelPositionAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="callout" />
		<xs:enumeration value="inside" />
		<xs:enumeration value="outside" />
		<xs:enumeration value="insideWithCallout" />
		<xs:enumeration value="none" />
    </xs:restriction>
</xs:simpleType>

<xs:complexType name="dataAxisElementType" >
    <xs:sequence>
        <xs:element name="title" type="titleElementType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence> 
    <xs:attribute name="dataSource"  type="nameIdentifier"/>
    <xs:attribute name="table" type="nameIdentifier" use="required" />
    <xs:attribute name="field" type="nameIdentifier" use="required" />
    <xs:attribute name="type" type="chartDataAxisTypeAttrType" />
    <xs:attribute name="autoCalculateTickSizeInterval" type="xs:boolean" />
    <xs:attribute name="tickSizeInterval" type="xs:positiveInteger" />
    <xs:attribute name="labelPosition" type="chartLabelPositionAttrType" />
	<xs:attribute name="labelRotation" type="xs:integer" />
    <xs:attribute name="labelFunction" type="nameIdentifier" />
    <xs:attribute name="parameterType" type="chartDataAxisParameterTypeAttrType" />    
    <xs:attribute name="displayAxis" type="booleanExpression" />
	<xs:attribute name="displayVerticalAxis" type="booleanExpression" />
    <xs:attribute name="showLabel" type="booleanExpression" />
    <xs:attribute name="showTitle" type="booleanExpression" />
	<xs:attribute name="unitKey" type="xs:string" />
</xs:complexType>

<xs:complexType name="groupingAxisElementType" >
    <xs:sequence>
        <xs:element name="title" type="titleElementType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="dataSource"  type="nameIdentifier"/>
    <xs:attribute name="table" type="nameIdentifier" use="required" />
    <xs:attribute name="field" type="nameIdentifier" use="required" />
    <xs:attribute name="labelFunction" type="nameIdentifier" />
	<xs:attribute name="labelRotation" type="xs:integer" />
    <xs:attribute name="showLabel" type="booleanExpression" />
    <xs:attribute name="showTitle" type="booleanExpression" />
</xs:complexType>

<xs:complexType name="actionbarElementType" >
    <xs:sequence >
        <xs:element name="action" type="panelActionElementType" minOccurs="1"  maxOccurs="unbounded" />
    </xs:sequence>
</xs:complexType>

<!--  Data type for a panel element containing many attributes and child elements -->
<xs:complexType name="panelElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="title" type="richTitleElementType" /> 
		<xs:element name="action" type="panelActionElementType" /> 
		<xs:element name="event" type="panelEventElementType" />
		<xs:element name="field" type="panelFieldElementType" />
		<xs:element name="html" type="panelHtmlElementType" />
		<xs:element name="level" type="levelElementType" /> 
		<xs:element name="sortField" type="sortFieldElementType" />
		<xs:element name="indexField" type="panelIndexElementType" />
		<xs:element name="groupingAxis" type="groupingAxisElementType" />
		<xs:element name="secondaryGroupingAxis" type="groupingAxisElementType" />
		<xs:element name="dataAxis" type="dataAxisElementType" />
		<xs:element name="fieldset" type="panelFieldSetElementType" />
		<xs:element name="actionbar" type="actionbarElementType" />
		<xs:element name="instructions" type="panelInstructionsElementType" />
		<xs:element name="panel" type="panelElementType" />
		<xs:element name="dataAxisTitle" type="richTitleElementType" /> 
		<xs:element name="options" type="optionsElementType" />
    </xs:choice>	
    <xs:attribute name="id" type="elementIdType" use="required" />
    <xs:attribute name="type" type="panelTypeAttrType" use="required" />
    <xs:attribute name="controlType"  type="nameIdentifier"/>
    <xs:attribute name="columns" type="formPanelColumnsAttrType" />
    <xs:attribute name="layoutRegion" type="xs:IDREF"/>
    <xs:attribute name="layout" type="xs:IDREF"/>
    <xs:attribute name="region" type="layoutRegionAttrType"/>
    <!-- start dataSource attributes -->
    <xs:attribute name="dataSource" type="xs:IDREF"/>
	<xs:attribute name="categoryDataSource" type="nameIdentifier" />	
    <xs:attribute name="rowDimensionDataSource" type="nameIdentifier" />	
    <!-- end dataSource attributes -->
	<xs:attribute name="showOnLoad" type="booleanExpression" />
    <xs:attribute name="hidden" type="booleanExpression" />
    <xs:attribute name="headerClass" type="nameIdentifier" />
    <xs:attribute name="labelsPosition" type="formPanelLabelPosAttrType" />
    <xs:attribute name="buttonsPosition" type="formPanelButtonPosAttrType" />
    <xs:attribute name="formLabelWidth" type="sizeToken" />
    <xs:attribute name="tabOrder" type="formPanelTabOrderAttrType" />
	<xs:attribute name="useParentRestriction" type="booleanExpression" />
	<xs:attribute name="selectionEnabled" type="booleanExpression" />
	<xs:attribute name="multipleSelectionEnabled" type="booleanExpression" />
    <xs:attribute name="multiple" type="xs:boolean" />
    <xs:attribute name="recordLimit" type="xs:nonNegativeInteger" />
    <xs:attribute name="selectValueType" type="nameIdentifier" />
    <xs:attribute name="beforeRefresh"  type="nameIdentifier"/>
    <xs:attribute name="afterRefresh"  type="nameIdentifier"/>
    <xs:attribute name="beforeSave"  type="nameIdentifier"/>
    <xs:attribute name="useFrame" type="booleanExpression" />
    <xs:attribute name="showAsDialog" type="booleanExpression" />
    <xs:attribute name="file" type="xs:Name" />
    <xs:attribute name="level" type="xs:nonNegativeInteger" />
    <xs:attribute name="style" type="xs:string" />
    <xs:attribute name="newRecord" type="booleanExpression" />
    <xs:attribute name="format" type="nameIdentifier" />
    <xs:attribute name="showLabels" type="xs:boolean" />
    <xs:attribute name="showCounts" type="xs:boolean" />
    <!-- start chart specific attributes -->
    <xs:attribute name="width" type="sizeToken" />
    <xs:attribute name="height" type="sizeToken" />
    <xs:attribute name="showLegendOnLoad" type="xs:boolean" default="true"/>
    <xs:attribute name="showLegendAsPopUp" type="xs:boolean"/>	
    <xs:attribute name="legendLocation" type="legendLocationAttrType" />
    <xs:attribute name="showDataTips" type="xs:boolean" default="true"/>
    <xs:attribute name="backgroundColor" type="rgbValueAttrType" />
    <xs:attribute name="fillColor" type="rgbValueAttrList" />
    <xs:attribute name="fillType" type="fillTypeAttrType" default="solid"/>
    <xs:attribute name="percentGradientChange" type="zeroToOneDecimal" />
    <xs:attribute name="percentTransparency" type="zeroToOneDecimal" />
    <!-- end chart specific attributes -->
    <!-- start drawing specific attributes -->
    <xs:attribute name="highlightDataSource" type="nameIdentifier" />
    <xs:attribute name="labelsDataSource" type="nameIdentifier" />
    <xs:attribute name="assetTypes" type="nameIdentifier" />
	<xs:attribute name="projectionType" type="drawingProjectionTypeEnumeration" />
    <xs:attribute name="bordersHighlightSelector" type="xs:boolean"/>
    <xs:attribute name="showLegendOverlay" type="xs:boolean"/>
	<xs:attribute name="legendPanel" type="xs:string" />
	<xs:attribute name="borderHighlightLegendPanel" type="xs:string" />
	<xs:attribute name="highlightType" type="highlightTypeType" />
	<xs:attribute name="handler" type="xs:string" />
    <!-- end drawing specific attributes -->
    <xs:attribute name="refreshWorkflowRuleId" type="xs:string" />
    <xs:attribute name="saveWorkflowRuleId" type="nameIdentifier" />
    <xs:attribute name="deleteWorkflowRuleId" type="nameIdentifier" />
    <xs:attribute name="clearWorkflowRuleId" type="nameIdentifier" />	
	<xs:attribute name="cssClass" type="xs:string" />
	<xs:attribute name="bodyCssClass" type="xs:string" />
    <xs:attribute name="showIndexAndFilterOnLoad" type="booleanExpression" />
    <xs:attribute name="collapsed" type="booleanExpression" />
    <xs:attribute name="sortEnabled" type="booleanExpression" />
    <xs:attribute name="selectionMode" type="xs:string" />
	<xs:attribute name="assignMode" type="xs:string" />
	<xs:attribute name="toolbarSettings" type="xs:string" />
    <xs:attribute name="showIfNoData" type="booleanExpression" />
	<xs:attribute name="role" type="pagenatedReportPanelRoleType" />
	<xs:attribute name="afterCreateControl" type="xs:string" />
	<xs:attribute name="thematicHighlightStyle" type="xs:string" />
	<xs:attribute name="columnsGroupedBy" type="xs:string" />
	<xs:attribute name="initialData" type="xs:string" />
	<xs:attribute name="highlightFilterSelector" type="booleanExpression" />
</xs:complexType>

<xs:complexType name="optionsElementType" >
    <xs:anyAttribute processContents="lax"/>
</xs:complexType>

<!--  Data type for allowable values of the panel or tabs element's 'level' attribute.  -->
<xs:complexType name="levelElementType">
    <xs:sequence >
        <xs:element name="title" type="simpleTitleElementType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence >
    <xs:attribute name="dataSource" type="xs:Name"/>
    <xs:attribute name="bodyTemplate" type="nameIdentifier"/>
</xs:complexType>

<!--  Data type for allowable values of the paginatedReport panel element's 'role' attribute.  -->
<xs:simpleType name="pagenatedReportPanelRoleType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="parent" />
		<xs:enumeration value="data" />
		<xs:enumeration value="legend" />
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="highlightTypeType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="restriction" />
		<xs:enumeration value="thematic" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for a tabs panel element containing many attributes and child elements -->
<xs:complexType name="tabsElementType">
    <xs:sequence >
        <xs:element name="title" type="simpleTitleElementType" minOccurs="0" maxOccurs="1"/>
		<xs:element name="event" type="panelEventElementType" minOccurs="0"  maxOccurs="unbounded" />
        <xs:element name="tab" type="tabElementType" minOccurs="1"  maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="elementIdType" />
    <xs:attribute name="workflow" type="tabsPanelWorkflowAttrType" />
    <xs:attribute name="layoutRegion"  type="nameIdentifier"/>
    <xs:attribute name="layout" type="nameIdentifier"/>
    <xs:attribute name="region" type="layoutRegionAttrType"/>
    <xs:attribute name="tabRefreshPolicy" type="tabsPanelRefreshAttrType"/>
    <xs:attribute name="cssClass"  type="xs:string"/>
</xs:complexType>

<!--  Data type for allowable values of the tabs panel element's 'workflow' attribute.  -->
<xs:simpleType name="tabsPanelWorkflowAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="free" />
		<xs:enumeration value="enforced" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the tabs panel element's 'tabRefreshPolicy' attribute.  -->
<xs:simpleType name="tabsPanelRefreshAttrType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="refreshOnLoad" />
		<xs:enumeration value="refreshOnSelect" />
		<xs:enumeration value="never" />
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="drawingProjectionTypeEnumeration">
    <xs:restriction base="xs:string">
		<xs:enumeration value="tiled" />
		<xs:enumeration value="isometric" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for a tab page element containing many attributes and child elements -->
<xs:complexType name="tabElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
	    <xs:element name="layout" type="layoutElementType" />
	    <xs:element name="message" type="messageElementType"/>
        <xs:element name="title" type="richTitleElementType" />
		<xs:element name="panel" type="panelElementType" />
		<xs:element name="tabs" type="tabsElementType" />
		<xs:element name="style" type="styleElementType" />
		<xs:element name="js" type="jsElementType"/>
		<xs:element name="css" type="cssElementType" />
		<xs:element ref="dataSource" />
    </xs:choice>
    <xs:attribute name="id" type="elementIdType" />
    <xs:attribute name="name" type="nameIdentifier" />
    <xs:attribute name="selected"  type="booleanExpression" />
    <xs:attribute name="hidden"  type="booleanExpression" />
    <xs:attribute name="enabled"  type="booleanExpression" />
    <xs:attribute name="useFrame" type="booleanExpression" />
    <xs:attribute name="file" type="xs:Name" />
    <xs:attribute name="imageName" type="xs:Name" />
</xs:complexType>

<!--  Data type for a panel's event element  -->
<xs:complexType name="panelEventElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
        <xs:element name="title" type="titleElementType" />
		<xs:element name="tooltip" type="tooltipElementType" />
		<xs:element name="command" type="commandElementType" />
    </xs:choice>
    <xs:attribute name="type" type="nameIdentifier"/>
</xs:complexType>

<xs:complexType name="templateElementType" mixed="true">
    <xs:sequence>
      <xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>	
    <xs:attribute name="id" type="xs:string" />
</xs:complexType>

<!--  Data type for a view element containing many attributes and child elements, typically the document element of an AXVW -->
<xs:element name="view" >
    <xs:complexType>
	<xs:choice minOccurs="0" maxOccurs="unbounded">
	    <xs:element name="designInfo" type="designInfoElementType" />
	    <xs:element name="layout" type="layoutElementType" />
	    <xs:element name="message" type="messageElementType"/>
	    <xs:element name="title" type="richTitleElementType" />
	    <xs:element ref="dataSource" />
	    <xs:element name="panel" type="panelElementType"/>
	    <xs:element name="tabs" type="tabsElementType" />
	    <xs:element name="js" type="jsElementType"/>
	    <!-- xs:element name="script" type="scriptElementType"/ -->
	    <xs:element name="css" type="cssElementType" />
	    <xs:element name="style" type="styleElementType" />
	    <xs:element name="template" type="templateElementType" />
	    <xs:element name="report" type="reportElementType" />
	</xs:choice>
	<xs:attribute name="version" type="xs:decimal"/>
	<xs:attribute name="type" type="nameIdentifier"/>
	<xs:attribute name="docType" type="viewDocTypeEnumeration"/>
    <xs:attribute name="showLoadProgress" type="xs:boolean"/>
    </xs:complexType>

    <xs:unique name="duplicateIdsForbidden">
	  <!-- select all elements except panel/action -->
	  <!-- 
	  <xs:selector xpath=".//*"/>
      <xs:field xpath="layout/@id|layoutRegion/@id|dataSource/@id|panel/@id|tabs/@id|tab/@id|dataSource/field/@id|panel/field/@id|span/@id"/>
	  -->
	  <xs:selector xpath="layout|layoutRegion|dataSource|panel|tabs|tab|dataSource/field|panel/field|span"/>
      <xs:field xpath="@id"/>
    </xs:unique>

</xs:element>

<!--	Data type for a view element in pre 17.2 format or for mdx or xsl processing. 
	Allow legacy views as included views, that is via <panel file="legacy_view.axvw" useFrame="true"/>  -->
<xs:element name="afmXmlView">
    <xs:complexType>
        <xs:sequence minOccurs="0" maxOccurs="unbounded" >
            <xs:any processContents="lax" />
        </xs:sequence>	
    </xs:complexType>
</xs:element>

<!--  Data type for panel html element included by (rather than verbatim within) a panel element.  -->
<xs:complexType name="htmlElementType" > 
    <xs:sequence minOccurs="0" maxOccurs="unbounded" >
        <xs:any processContents="lax" />
    </xs:sequence>	
</xs:complexType>

<xs:element name="html" type="htmlElementType">
</xs:element>


<xs:simpleType name="paginatedReportOutputType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="pdf" />
		<xs:enumeration value="doc" />
		<xs:enumeration value="xls" />
		<xs:enumeration value="html" />
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="paginatedReportDwgFileType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="png" />
		<xs:enumeration value="jpg" />
		<xs:enumeration value="gif" />
    </xs:restriction>
</xs:simpleType>

<xs:complexType name="reportElementType">
    <xs:attribute name="dwgnameField" type="xs:string" />
	<xs:attribute name="outputFileType" type="paginatedReportOutputType" />
	<xs:attribute name="drawingHighlightFileFormat" type="paginatedReportDwgFileType" />
	<xs:attribute name="labelHeight" type="xs:string" />
	<xs:attribute name="documentTemplate" type="xs:string" />
	<xs:attribute name="showHeader" type="xs:boolean" />
	<xs:attribute name="showFooter" type="xs:boolean" />
	<xs:attribute name="orientation" type="pageOrientationType" />
</xs:complexType>

<xs:simpleType name="pageOrientationType">
    <xs:restriction base="xs:string">
		<xs:enumeration value="portrait" />
		<xs:enumeration value="landscape" />
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="viewDocTypeEnumeration">
    <xs:restriction base="xs:string">
		<xs:enumeration value="html" />
		<xs:enumeration value="html4/strict" />
		<xs:enumeration value="html4/loose" />
		<xs:enumeration value="html4/frameset" />
    </xs:restriction>
</xs:simpleType>

</xs:schema>