<?xml version="1.0" encoding="ISO-8859-1" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" >

<!-- xs:attribute name="id" type="xs:ID" -->

<!--  Short string data type    -->
<xs:simpleType name="string64">
    <xs:restriction base="xs:token">
        <xs:maxLength value="64"/>
    </xs:restriction>
</xs:simpleType>

<!-- Medium length string data type -->
<xs:simpleType name="string256">
    <xs:restriction base="xs:token">
        <xs:maxLength value="256"/>
    </xs:restriction>
</xs:simpleType>

<!--  Long string data type  -->
<xs:simpleType name="string648">
    <xs:restriction base="xs:token">
        <xs:maxLength value="648"/>
    </xs:restriction>
</xs:simpleType>

<!--  Very Long string data type  -->
<xs:simpleType name="string1024">
    <xs:restriction base="xs:string">
        <xs:maxLength value="1024"/>
    </xs:restriction>
</xs:simpleType>

<!--  Very Very Long string data type  -->
<xs:simpleType name="string16384">
    <xs:restriction base="xs:string">
        <xs:maxLength value="16384"/>
    </xs:restriction>
</xs:simpleType>

<!--  Short XML Name data type. Must start with a letter, -, or +. Disallows :, \, , and whitespace.  -->
<xs:simpleType name="name64">
    <xs:restriction base="xs:NMTOKEN">
        <xs:maxLength value="64"/>
    </xs:restriction>
</xs:simpleType>

<!--  Short string used for column widths and such. May be an integer 1 - 999, or percentage 1% - 100%.  -->
<xs:simpleType name="sizeToken">
    <xs:restriction base="xs:token">
        <xs:pattern value="\d{1,2}%|100%|\d{1,3}|\d{1,3}px"/>
    </xs:restriction>
</xs:simpleType>

<!--  String used for boolean flags. May be 'true', 'false' or a macro starting with '${' and ending with '}'.  -->
<xs:simpleType name="booleanString256">
    <xs:restriction base="string256">
        <xs:pattern value="true|false|$\{.+\}"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the panel element's 'type' attribute.  -->
<xs:simpleType name="panelTypeAttrType">
    <xs:restriction base="xs:token">
		<xs:enumeration value="console" />
		<xs:enumeration value="grid"/>
		<xs:enumeration value="form"/>
		<xs:enumeration value="html" />
		<xs:enumeration value="view"/>
		<xs:enumeration value="columnReport" />
		<xs:enumeration value="tree" />
		<xs:enumeration value="hierTree" />
		<xs:enumeration value="control" />
		<xs:enumeration value="dataView" />
		<xs:enumeration value="crossTable" />
		<xs:enumeration value="drawing" />
		<xs:enumeration value="chart" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for number of columns in a panel of type 'form'.  -->
<xs:simpleType name="formPanelColumnsAttrType">
    <xs:restriction base="xs:integer">
        <xs:minInclusive value="1"/>
        <xs:maxInclusive value="8"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource/table element's 'role' attribute.  -->
<xs:simpleType name="databaseRoleAttrType">
    <xs:restriction base="xs:token">
	<xs:enumeration value="data" />
	<xs:enumeration value="schema" />
	<xs:enumeration value="security" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource element's 'type' attribute.  -->
<xs:simpleType name="dataSourceTypeAttrType">
    <xs:restriction base="xs:token">
    <xs:enumeration value="grouping" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource element's 'type' attribute.  -->
<xs:simpleType name="dataSourceFieldFormulaAttrType">
    <xs:restriction base="xs:token">
    <xs:enumeration value="sum" />
    <xs:enumeration value="count" />
    <xs:enumeration value="avg" />
    <xs:enumeration value="min" />
    <xs:enumeration value="max" />
    <xs:enumeration value="year" />
    <xs:enumeration value="quarter" />
    <xs:enumeration value="month" />
    <xs:enumeration value="week" />
    <xs:enumeration value="day" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the layout element's 'type' attribute.  -->
<xs:simpleType name="layoutTypeAttrType">
    <xs:restriction base="xs:token">
        <xs:enumeration value="borderLayout"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the panel or tabs element's 'region' attribute.  -->
<xs:simpleType name="layoutRegionAttrType">
    <xs:restriction base="xs:Name">
        <xs:enumeration value="north"/>
        <xs:enumeration value="south"/>
        <xs:enumeration value="east"/>
        <xs:enumeration value="west"/>
        <xs:enumeration value="center"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the panel or tabs element's 'region' attribute.  -->
<xs:complexType name="layoutRegionElementType">
    <xs:attribute name="id" type="name64" />
    <xs:attribute name="initialSize" type="sizeToken" />
    <xs:attribute name="split" type="xs:boolean" />
    <xs:attribute name="autoScroll" type="xs:boolean" />
    <xs:attribute name="minSize" type="sizeToken" />
    <xs:attribute name="maxSize" type="sizeToken" />
    <xs:attribute name="collapsed" type="booleanString256" />
</xs:complexType>

<!--  Data type for layout element.  -->
<xs:complexType name="layoutElementType" >
    <xs:all >
        <xs:element name="north" type="layoutRegionElementType" minOccurs="0"/>
		<xs:element name="south" type="layoutRegionElementType" minOccurs="0"/>
		<xs:element name="east"  type="layoutRegionElementType" minOccurs="0"/>
		<xs:element name="west"  type="layoutRegionElementType" minOccurs="0"/>
		<xs:element name="center" type="layoutRegionElementType" minOccurs="0"/>
    </xs:all>
    <xs:attribute name="id" type="name64" />
    <xs:attribute name="containingLayout" type="name64" />
    <xs:attribute name="region" type="layoutRegionAttrType" />
    <xs:attribute name="type" type="layoutTypeAttrType"/>
</xs:complexType>

<!--  Data type for layout element.  -->
<xs:complexType name="designInfoElementType" >
    <xs:attribute name="isAlterable" type="xs:boolean" />
    <xs:attribute name="pattern" type="string256" />
    <xs:attribute name="type" type="string256" />
</xs:complexType>

<!--  Data type for allowable values of the command element's 'type' attribute.  -->
<xs:simpleType name="commandTypeAttrType">
    <xs:restriction base="xs:token">
        <xs:enumeration value="showPanel"/>
        <xs:enumeration value="clearPanel"/>
        <xs:enumeration value="exportPanel"/>
		<xs:enumeration value="openDialog"/>
        <xs:enumeration value="closeDialog"/>
        <xs:enumeration value="loadView"/>
        <xs:enumeration value="selectTabPage"/>
        <xs:enumeration value="createTabPage"/>
        <xs:enumeration value="closeTabPage"/>
        <xs:enumeration value="saveForm"/>
        <xs:enumeration value="clearForm"/>
        <xs:enumeration value="deleteRecord"/>
        <xs:enumeration value="deleteSelectedRows"/>
        <xs:enumeration value="workflowRule"/>
        <xs:enumeration value="callFunction"/>
        <xs:enumeration value="selectValue"/>
        <xs:enumeration value="checkInNewDocument"/>
        <xs:enumeration value="checkInNewDocumentVersion"/>
        <xs:enumeration value="checkOutDocument"/>
        <xs:enumeration value="showDocument"/>
        <xs:enumeration value="lockDocument"/>
        <xs:enumeration value="deleteDocument"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the command element's 'action' attribute.  -->
<xs:simpleType name="commandActionAttrType">
    <xs:restriction base="xs:token">
        <xs:enumeration value="show"/>
        <xs:enumeration value="hide"/>
        <xs:enumeration value="toggle"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for message element's simple content complex type.  -->
<xs:complexType name="messageElementType">
    <xs:simpleContent>
        <xs:extension base="string648">
            <xs:attribute name="translatable" type="xs:boolean" />
			<xs:attribute name="name" type="string64" />
	</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for view/panel/field/action title element's simple content complex type.  -->
<xs:complexType name="titleElementType"> 
    <xs:simpleContent>
        <xs:extension base="string256">
            <xs:attribute name="translatable" type="xs:boolean" />
			<xs:attribute name="hidden" type="booleanString256" />
			<xs:attribute name="cssClass" type="string64" />
	</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for dataSource field title element's simple content complex type.  -->
<xs:complexType name="simpleTitleElementType"> 
    <xs:simpleContent>
        <xs:extension base="string256">
            <xs:attribute name="translatable" type="xs:boolean" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for dataSource element's complex type and constraints on table and field names.  -->
<xs:element name="dataSource">
    <xs:complexType>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="table" type="dataSourceTableElementType" />
			<xs:element name="field" type="dataSourceFieldElementType" />
			<xs:element name="parameter" type="dataSourceParameterElementType" />
			<xs:element name="restriction" type="dataSourceRestrictionElementType" />
			<xs:element name="sql" type="dataSourceSqlElementType" />
			<xs:element name="sortField" type="sortFieldElementType" />
		</xs:choice>
		<xs:attribute name="id" type="name64" />
		<xs:attribute name="databaseRole" type="databaseRoleAttrType" />
		<xs:attribute name="type" type="dataSourceTypeAttrType" />
		<xs:attribute name="distinct" type="booleanString256" />
		<xs:attribute name="applyVpaRestrictions" type="booleanString256" />
    </xs:complexType>

    <xs:unique name="uniqueTable">
        <xs:selector xpath="table" />
        <xs:field xpath="@name" />
    </xs:unique>
    <xs:keyref name="DataSourceField" refer="uniqueTable" >
      <xs:selector xpath="field" />
      <xs:field xpath="@table" />
    </xs:keyref>
</xs:element>

<!--  Data type for dataSource's table element.  -->
<xs:complexType name="dataSourceTableElementType">
    <xs:attribute name="name" type="string64" use="required" />
    <xs:attribute name="role" type="dataSourceTableRoleAttrType" default="main" />
</xs:complexType>

<!--  Data type for dataSource's field element.  -->
<xs:complexType name="dataSourceFieldElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="sql" type="dataSourceSqlElementType" />
        <xs:element name="title" type="simpleTitleElementType" />
    </xs:choice>
    <xs:attribute name="table" type="name64" />
    <xs:attribute name="name" type="name64" use="required" />
    <xs:attribute name="dataType" type="name64" />
    <xs:attribute name="size" type="xs:positiveInteger" />
    <xs:attribute name="decimals" type="xs:nonNegativeInteger" />
    <xs:attribute name="groupBy" type="xs:boolean" />
    <xs:attribute name="formula" type="dataSourceFieldFormulaAttrType" />
    <xs:attribute name="baseField" type="name64" />
    <xs:attribute name="showTotals" type="booleanString256" />
    <xs:attribute name="hidden" type="booleanString256" />
	<xs:attribute name="required" type="xs:boolean" />
	<xs:attribute name="optional" type="xs:boolean" />
</xs:complexType>

<!--  Data type for allowable values of the dataSource/table element's 'role' attribute.  -->
<xs:simpleType name="dataSourceTableRoleAttrType">
    <xs:restriction base="name64">
	<xs:enumeration value="main" />
	<xs:enumeration value="standard" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for dataSource's parameter element.  -->
<xs:complexType name="dataSourceParameterElementType">
    <xs:attribute name="name" type="string64" use="required" />
    <xs:attribute name="dataType" type="panelFieldDataTypeAttrType" />
    <xs:attribute name="value" type="string64" />
</xs:complexType>

<!--  Data type for dataSource's sql element.  -->
<xs:complexType name="dataSourceSqlElementType">
    <xs:simpleContent>
        <xs:extension base="string16384">
            <xs:attribute name="dialect" type="dataSourceSqlDialectAttrType" />
        </xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for allowable values of the dataSource/sql element's 'dialect' attribute.  -->
<xs:simpleType name="dataSourceSqlDialectAttrType">
    <xs:restriction base="name64">
		<xs:enumeration value="generic" />
		<xs:enumeration value="sybase" />
		<xs:enumeration value="oracle" />
		<xs:enumeration value="sqlserver" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for dataSource's restriction element.  -->
<xs:complexType name="dataSourceRestrictionElementType">
    <xs:sequence >
        <xs:element name="clause" type="dataSourceRestrictionClauseElementType" minOccurs="0"  maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="type" type="dataSourceRestrictionTypeAttrType" use="required" />
    <xs:attribute name="sql" type="string1024" />
    <xs:attribute name="relop" type="dataSourceRestrictionRelopAttrType" />
</xs:complexType>

<!--  Data type for dataSource's restriction clause element.  -->
<xs:complexType name="dataSourceRestrictionClauseElementType">
    <xs:attribute name="relop" type="dataSourceRestrictionRelopAttrType" />
    <xs:attribute name="op" type="dataSourceRestrictionOpAttrType" />
    <xs:attribute name="table" type="string64" use="required" />
    <xs:attribute name="name" type="string64" use="required" />
    <xs:attribute name="value" type="string64" use="required" />
</xs:complexType>

<!--  Data type for allowable values of the dataSource/restriction element's 'type' attribute.  -->
<xs:simpleType name="dataSourceRestrictionTypeAttrType">
    <xs:restriction base="name64">
	<xs:enumeration value="sql" />
	<xs:enumeration value="parsed" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource/restriction element's 'relop' attribute.  -->
<xs:simpleType name="dataSourceRestrictionRelopAttrType">
    <xs:restriction base="string64">
	<xs:enumeration value="and" />
	<xs:enumeration value="AND" />
	<xs:enumeration value=")and(" />
	<xs:enumeration value=")AND(" />
	<xs:enumeration value=") and (" />
	<xs:enumeration value=") AND (" />
	<xs:enumeration value="or" />
	<xs:enumeration value="OR" />
	<xs:enumeration value=")or(" />
	<xs:enumeration value=")OR(" />
	<xs:enumeration value=") or (" />
	<xs:enumeration value=") OR (" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the dataSource/restriction element's 'op' attribute.  -->
<xs:simpleType name="dataSourceRestrictionOpAttrType">
    <xs:restriction base="string64">
	<xs:enumeration value="=" />
	<xs:enumeration value="&gt;" />
	<xs:enumeration value="&gt;=" />
	<xs:enumeration value="&lt;" />
	<xs:enumeration value="&lt;=" />
	<xs:enumeration value="IS NOT NULL" />
	<xs:enumeration value="IS NULL" />
	<xs:enumeration value="LIKE" />
	<xs:enumeration value="NOT LIKE" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for JavaScript include element.  -->
<xs:complexType name="jsElementType"> 
    <xs:attribute name="url" type="string256" />
    <xs:attribute name="file" type="string256" />
</xs:complexType>

<!--  Data type for JavaScript include or reference element.  -->
<xs:complexType name="scriptElementType"> 
     <xs:simpleContent>
        <xs:extension base="string16384">
			<xs:attribute name="src" type="string256" />
			<xs:attribute name="language" type="string256" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for CSS include element.  -->
<xs:complexType name="cssElementType" > 
    <xs:simpleContent>
        <xs:extension base="string648">
			<xs:attribute name="url" type="string256" />
			<xs:attribute name="file" type="string256" />
			<xs:attribute name="media" type="string64" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!-- DO WE REALLY ALLOW THIS IN YALTA 5 ? -->
<!--  Data type for element allowing inline inclusion of CSS.  -->
<xs:complexType name="styleElementType" > 
    <xs:simpleContent>
        <xs:extension base="string648">
			<xs:attribute name="type" type="string64" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for action/field element's tooltip child element.  -->
<xs:complexType name="tooltipElementType" > 
    <xs:simpleContent>
        <xs:extension base="string648">
		    <xs:attribute name="translatable" type="xs:boolean" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for allowable values of the command element's 'type' attribute.  -->
<xs:complexType name="commandElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
        <xs:element name="title" type="titleElementType" />
    </xs:choice>
    <xs:attribute name="id" type="name64" />
    <xs:attribute name="type" type="commandTypeAttrType" use="required" />
    <xs:attribute name="functionName" type="string648" /> 
    <xs:attribute name="target" type="string64" /> 
    <xs:attribute name="panelId" type="name64" /> 
    <xs:attribute name="tabPanelId" type="name64" /> 
    <xs:attribute name="parentPanelId" type="name64" /> 
    <xs:attribute name="viewName" type="string256" /> 
    <xs:attribute name="tabPageName" type="name64" /> 
    <xs:attribute name="tableName" type="name64" /> 
    <xs:attribute name="fieldName" type="name64" /> 
    <xs:attribute name="show" type="booleanString256" /> 
    <xs:attribute name="includeHeader" type="booleanString256" /> 
    <xs:attribute name="outputType" type="name64" /> 
    <xs:attribute name="ruleId" type="name64" /> 
    <xs:attribute name="newRecord" type="booleanString256" /> 
    <xs:attribute name="clearRestriction" type="xs:boolean" /> 
    <xs:attribute name="applyParentRestriction" type="xs:boolean" /> 
    <xs:attribute name="applySelectionRestriction" type="xs:boolean" />
    <xs:attribute name="applyMultipleSelectionRestriction" type="xs:boolean" />
    <xs:attribute name="fieldNames"  type="string256"/>
    <xs:attribute name="selectFieldNames"  type="string256"/>
    <xs:attribute name="visibleFieldNames"  type="string256"/>
    <xs:attribute name="showIndex" type="booleanString256" /> 
    <xs:attribute name="restriction"  type="string648"/>
    <xs:attribute name="actionListener"  type="string256"/>
    <xs:attribute name="closeButton" type="booleanString256" /> 
    <xs:attribute name="width" type="sizeToken" />
    <xs:attribute name="height" type="sizeToken" />
    <xs:attribute name="layout" type="name64" />
    <xs:attribute name="region" type="name64" />
    <xs:attribute name="action" type="commandActionAttrType" />
    <xs:attribute name="workflowRuleId"  type="name64"/>
    <xs:attribute name="selectValueType" type="name64" />
	<xs:attribute name="orientation" type="name64" />
    <xs:attribute name="autoComplete" type="xs:boolean" /> 
    <xs:attribute name="isDistinct" type="xs:boolean" /> 
</xs:complexType>

<!--  Data type for the action element allowable within a panel.  -->
<xs:complexType name="panelActionElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
        <xs:element name="title" type="titleElementType" />
		<xs:element name="tooltip" type="tooltipElementType" />
		<xs:element name="command" type="commandElementType" />
		<xs:element name="action" type="panelActionElementType" />
    </xs:choice>
    <xs:attribute name="id" type="name64" />
    <xs:attribute name="type" type="name64"/>
    <xs:attribute name="onclick"  type="string256"/>
    <xs:attribute name="enabled" type="booleanString256"/>
    <xs:attribute name="hidden" type="booleanString256"/>
    <xs:attribute name="workflowRuleId"  type="name64"/>
    <xs:attribute name="frame"  type="name64"/>
    <xs:attribute name="newWindow" type="xs:boolean"/>
    <xs:attribute name="cssClass"  type="string64"/>
    <xs:attribute name="imageName"  type="string256"/>
	<xs:attribute name="checked" type="booleanString256"/>
    <xs:attribute name="mainAction" type="booleanString256"/>
</xs:complexType>

<xs:complexType name="panelFieldOptionElementType">
    <xs:simpleContent>
        <xs:extension base="string256">
		    <xs:attribute name="value" type="string256" />
		    <xs:attribute name="translatable" type="xs:boolean" />
			<xs:attribute name="selected" type="xs:boolean" />
		</xs:extension>
    </xs:simpleContent>
</xs:complexType>

<!--  Data type for the field element allowable within a panel.  -->
<xs:complexType name="panelFieldElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="title" type="titleElementType" /> 
		<xs:element name="html" type="panelHtmlElementType" />
		<xs:element name="action" type="panelActionElementType" />
		<xs:element name="tooltip" type="tooltipElementType" />
		<xs:element name="command" type="commandElementType" />
		<xs:element name="option" type="panelFieldOptionElementType" />
    </xs:choice >
    <xs:attribute name="id" type="name64" />
    <xs:attribute name="table" type="name64" />
    <xs:attribute name="name" type="name64" />
    <xs:attribute name="alias" type="name64" />
    <xs:attribute name="controlType" type="panelFieldControlTypeAttrType" />
    <xs:attribute name="colspan" type="xs:positiveInteger" />
    <xs:attribute name="rowspan" type="xs:positiveInteger" />    
    <xs:attribute name="style" type="string256" />
    <xs:attribute name="required" type="booleanString256"/>
	<xs:attribute name="optional" type="xs:boolean" />
    <xs:attribute name="readOnly" type="booleanString256"/>
    <xs:attribute name="onclick" type="string256" />
    <xs:attribute name="onchange" type="string256" />
    <xs:attribute name="onfocus" type="string256" />
    <xs:attribute name="onblur" type="string256" />
    <xs:attribute name="onkeypress" type="string256" />
    <xs:attribute name="imageName" type="string256" />
    <xs:attribute name="dataType" type="panelFieldDataTypeAttrType" />
    <xs:attribute name="size" type="xs:positiveInteger" />
    <xs:attribute name="decimals" type="xs:nonNegativeInteger" />
    <xs:attribute name="width" type="sizeToken" />    
    <xs:attribute name="height" type="sizeToken" />
    <xs:attribute name="value" type="string64" />
    <xs:attribute name="labelClass" type="name64" />
    <xs:attribute name="cssClass" type="string64" />
    <xs:attribute name="hidden" type="booleanString256" />
    <xs:attribute name="enabled" type="booleanString256" />
    <xs:attribute name="showSelectValueAction" type="booleanString256" />
    <xs:attribute name="showLabel" type="booleanString256" />
    <xs:attribute name="showText" type="booleanString256" />
    <xs:attribute name="showTotals" type="booleanString256" />
    <xs:attribute name="displayField" type="string64" />
    <xs:attribute name="op" type="string256" />
    <xs:attribute name="selectValueType" type="name64" />
	<!-- TODO should this be enumerated as bottom and top? Are there other values? -->
	<xs:attribute name="actionsPosition" type="name64" />
</xs:complexType>

<!--  Data type for the fieldSet element allowable within a panel.  -->
<xs:complexType name="panelFieldSetElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="title" type="string256" /> 
        <xs:element name="field" type="panelFieldElementType" /> 
		<xs:element name="action" type="panelActionElementType" />
    </xs:choice >
    <xs:attribute name="layout" type="name64" />
    <xs:attribute name="colspan" type="xs:positiveInteger" />
</xs:complexType>

<!--  Data type for allowable values of the panel/field element's 'controlType' attribute.  -->
<xs:simpleType name="panelFieldControlTypeAttrType">
    <xs:restriction base="name64">
	<xs:enumeration value="button" />
	<xs:enumeration value="link" />
	<xs:enumeration value="image" />
	<xs:enumeration value="text" />
	<xs:enumeration value="password" />
	<xs:enumeration value="multiEdit" />
	<xs:enumeration value="checkBox" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the panel/field element's 'dataType' attribute.  -->
<xs:simpleType name="panelFieldDataTypeAttrType">
    <xs:restriction base="name64">
	<xs:enumeration value="number" />
	<xs:enumeration value="integer" />
	<xs:enumeration value="date" />
	<xs:enumeration value="time" />
	<xs:enumeration value="text" />
	<xs:enumeration value="verbatim" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the form panel element's 'labelsPosition' attribute.  -->
<xs:simpleType name="formPanelLabelPosAttrType">
    <xs:restriction base="name64">
	<xs:enumeration value="top" />
	<xs:enumeration value="left" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the form panel element's 'buttonsPosition' attribute.  -->
<xs:simpleType name="formPanelButtonPosAttrType">
    <xs:restriction base="name64">
    <xs:enumeration value="top" />
    <xs:enumeration value="footer" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the form panel element's 'tabOrder' attribute.  -->
<xs:simpleType name="formPanelTabOrderAttrType">
    <xs:restriction base="name64">
    <xs:enumeration value="row" />
    <xs:enumeration value="column" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for a panel's html element.  -->
<xs:complexType name="panelHtmlElementType">
    <xs:sequence minOccurs="0" maxOccurs="unbounded" >
        <xs:any processContents="lax" />
    </xs:sequence>	
</xs:complexType>

<!--  Data type for an element specifying the sort order of a (grid) panel.  -->
<xs:complexType name="sortFieldElementType" >
    <xs:attribute name="table" type="name64" />
    <xs:attribute name="name" type="name64" use="required" />
    <xs:attribute name="ascending" type="xs:boolean" />
</xs:complexType>

<!--  Data type for an element specifying the column on which a miniconsole panel will get an index  -->
<xs:complexType name="panelIndexElementType" >
    <xs:attribute name="table" type="name64" use="required" />
    <xs:attribute name="name" type="name64" use="required" />
</xs:complexType>

<xs:simpleType name="zeroToOneDecimal">
    <xs:restriction base="xs:decimal">
        <xs:pattern value="0|1|1.(0)+|0.(\d)+"/>
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart's color attributes.  
		pattern's are ORed together
-->
<xs:simpleType name="rgbValueAttrType">
    <xs:restriction base="xs:token">
        <xs:pattern value="0|0.(\d)+|1|1.(0)+"/>
		<xs:pattern value="0x[0-9a-f]{6}" />
    </xs:restriction>
</xs:simpleType>

<xs:simpleType name="unknownSimpleType">
  <xs:restriction base="xs:integer">
    <xs:pattern value="[0-9,A-F][0-9,A-F][0-9,A-F]([0-9,A-F][0-9,A-F][0-9,A-F])?"/>
  </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart's 'fillType' attribute.  -->
<xs:simpleType name="fillTypeAttrType">
    <xs:restriction base="xs:token">
	<xs:enumeration value="solid" />
	<xs:enumeration value="linearGradient" />
	<xs:enumeration value="radialGradient" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis element's 'labelFunction' attribute.  -->
<xs:simpleType name="legendLocationAttrType">
    <xs:restriction base="xs:token">
	<xs:enumeration value="right" />
	<xs:enumeration value="left" />
	<xs:enumeration value="top" />
	<xs:enumeration value="topLeft" />
	<xs:enumeration value="topRight" />
	<xs:enumeration value="bottom" />
	<xs:enumeration value="bottomLeft" />
	<xs:enumeration value="bottomRight" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis data label location.  -->
<xs:simpleType name="dataLabelLocationAttrType">
    <xs:restriction base="xs:token">
	<xs:enumeration value="inside" />
	<xs:enumeration value="outside" />
	<xs:enumeration value="none" />
	<xs:enumeration value="insideWithCallout" />
	<xs:enumeration value="topRightcallout" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis element's 'labelFunction' attribute.  -->
<xs:simpleType name="labelFunctionAttrType">
    <xs:restriction base="xs:token">
	<xs:enumeration value="data" />
	<xs:enumeration value="schema" />
	<xs:enumeration value="security" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis element's 'labelFunction' attribute.  -->
<xs:simpleType name="chartDataAxisTypeAttrType">
    <xs:restriction base="xs:token">
	<xs:enumeration value="pie" />
	<xs:enumeration value="line" />
	<xs:enumeration value="column" />
	<xs:enumeration value="bar" />
	<xs:enumeration value="area" />
    </xs:restriction>
</xs:simpleType>

<!-- Parameter Type to allow users to set up what kind of parameter to be passed from outer dataSource -->
<xs:simpleType name="chartDataAxisParameterTypeAttrType">
    <xs:restriction base="xs:token">
	<xs:enumeration value="text" />
	<xs:enumeration value="date" />
	<xs:enumeration value="time" />
	<xs:enumeration value="number" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the chart axis element's 'type' attribute.  -->
<xs:simpleType name="chartLabelPositionAttrType">
    <xs:restriction base="xs:token">
	<xs:enumeration value="callout" />
	<xs:enumeration value="inside" />
	<xs:enumeration value="outside" />
	<xs:enumeration value="insideWithCallout" />
	<xs:enumeration value="none" />
    </xs:restriction>
</xs:simpleType>

<xs:complexType name="dataAxisElementType" >
    <xs:sequence>
        <xs:element name="title" type="titleElementType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence> 
    <xs:attribute name="dataSource"  type="xs:Name"/>
    <xs:attribute name="table" type="name64" use="required" />
    <xs:attribute name="field" type="name64" use="required" />
    <xs:attribute name="type" type="chartDataAxisTypeAttrType" />
    <xs:attribute name="autoCalculateTickSizeInterval" type="xs:boolean" />
    <xs:attribute name="tickSizeInterval" type="xs:positiveInteger" />
    <xs:attribute name="labelPosition" type="chartLabelPositionAttrType" />
    <xs:attribute name="labelFunction" type="name64" />
    <xs:attribute name="parameterType" type="chartDataAxisParameterTypeAttrType" />    
    <xs:attribute name="displayAxis" type="booleanString256" />
	<xs:attribute name="displayVerticalAxis" type="booleanString256" />
</xs:complexType>

<xs:complexType name="groupingAxisElementType" >
    <xs:sequence>
        <xs:element name="title" type="titleElementType" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="dataSource"  type="xs:Name"/>
    <xs:attribute name="table" type="name64" use="required" />
    <xs:attribute name="field" type="name64" use="required" />
    <xs:attribute name="labelFunction" type="name64" />
	<xs:attribute name="labelRotation" type="xs:integer" />
</xs:complexType>

<xs:complexType name="secondaryGroupingAxisElementType" >
    <xs:attribute name="dataSource"  type="xs:Name"/>
    <xs:attribute name="table" type="name64" use="required" />
    <xs:attribute name="field" type="name64" use="required" />
</xs:complexType>

<xs:complexType name="actionbarElementType" >
    <xs:sequence >
        <xs:element name="action" type="panelActionElementType" minOccurs="1"  maxOccurs="unbounded" />
    </xs:sequence>
</xs:complexType>

<!--  Data type for a panel element containing many attributes and child elements -->
<xs:complexType name="panelElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="title" type="titleElementType" /> 
		<xs:element name="action" type="panelActionElementType" /> 
		<xs:element name="event" type="panelEventElementType" />
		<xs:element name="field" type="panelFieldElementType" />
		<xs:element name="html" type="panelHtmlElementType" />
		<xs:element name="level" type="levelElementType" /> 
		<xs:element name="sortField" type="sortFieldElementType" />
		<xs:element name="indexField" type="panelIndexElementType" />
		<xs:element name="groupingAxis" type="groupingAxisElementType" />
		<xs:element name="secondaryGroupingAxis" type="secondaryGroupingAxisElementType" />
		<xs:element name="dataAxis" type="dataAxisElementType" />
		<xs:element name="fieldset" type="panelFieldSetElementType" />
		<xs:element name="actionbar" type="actionbarElementType" />
		<xs:element name="instructions" type="string1024" />
		<xs:element name="panel" type="panelElementType" />
    </xs:choice>	
    <xs:attribute name="id" type="name64" />
    <xs:attribute name="type" type="panelTypeAttrType" use="required" />
    <xs:attribute name="controlType"  type="name64"/>
    <xs:attribute name="dataSource"  type="xs:Name"/>
    <xs:attribute name="columns" type="formPanelColumnsAttrType" />
    <xs:attribute name="layoutRegion"  type="name64"/>
    <xs:attribute name="layout"  type="name64"/>
    <xs:attribute name="region"  type="name64"/>
    <xs:attribute name="showOnLoad" type="booleanString256" />
    <xs:attribute name="hidden" type="booleanString256" />
    <xs:attribute name="headerClass" type="name64" />
    <xs:attribute name="labelsPosition" type="formPanelLabelPosAttrType" />
    <xs:attribute name="buttonsPosition" type="formPanelButtonPosAttrType" />
    <xs:attribute name="formLabelWidth" type="sizeToken" />
    <xs:attribute name="tabOrder" type="formPanelTabOrderAttrType" />
    <xs:attribute name="selectionEnabled" type="booleanString256" />
    <xs:attribute name="multipleSelectionEnabled" type="booleanString256" />
    <xs:attribute name="recordLimit" type="xs:nonNegativeInteger" />
    <xs:attribute name="selectValueType" type="name64" />
    <xs:attribute name="beforeRefresh"  type="name64"/>
    <xs:attribute name="afterRefresh"  type="name64"/>
    <xs:attribute name="beforeSave"  type="name64"/>
    <xs:attribute name="useFrame" type="booleanString256" />
    <xs:attribute name="showAsDialog" type="booleanString256" />
    <xs:attribute name="file" type="name64" />
    <xs:attribute name="level" type="xs:nonNegativeInteger" />
    <xs:attribute name="style" type="name64" />
    <xs:attribute name="newRecord" type="booleanString256" />
    <xs:attribute name="format" type="name64" />
    <xs:attribute name="showLabels" type="xs:boolean" />
    <!-- start chart specific attributes -->
    <xs:attribute name="width" type="sizeToken" />
    <xs:attribute name="height" type="sizeToken" />
    <xs:attribute name="showLegendOnLoad" type="xs:boolean" default="true"/>
    <xs:attribute name="showLegendAsPopUp" type="xs:boolean"/>	
    <xs:attribute name="legendLocation" type="legendLocationAttrType" />
    <xs:attribute name="showDataTips" type="xs:boolean" default="true"/>
    <xs:attribute name="backgroundColor" type="rgbValueAttrType" />
    <xs:attribute name="fillColor" type="rgbValueAttrType" />
    <xs:attribute name="fillType" type="fillTypeAttrType" default="solid"/>
    <xs:attribute name="percentGradientChange" type="zeroToOneDecimal" />
    <xs:attribute name="percentTransparency" type="zeroToOneDecimal" />
    <!-- end chart specific attributes -->
    <xs:attribute name="refreshWorkflowRuleId" type="name64" />
    <xs:attribute name="saveWorkflowRuleId" type="name64" />
    <xs:attribute name="deleteWorkflowRuleId" type="name64" />
    <xs:attribute name="clearWorkflowRuleId" type="name64" />	
	<xs:attribute name="cssClass" type="string64" />
	<xs:attribute name="bodyCssClass" type="string64" />
	<xs:attribute name="categoryDataSource" type="name64" />	
    <xs:attribute name="showIndexAndFilterOnLoad" type="booleanString256" />
    <xs:attribute name="collapsed" type="booleanString256" />
    <xs:attribute name="sortEnabled" type="booleanString256" />
</xs:complexType>

<!--  Data type for allowable values of the panel or tabs element's 'level' attribute.  -->
<xs:complexType name="levelElementType">
    <xs:attribute name="dataSource" type="xs:Name"/>
    <xs:attribute name="bodyTemplate" type="name64"/>
</xs:complexType>

<!--  Data type for a tabs panel element containing many attributes and child elements -->
<xs:complexType name="tabsElementType">
    <xs:sequence >
        <xs:element name="title" type="simpleTitleElementType" minOccurs="0" maxOccurs="1"/>
		<xs:element name="event" type="panelEventElementType" minOccurs="0"  maxOccurs="unbounded" />
        <xs:element name="tab" type="tabElementType" minOccurs="1"  maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="id" type="name64" />
    <xs:attribute name="workflow" type="tabsPanelWorkflowAttrType" />
    <xs:attribute name="layoutRegion"  type="name64"/>
    <xs:attribute name="layout"  type="name64"/>
    <xs:attribute name="region"  type="name64"/>
    <xs:attribute name="tabRefreshPolicy" type="tabsPanelRefreshAttrType"/>
    <xs:attribute name="cssClass"  type="string64"/>
</xs:complexType>

<!--  Data type for allowable values of the tabs panel element's 'workflow' attribute.  -->
<xs:simpleType name="tabsPanelWorkflowAttrType">
    <xs:restriction base="name64">
	<xs:enumeration value="free" />
	<xs:enumeration value="enforced" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for allowable values of the tabs panel element's 'tabRefreshPolicy' attribute.  -->
<xs:simpleType name="tabsPanelRefreshAttrType">
    <xs:restriction base="name64">
    <xs:enumeration value="refreshOnLoad" />
    <xs:enumeration value="refreshOnSelect" />
    <xs:enumeration value="never" />
    </xs:restriction>
</xs:simpleType>

<!--  Data type for a tab page element containing many attributes and child elements -->
<xs:complexType name="tabElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
	    <xs:element name="layout" type="layoutElementType" />
	    <xs:element name="message" type="messageElementType"/>
        <xs:element name="title" type="titleElementType" />
		<xs:element ref="dataSource" />
		<xs:element name="panel" type="panelElementType" />
		<xs:element name="tabs" type="tabsElementType" />
		<xs:element name="js" type="jsElementType"/>
		<xs:element name="css" type="cssElementType" />
		<xs:element name="style" type="styleElementType" />
    </xs:choice>
    <xs:attribute name="id" type="name64" />
    <xs:attribute name="name" type="string64" />
    <xs:attribute name="selected"  type="booleanString256" />
    <xs:attribute name="hidden"  type="booleanString256" />
    <xs:attribute name="enabled"  type="booleanString256" />
    <xs:attribute name="useFrame" type="booleanString256" />
    <xs:attribute name="file" type="name64" />
    <xs:attribute name="imageName" type="name64" />
</xs:complexType>

<!--  Data type for a panel's event element  -->
<xs:complexType name="panelEventElementType">
    <xs:choice minOccurs="0" maxOccurs="unbounded" >
        <xs:element name="title" type="titleElementType" />
	<xs:element name="tooltip" type="tooltipElementType" />
	<xs:element name="command" type="commandElementType" />
    </xs:choice>
    <xs:attribute name="type" type="name64"/>
</xs:complexType>

<xs:complexType name="templateElementType" mixed="true">
    <xs:sequence>
      <xs:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>	
    <xs:attribute name="id" type="xs:string" />
</xs:complexType>

<!--  Data type for a view element containing many attributes and child elements, typically the document element of an AXVW -->
<xs:element name="view" >
    <xs:complexType>
	<xs:choice minOccurs="0" maxOccurs="unbounded">
	    <xs:element name="designInfo" type="designInfoElementType" />
	    <xs:element name="layout" type="layoutElementType" />
	    <xs:element name="message" type="messageElementType"/>
	    <xs:element name="title" type="titleElementType" />
	    <xs:element ref="dataSource" />
	    <xs:element name="panel" type="panelElementType"/>
	    <xs:element name="tabs" type="tabsElementType" />
	    <xs:element name="js" type="jsElementType"/>
	    <xs:element name="script" type="scriptElementType"/>
	    <xs:element name="css" type="cssElementType" />
	    <xs:element name="style" type="styleElementType" />
	    <xs:element name="template" type="templateElementType" />
	</xs:choice>
	<xs:attribute name="version" type="xs:decimal"/>
	<xs:attribute name="type" type="name64"/>
    <xs:attribute name="showLoadProgress" type="xs:boolean"/>
    </xs:complexType>
</xs:element>

<!--	Data type for a view element in pre 17.2 format or for mdx or xsl processing. 
	Allow legacy views as included views, that is via <panel file="legacy_view.axvw" useFrame="true"/>  -->
<xs:element name="afmXmlView">
    <xs:complexType>
        <xs:sequence minOccurs="0" maxOccurs="unbounded" >
            <xs:any processContents="lax" />
        </xs:sequence>	
    </xs:complexType>
</xs:element>

<!--  Data type for panel html element included by (rather than verbatim within) a panel element.  -->
<xs:complexType name="htmlElementType" > 
    <xs:sequence minOccurs="0" maxOccurs="unbounded" >
        <xs:any processContents="lax" />
    </xs:sequence>	
</xs:complexType>

<xs:element name="html" type="htmlElementType">
</xs:element>

</xs:schema>