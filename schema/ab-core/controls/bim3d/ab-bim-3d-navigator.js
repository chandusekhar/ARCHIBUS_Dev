!function(d,c){"object"==typeof module&&module.exports?module.exports=c():"function"==typeof define&&define.amd?define(c):d.Spinner=c()}(this,function(){function H(f,e){var h,g=document.createElement(f||"div");for(h in e){g[h]=e[h]}return g}function G(e){for(var d=1,f=arguments.length;f>d;d++){e.appendChild(arguments[d])}return e}function F(K,J,I,o){var n=["opacity",J,~~(100*K),I,o].join("-"),m=0.01+I/o*100,l=Math.max(1-(1-K)/J*(100-m),K),k=u.substring(0,u.indexOf("Animation")).toLowerCase(),j=k&&"-"+k+"-"||"";return r[n]||(t.insertRule("@"+j+"keyframes "+n+"{0%{opacity:"+l+"}"+m+"%{opacity:"+K+"}"+(m+0.01)+"%{opacity:1}"+(m+J)%100+"%{opacity:"+K+"}100%{opacity:"+l+"}}",t.cssRules.length),r[n]=1),n}function E(g,f){var j,i,h=g.style;if(f=f.charAt(0).toUpperCase()+f.slice(1),void 0!==h[f]){return f}for(i=0;i<s.length;i++){if(j=s[i]+f,void 0!==h[j]){return j}}}function D(e,d){for(var f in d){e.style[E(e,f)||f]=d[f]}return e}function C(f){for(var e=1;e<arguments.length;e++){var h=arguments[e];for(var g in h){void 0===f[g]&&(f[g]=h[g])}}return f}function B(d,c){return"string"==typeof d?d:d[c%d.length]}function A(b){this.opts=C(b||{},A.defaults,q)}function v(){function a(d,e){return H("<"+d+' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">',e)}t.addRule(".spin-vml","behavior:url(#default#VML)"),A.prototype.lines=function(K,J){function I(){return D(a("group",{coordsize:e+" "+e,coordorigin:-g+" "+-g}),{width:e,height:e})}function o(d,j,f){G(b,G(D(I(),{rotation:360/J.lines*d+"deg",left:~~j}),G(D(a("roundrect",{arcsize:J.corners}),{width:g,height:J.scale*J.width,left:J.scale*J.radius,top:-J.scale*J.width>>1,filter:f}),a("fill",{color:B(J.color,d),opacity:J.opacity}),a("stroke",{opacity:0}))))}var n,g=J.scale*(J.length+J.width),e=2*J.scale*g,c=-(J.width+J.length)*J.scale*2+"px",b=D(I(),{position:"absolute",top:c,left:c});if(J.shadow){for(n=1;n<=J.lines;n++){o(n,-2,"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)")}}for(n=1;n<=J.lines;n++){o(n)}return G(K,b)},A.prototype.opacity=function(g,f,j,i){var h=g.firstChild;i=i.shadow&&i.lines||0,h&&f+i<h.childNodes.length&&(h=h.childNodes[f+i],h=h&&h.firstChild,h=h&&h.firstChild,h&&(h.opacity=j))}}var u,t,s=["webkit","Moz","ms","O"],r={},q={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:"#000",opacity:0.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2000000000,className:"spinner",top:"50%",left:"50%",shadow:!1,hwaccel:!1,position:"absolute"};if(A.defaults={},C(A.prototype,{spin:function(Q){this.stop();var P=this,O=P.opts,N=P.el=H(null,{className:O.className});if(D(N,{position:O.position,width:0,zIndex:O.zIndex,left:O.left,top:O.top}),Q&&Q.insertBefore(N,Q.firstChild||null),N.setAttribute("role","progressbar"),P.lines(N,P.opts),!u){var M,L=0,K=(O.lines-1)*(1-O.direction)/2,J=O.fps,I=J/O.speed,j=(1-O.opacity)/(I*O.trail/100),e=I/O.lines;!function a(){L++;for(var b=0;b<O.lines;b++){M=Math.max(1-(L+(O.lines-b)*e)%I*j,O.opacity),P.opacity(N,b*O.direction+K,M,O)}P.timeout=P.el&&setTimeout(a,~~(1000/J))}()}return P},stop:function(){var b=this.el;return b&&(clearTimeout(this.timeout),b.parentNode&&b.parentNode.removeChild(b),this.el=void 0),this},lines:function(j,g){function e(d,f){return D(H(),{position:"absolute",width:g.scale*(g.length+g.width)+"px",height:g.scale*g.width+"px",background:d,boxShadow:f,transformOrigin:"left",transform:"rotate("+~~(360/g.lines*b+g.rotate)+"deg) translate("+g.scale*g.radius+"px,0)",borderRadius:(g.corners*g.scale*g.width>>1)+"px"})}for(var c,b=0,a=(g.lines-1)*(1-g.direction)/2;b<g.lines;b++){c=D(H(),{position:"absolute",top:1+~(g.scale*g.width/2)+"px",transform:g.hwaccel?"translate3d(0,0,0)":"",opacity:g.opacity,animation:u&&F(g.opacity,g.trail,a+b*g.direction,g.lines)+" "+1/g.speed+"s linear infinite"}),g.shadow&&G(c,D(e("#000","0 0 4px #000"),{top:"2px"})),G(j,G(c,e(B(g.color,b),"0 0 1px rgba(0,0,0,.1)")))}return j},opacity:function(e,d,f){d<e.childNodes.length&&(e.childNodes[d].style.opacity=f)}}),"undefined"!=typeof document){t=function(){var a=H("style",{type:"text/css"});return G(document.getElementsByTagName("head")[0],a),a.sheet||a.styleSheet}();var p=D(H("group"),{behavior:"url(#default#VML)"});!E(p,"transform")&&p.adj?v():u=E(p,"animation")}return A});var THREE={REVISION:"74"};if(typeof define==="function"&&define.amd){define("three",THREE)}else{if("undefined"!==typeof exports&&"undefined"!==typeof module){module.exports=THREE}}if(Number.EPSILON===undefined){Number.EPSILON=Math.pow(2,-52)}if(Math.sign===undefined){Math.sign=function(a){return(a<0)?-1:(a>0)?1:+a}}if(Function.prototype.name===undefined&&Object.defineProperty!==undefined){Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}})}if(Object.assign===undefined){Object.defineProperty(Object,"assign",{writable:true,configurable:true,value:function(h){if(h===undefined||h===null){throw new TypeError("Cannot convert first argument to object")}var k=Object(h);for(var b=1,a=arguments.length;b!==a;++b){var e=arguments[b];if(e===undefined||e===null){continue}e=Object(e);var c=Object.keys(e);for(var d=0,g=c.length;d!==g;++d){var j=c[d];var f=Object.getOwnPropertyDescriptor(e,j);if(f!==undefined&&f.enumerable){k[j]=e[j]}}}return k}})}THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.MinEquation=103;THREE.MaxEquation=104;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.NeverDepth=0;THREE.AlwaysDepth=1;THREE.LessDepth=2;THREE.LessEqualDepth=3;THREE.EqualDepth=4;THREE.GreaterEqualDepth=5;THREE.GreaterDepth=6;THREE.NotEqualDepth=7;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=300;THREE.CubeReflectionMapping=301;THREE.CubeRefractionMapping=302;THREE.EquirectangularReflectionMapping=303;THREE.EquirectangularRefractionMapping=304;THREE.SphericalReflectionMapping=305;THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.HalfFloatType=1025;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGBEFormat=THREE.RGBAFormat;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.RGB_PVRTC_4BPPV1_Format=2100;THREE.RGB_PVRTC_2BPPV1_Format=2101;THREE.RGBA_PVRTC_4BPPV1_Format=2102;THREE.RGBA_PVRTC_2BPPV1_Format=2103;THREE.RGB_ETC1_Format=2151;THREE.LoopOnce=2200;THREE.LoopRepeat=2201;THREE.LoopPingPong=2202;THREE.InterpolateDiscrete=2300;THREE.InterpolateLinear=2301;THREE.InterpolateSmooth=2302;THREE.ZeroCurvatureEnding=2400;THREE.ZeroSlopeEnding=2401;THREE.WrapAroundEnding=2402;THREE.TrianglesDrawMode=0;THREE.TriangleStripDrawMode=1;THREE.TriangleFanDrawMode=2;THREE.Color=function(a){if(arguments.length===3){return this.fromArray(arguments)}return this.set(a)};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){if(a instanceof THREE.Color){this.copy(a)}else{if(typeof a==="number"){this.setHex(a)}else{if(typeof a==="string"){this.setStyle(a)}}}return this},setScalar:function(a){this.r=a;this.g=a;this.b=a},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(d,c,a){this.r=d;this.g=c;this.b=a;return this},setHSL:function(){function a(d,c,b){if(b<0){b+=1}if(b>1){b-=1}if(b<1/6){return d+(c-d)*6*b}if(b<1/2){return c}if(b<2/3){return d+(c-d)*6*(2/3-b)}return d}return function(d,c,b){d=THREE.Math.euclideanModulo(d,1);c=THREE.Math.clamp(c,0,1);b=THREE.Math.clamp(b,0,1);if(c===0){this.r=this.g=this.b=b}else{var f=b<=0.5?b*(1+c):b+c-(b*c);var e=(2*b)-f;this.r=a(e,f,d+1/3);this.g=a(e,f,d);this.b=a(e,f,d-1/3)}return this}}(),setStyle:function(a){function j(h){if(h===undefined){return}if(parseFloat(h)<1){console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}}var d;if(d=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(a)){var f;var b=d[1];var i=d[2];switch(b){case"rgb":case"rgba":if(f=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){this.r=Math.min(255,parseInt(f[1],10))/255;this.g=Math.min(255,parseInt(f[2],10))/255;this.b=Math.min(255,parseInt(f[3],10))/255;j(f[5]);return this}if(f=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){this.r=Math.min(100,parseInt(f[1],10))/100;this.g=Math.min(100,parseInt(f[2],10))/100;this.b=Math.min(100,parseInt(f[3],10))/100;j(f[5]);return this}break;case"hsl":case"hsla":if(f=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i)){var g=parseFloat(f[1])/360;var n=parseInt(f[2],10)/100;var e=parseInt(f[3],10)/100;j(f[5]);return this.setHSL(g,n,e)}break}}else{if(d=/^\#([A-Fa-f0-9]+)$/.exec(a)){var c=d[1];var k=c.length;if(k===3){this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255;this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255;this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255;return this}else{if(k===6){this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255;this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255;this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255;return this}}}}if(a&&a.length>0){var c=THREE.ColorKeywords[a];if(c!==undefined){this.setHex(c)}else{console.warn("THREE.Color: Unknown color "+a)}}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a,b){if(b===undefined){b=2}this.r=Math.pow(a.r,b);this.g=Math.pow(a.g,b);this.b=Math.pow(a.b,b);return this},copyLinearToGamma:function(b,c){if(c===undefined){c=2}var a=(c>0)?(1/c):1;this.r=Math.pow(b.r,a);this.g=Math.pow(b.g,a);this.b=Math.pow(b.b,a);return this},convertGammaToLinear:function(){var d=this.r,c=this.g,a=this.b;this.r=d*d;this.g=c*c;this.b=a*a;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return(this.r*255)<<16^(this.g*255)<<8^(this.b*255)<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(m){var l=m||{h:0,s:0,l:0};var a=this.r,e=this.g,h=this.b;var i=Math.max(a,e,h);var c=Math.min(a,e,h);var f,d;var k=(c+i)/2;if(c===i){f=0;d=0}else{var j=i-c;d=k<=0.5?j/(i+c):j/(2-i-c);switch(i){case a:f=(e-h)/j+(e<h?6:0);break;case e:f=(h-a)/j+2;break;case h:f=(a-e)/j+4;break}f/=6}l.h=f;l.s=d;l.l=k;return l},getStyle:function(){return"rgb("+((this.r*255)|0)+","+((this.g*255)|0)+","+((this.b*255)|0)+")"},offsetHSL:function(d,c,a){var b=this.getHSL();b.h+=d;b.s+=c;b.l+=a;this.setHSL(b.h,b.s,b.l);return this},add:function(a){this.r+=a.r;this.g+=a.g;this.b+=a.b;return this},addColors:function(b,a){this.r=b.r+a.r;this.g=b.g+a.g;this.b=b.b+a.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},equals:function(a){return(a.r===this.r)&&(a.g===this.g)&&(a.b===this.b)},fromArray:function(b,a){if(a===undefined){a=0}this.r=b[a];this.g=b[a+1];this.b=b[a+2];return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this.r;b[a+1]=this.g;b[a+2]=this.b;return b}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,d,c,b){this._x=a||0;this._y=d||0;this._z=c||0;this._w=(b!==undefined)?b:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a;this.onChangeCallback()},set:function(a,d,c,b){this._x=a;this._y=d;this._z=c;this._w=b;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(a){this._x=a.x;this._y=a.y;this._z=a.z;this._w=a.w;this.onChangeCallback();return this},setFromEuler:function(a,d){if(a instanceof THREE.Euler===false){throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var f=Math.cos(a._x/2);var e=Math.cos(a._y/2);var c=Math.cos(a._z/2);var i=Math.sin(a._x/2);var h=Math.sin(a._y/2);var g=Math.sin(a._z/2);var b=a.order;if(b==="XYZ"){this._x=i*e*c+f*h*g;this._y=f*h*c-i*e*g;this._z=f*e*g+i*h*c;this._w=f*e*c-i*h*g}else{if(b==="YXZ"){this._x=i*e*c+f*h*g;this._y=f*h*c-i*e*g;this._z=f*e*g-i*h*c;this._w=f*e*c+i*h*g}else{if(b==="ZXY"){this._x=i*e*c-f*h*g;this._y=f*h*c+i*e*g;this._z=f*e*g+i*h*c;this._w=f*e*c-i*h*g}else{if(b==="ZYX"){this._x=i*e*c-f*h*g;this._y=f*h*c+i*e*g;this._z=f*e*g-i*h*c;this._w=f*e*c+i*h*g}else{if(b==="YZX"){this._x=i*e*c+f*h*g;this._y=f*h*c+i*e*g;this._z=f*e*g-i*h*c;this._w=f*e*c-i*h*g}else{if(b==="XZY"){this._x=i*e*c-f*h*g;this._y=f*h*c-i*e*g;this._z=f*e*g+i*h*c;this._w=f*e*c+i*h*g}}}}}}if(d!==false){this.onChangeCallback()}return this},setFromAxisAngle:function(c,d){var a=d/2,b=Math.sin(a);this._x=c.x*b;this._y=c.y*b;this._z=c.z*b;this._w=Math.cos(a);this.onChangeCallback();return this},setFromRotationMatrix:function(e){var d=e.elements,i=d[0],h=d[4],g=d[8],c=d[1],b=d[5],a=d[9],l=d[2],k=d[6],j=d[10],f=i+b+j,n;if(f>0){n=0.5/Math.sqrt(f+1);this._w=0.25/n;this._x=(k-a)*n;this._y=(g-l)*n;this._z=(c-h)*n}else{if(i>b&&i>j){n=2*Math.sqrt(1+i-b-j);this._w=(k-a)/n;this._x=0.25*n;this._y=(h+c)/n;this._z=(g+l)/n}else{if(b>j){n=2*Math.sqrt(1+b-i-j);this._w=(g-l)/n;this._x=(h+c)/n;this._y=0.25*n;this._z=(a+k)/n}else{n=2*Math.sqrt(1+j-i-b);this._w=(c-h)/n;this._x=(g+l)/n;this._y=(a+k)/n;this._z=0.25*n}}}this.onChangeCallback();return this},setFromUnitVectors:function(){var c,a;var b=0.000001;return function(d,e){if(c===undefined){c=new THREE.Vector3()}a=d.dot(e)+1;if(a<b){a=0;if(Math.abs(d.x)>Math.abs(d.z)){c.set(-d.y,d.x,0)}else{c.set(0,-d.z,d.y)}}else{c.crossVectors(d,e)}this._x=c.x;this._y=c.y;this._z=c.z;this._w=a;this.normalize();return this}}(),inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();if(a===0){this._x=0;this._y=0;this._z=0;this._w=1}else{a=1/a;this._x=this._x*a;this._y=this._y*a;this._z=this._z*a;this._w=this._w*a}this.onChangeCallback();return this},multiply:function(a,b){if(b!==undefined){console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.");return this.multiplyQuaternions(a,b)}return this.multiplyQuaternions(this,a)},multiplyQuaternions:function(l,k){var i=l._x,h=l._y,g=l._z,j=l._w;var e=k._x,d=k._y,c=k._z,f=k._w;this._x=i*f+j*e+h*c-g*d;this._y=h*f+j*d+g*e-i*c;this._z=g*f+j*c+i*d-h*e;this._w=j*f-i*e-h*d-g*c;this.onChangeCallback();return this},slerp:function(c,k){if(k===0){return this}if(k===1){return this.copy(c)}var i=this._x,h=this._y,g=this._z,j=this._w;var b=j*c._w+i*c._x+h*c._y+g*c._z;if(b<0){this._w=-c._w;this._x=-c._x;this._y=-c._y;this._z=-c._z;b=-b}else{this.copy(c)}if(b>=1){this._w=j;this._x=i;this._y=h;this._z=g;return this}var a=Math.sqrt(1-b*b);if(Math.abs(a)<0.001){this._w=0.5*(j+this._w);this._x=0.5*(i+this._x);this._y=0.5*(h+this._y);this._z=0.5*(g+this._z);return this}var d=Math.atan2(a,b);var f=Math.sin((1-k)*d)/a,e=Math.sin(k*d)/a;this._w=(j*f+this._w*e);this._x=(i*f+this._x*e);this._y=(h*f+this._y*e);this._z=(g*f+this._z*e);this.onChangeCallback();return this},equals:function(a){return(a._x===this._x)&&(a._y===this._y)&&(a._z===this._z)&&(a._w===this._w)},fromArray:function(b,a){if(a===undefined){a=0}this._x=b[a];this._y=b[a+1];this._z=b[a+2];this._w=b[a+3];this.onChangeCallback();return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this._x;b[a+1]=this._y;b[a+2]=this._z;b[a+3]=this._w;return b},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};Object.assign(THREE.Quaternion,{slerp:function(d,c,b,a){return b.copy(d).slerp(c,a)},slerpFlat:function(D,h,C,p,B,o,m){var A=C[p+0],e=C[p+1],l=C[p+2],j=C[p+3],u=B[o+0],d=B[o+1],k=B[o+2],i=B[o+3];if(j!==i||A!==u||e!==d||l!==k){var n=1-m,b=A*u+e*d+l*k+j*i,q=(b>=0?1:-1),c=1-b*b;if(c>Number.EPSILON){var a=Math.sqrt(c),r=Math.atan2(a,b*q);n=Math.sin(n*r)/a;m=Math.sin(m*r)/a}var g=m*q;A=A*n+u*g;e=e*n+d*g;l=l*n+k*g;j=j*n+i*g;if(n===1-m){var v=1/Math.sqrt(A*A+e*e+l*l+j*j);A*=v;e*=v;l*=v;j*=v}}D[h]=A;D[h+1]=e;D[h+2]=l;D[h+3]=j}});THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(a){this.x=a},get height(){return this.y},set height(a){this.y=a},set:function(a,b){this.x=a;this.y=b;return this},setScalar:function(a){this.x=a;this.y=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(b,a){if(a!==undefined){console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(b,a)}this.x+=b.x;this.y+=b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;return this},sub:function(b,a){if(a!==undefined){console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(b,a)}this.x-=b.x;this.y-=b.y;return this},subScalar:function(a){this.x-=a;this.y-=a;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},multiply:function(a){this.x*=a.x;this.y*=a.y;return this},multiplyScalar:function(a){if(isFinite(a)){this.x*=a;this.y*=a}else{this.x=0;this.y=0}return this},divide:function(a){this.x/=a.x;this.y/=a.y;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);return this},clamp:function(b,a){this.x=Math.max(b.x,Math.min(a.x,this.x));this.y=Math.max(b.y,Math.min(a.y,this.y));return this},clampScalar:function(){var c,b;return function a(d,e){if(c===undefined){c=new THREE.Vector2();b=new THREE.Vector2()}c.set(d,d);b.set(e,e);return this.clamp(c,b)}}(),clampLength:function(b,a){var c=this.length();this.multiplyScalar(Math.max(b,Math.min(a,c))/c);return this},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){this.x=-this.x;this.y=-this.y;return this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var a=Math.atan2(this.y,this.x);if(a<0){a+=2*Math.PI}return a},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(c){var b=this.x-c.x,a=this.y-c.y;return b*b+a*a},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},lerpVectors:function(c,b,a){this.subVectors(b,c).multiplyScalar(a).add(c);return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y))},fromArray:function(b,a){if(a===undefined){a=0}this.x=b[a];this.y=b[a+1];return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this.x;b[a+1]=this.y;return b},fromAttribute:function(b,a,c){if(c===undefined){c=0}a=a*b.itemSize+c;this.x=b.array[a];this.y=b.array[a+1];return this},rotateAround:function(b,e){var g=Math.cos(e),d=Math.sin(e);var a=this.x-b.x;var f=this.y-b.y;this.x=a*g-f*d+b.x;this.y=a*d+f*g+b.y;return this}};THREE.Vector3=function(a,c,b){this.x=a||0;this.y=c||0;this.z=b||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,c,b){this.x=a;this.y=c;this.z=b;return this},setScalar:function(a){this.x=a;this.y=a;this.z=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(b,a){if(a!==undefined){console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(b,a)}this.x+=b.x;this.y+=b.y;this.z+=b.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;return this},sub:function(b,a){if(a!==undefined){console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(b,a)}this.x-=b.x;this.y-=b.y;this.z-=b.z;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},multiply:function(b,a){if(a!==undefined){console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(b,a)}this.x*=b.x;this.y*=b.y;this.z*=b.z;return this},multiplyScalar:function(a){if(isFinite(a)){this.x*=a;this.y*=a;this.z*=a}else{this.x=0;this.y=0;this.z=0}return this},multiplyVectors:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},applyEuler:function(){var a;return function b(c){if(c instanceof THREE.Euler===false){console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.")}if(a===undefined){a=new THREE.Quaternion()}this.applyQuaternion(a.setFromEuler(c));return this}}(),applyAxisAngle:function(){var a;return function b(c,d){if(a===undefined){a=new THREE.Quaternion()}this.applyQuaternion(a.setFromAxisAngle(c,d));return this}}(),applyMatrix3:function(b){var a=this.x;var f=this.y;var d=this.z;var c=b.elements;this.x=c[0]*a+c[3]*f+c[6]*d;this.y=c[1]*a+c[4]*f+c[7]*d;this.z=c[2]*a+c[5]*f+c[8]*d;return this},applyMatrix4:function(b){var a=this.x,f=this.y,d=this.z;var c=b.elements;this.x=c[0]*a+c[4]*f+c[8]*d+c[12];this.y=c[1]*a+c[5]*f+c[9]*d+c[13];this.z=c[2]*a+c[6]*f+c[10]*d+c[14];return this},applyProjection:function(b){var a=this.x,h=this.y,g=this.z;var c=b.elements;var f=1/(c[3]*a+c[7]*h+c[11]*g+c[15]);this.x=(c[0]*a+c[4]*h+c[8]*g+c[12])*f;this.y=(c[1]*a+c[5]*h+c[9]*g+c[13])*f;this.z=(c[2]*a+c[6]*h+c[10]*g+c[14])*f;return this},applyQuaternion:function(a){var l=this.x;var k=this.y;var j=this.z;var h=a.x;var g=a.y;var f=a.z;var i=a.w;var d=i*l+g*j-f*k;var c=i*k+f*l-h*j;var b=i*j+h*k-g*l;var e=-h*l-g*k-f*j;this.x=d*i+e*-h+c*-f-b*-g;this.y=c*i+e*-g+b*-h-d*-f;this.z=b*i+e*-f+d*-g-c*-h;return this},project:function(){var a;return function b(c){if(a===undefined){a=new THREE.Matrix4()}a.multiplyMatrices(c.projectionMatrix,a.getInverse(c.matrixWorld));return this.applyProjection(a)}}(),unproject:function(){var a;return function b(c){if(a===undefined){a=new THREE.Matrix4()}a.multiplyMatrices(c.matrixWorld,a.getInverse(c.projectionMatrix));return this.applyProjection(a)}}(),transformDirection:function(b){var a=this.x,f=this.y,d=this.z;var c=b.elements;this.x=c[0]*a+c[4]*f+c[8]*d;this.y=c[1]*a+c[5]*f+c[9]*d;this.z=c[2]*a+c[6]*f+c[10]*d;this.normalize();return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);return this},clamp:function(b,a){this.x=Math.max(b.x,Math.min(a.x,this.x));this.y=Math.max(b.y,Math.min(a.y,this.y));this.z=Math.max(b.z,Math.min(a.z,this.z));return this},clampScalar:function(){var c,b;return function a(d,e){if(c===undefined){c=new THREE.Vector3();b=new THREE.Vector3()}c.set(d,d,d);b.set(e,e,e);return this.clamp(c,b)}}(),clampLength:function(b,a){var c=this.length();this.multiplyScalar(Math.max(b,Math.min(a,c))/c);return this},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);this.z=(this.z<0)?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},lerpVectors:function(c,b,a){this.subVectors(b,c).multiplyScalar(a).add(c);return this},cross:function(c,b){if(b!==undefined){console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(c,b)}var a=this.x,e=this.y,d=this.z;this.x=e*c.z-d*c.y;this.y=d*c.x-a*c.z;this.z=a*c.y-e*c.x;return this},crossVectors:function(d,c){var h=d.x,f=d.y,e=d.z;var j=c.x,i=c.y,g=c.z;this.x=f*g-e*i;this.y=e*j-h*g;this.z=h*i-f*j;return this},projectOnVector:function(){var c,a;return function b(d){if(c===undefined){c=new THREE.Vector3()}c.copy(d).normalize();a=this.dot(c);return this.copy(c).multiplyScalar(a)}}(),projectOnPlane:function(){var b;return function a(c){if(b===undefined){b=new THREE.Vector3()}b.copy(this).projectOnVector(c);return this.sub(b)}}(),reflect:function(){var b;return function a(c){if(b===undefined){b=new THREE.Vector3()}return this.sub(b.copy(c).multiplyScalar(2*this.dot(c)))}}(),angleTo:function(a){var b=this.dot(a)/(Math.sqrt(this.lengthSq()*a.lengthSq()));return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(d){var c=this.x-d.x;var b=this.y-d.y;var a=this.z-d.z;return c*c+b*b+a*a},setFromMatrixPosition:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setFromMatrixScale:function(a){var d=this.set(a.elements[0],a.elements[1],a.elements[2]).length();var c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();var b=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=d;this.y=c;this.z=b;return this},setFromMatrixColumn:function(b,a){var d=b*4;var c=a.elements;this.x=c[d];this.y=c[d+1];this.z=c[d+2];return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z))},fromArray:function(b,a){if(a===undefined){a=0}this.x=b[a];this.y=b[a+1];this.z=b[a+2];return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this.x;b[a+1]=this.y;b[a+2]=this.z;return b},fromAttribute:function(b,a,c){if(c===undefined){c=0}a=a*b.itemSize+c;this.x=b.array[a];this.y=b.array[a+1];this.z=b.array[a+2];return this}};THREE.Vector4=function(a,d,c,b){this.x=a||0;this.y=d||0;this.z=c||0;this.w=(b!==undefined)?b:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,d,c,b){this.x=a;this.y=d;this.z=c;this.w=b;return this},setScalar:function(a){this.x=a;this.y=a;this.z=a;this.w=a;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+a)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=(a.w!==undefined)?a.w:1;return this},add:function(b,a){if(a!==undefined){console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(b,a)}this.x+=b.x;this.y+=b.y;this.z+=b.z;this.w+=b.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},addScaledVector:function(a,b){this.x+=a.x*b;this.y+=a.y*b;this.z+=a.z*b;this.w+=a.w*b;return this},sub:function(b,a){if(a!==undefined){console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(b,a)}this.x-=b.x;this.y-=b.y;this.z-=b.z;this.w-=b.w;return this},subScalar:function(a){this.x-=a;this.y-=a;this.z-=a;this.w-=a;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},multiplyScalar:function(a){if(isFinite(a)){this.x*=a;this.y*=a;this.z*=a;this.w*=a}else{this.x=0;this.y=0;this.z=0;this.w=0}return this},applyMatrix4:function(b){var a=this.x;var g=this.y;var f=this.z;var c=this.w;var d=b.elements;this.x=d[0]*a+d[4]*g+d[8]*f+d[12]*c;this.y=d[1]*a+d[5]*g+d[9]*f+d[13]*c;this.z=d[2]*a+d[6]*g+d[10]*f+d[14]*c;this.w=d[3]*a+d[7]*g+d[11]*f+d[15]*c;return this},divideScalar:function(a){return this.multiplyScalar(1/a)},setAxisAngleFromQuaternion:function(b){this.w=2*Math.acos(b.w);var a=Math.sqrt(1-b.w*b.w);if(a<0.0001){this.x=1;this.y=0;this.z=0}else{this.x=b.x/a;this.y=b.y/a;this.z=b.z/a}return this},setAxisAngleFromRotationMatrix:function(t){var u,j,i,h,D=0.01,k=0.1,g=t.elements,C=g[0],A=g[4],v=g[8],e=g[1],c=g[5],a=g[9],r=g[2],p=g[6],n=g[10];if((Math.abs(A-e)<D)&&(Math.abs(v-r)<D)&&(Math.abs(a-p)<D)){if((Math.abs(A+e)<k)&&(Math.abs(v+r)<k)&&(Math.abs(a+p)<k)&&(Math.abs(C+c+n-3)<k)){this.set(1,0,0,0);return this}u=Math.PI;var f=(C+1)/2;var q=(c+1)/2;var B=(n+1)/2;var d=(A+e)/4;var b=(v+r)/4;var o=(a+p)/4;if((f>q)&&(f>B)){if(f<D){j=0;i=0.707106781;h=0.707106781}else{j=Math.sqrt(f);i=d/j;h=b/j}}else{if(q>B){if(q<D){j=0.707106781;i=0;h=0.707106781}else{i=Math.sqrt(q);j=d/i;h=o/i}}else{if(B<D){j=0.707106781;i=0.707106781;h=0}else{h=Math.sqrt(B);j=b/h;i=o/h}}}this.set(j,i,h,u);return this}var l=Math.sqrt((p-a)*(p-a)+(v-r)*(v-r)+(e-A)*(e-A));if(Math.abs(l)<0.001){l=1}this.x=(p-a)/l;this.y=(v-r)/l;this.z=(e-A)/l;this.w=Math.acos((C+c+n-1)/2);return this},min:function(a){this.x=Math.min(this.x,a.x);this.y=Math.min(this.y,a.y);this.z=Math.min(this.z,a.z);this.w=Math.min(this.w,a.w);return this},max:function(a){this.x=Math.max(this.x,a.x);this.y=Math.max(this.y,a.y);this.z=Math.max(this.z,a.z);this.w=Math.max(this.w,a.w);return this},clamp:function(b,a){this.x=Math.max(b.x,Math.min(a.x,this.x));this.y=Math.max(b.y,Math.min(a.y,this.y));this.z=Math.max(b.z,Math.min(a.z,this.z));this.w=Math.max(b.w,Math.min(a.w,this.w));return this},clampScalar:function(){var c,b;return function a(d,e){if(c===undefined){c=new THREE.Vector4();b=new THREE.Vector4()}c.set(d,d,d,d);b.set(e,e,e,e);return this.clamp(c,b)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);this.z=(this.z<0)?Math.ceil(this.z):Math.floor(this.z);this.w=(this.w<0)?Math.ceil(this.w):Math.floor(this.w);return this},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.multiplyScalar(a/this.length())},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},lerpVectors:function(c,b,a){this.subVectors(b,c).multiplyScalar(a).add(c);return this},equals:function(a){return((a.x===this.x)&&(a.y===this.y)&&(a.z===this.z)&&(a.w===this.w))},fromArray:function(b,a){if(a===undefined){a=0}this.x=b[a];this.y=b[a+1];this.z=b[a+2];this.w=b[a+3];return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this.x;b[a+1]=this.y;b[a+2]=this.z;b[a+3]=this.w;return b},fromAttribute:function(b,a,c){if(c===undefined){c=0}a=a*b.itemSize+c;this.x=b.array[a];this.y=b.array[a+1];this.z=b.array[a+2];this.w=b.array[a+3];return this}};THREE.Euler=function(b,d,c,a){this._x=b||0;this._y=d||0;this._z=c||0;this._order=a||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];THREE.Euler.DefaultOrder="XYZ";THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(a){this._x=a;this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a;this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a;this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a;this.onChangeCallback()},set:function(b,d,c,a){this._x=b;this._y=d;this._z=c;this._order=a||this._order;this.onChangeCallback();return this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(a){this._x=a._x;this._y=a._y;this._z=a._z;this._order=a._order;this.onChangeCallback();return this},setFromRotationMatrix:function(e,f,g){var j=THREE.Math.clamp;var d=e.elements;var k=d[0],i=d[4],h=d[8];var c=d[1],b=d[5],a=d[9];var o=d[2],n=d[6],l=d[10];f=f||this._order;if(f==="XYZ"){this._y=Math.asin(j(h,-1,1));if(Math.abs(h)<0.99999){this._x=Math.atan2(-a,l);this._z=Math.atan2(-i,k)}else{this._x=Math.atan2(n,b);this._z=0}}else{if(f==="YXZ"){this._x=Math.asin(-j(a,-1,1));if(Math.abs(a)<0.99999){this._y=Math.atan2(h,l);this._z=Math.atan2(c,b)}else{this._y=Math.atan2(-o,k);this._z=0}}else{if(f==="ZXY"){this._x=Math.asin(j(n,-1,1));if(Math.abs(n)<0.99999){this._y=Math.atan2(-o,l);this._z=Math.atan2(-i,b)}else{this._y=0;this._z=Math.atan2(c,k)}}else{if(f==="ZYX"){this._y=Math.asin(-j(o,-1,1));if(Math.abs(o)<0.99999){this._x=Math.atan2(n,l);this._z=Math.atan2(c,k)}else{this._x=0;this._z=Math.atan2(-i,b)}}else{if(f==="YZX"){this._z=Math.asin(j(c,-1,1));if(Math.abs(c)<0.99999){this._x=Math.atan2(-a,b);this._y=Math.atan2(-o,k)}else{this._x=0;this._y=Math.atan2(h,l)}}else{if(f==="XZY"){this._z=Math.asin(-j(i,-1,1));if(Math.abs(i)<0.99999){this._x=Math.atan2(n,b);this._y=Math.atan2(h,k)}else{this._x=Math.atan2(-a,l);this._y=0}}else{console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+f)}}}}}}this._order=f;if(g!==false){this.onChangeCallback()}return this},setFromQuaternion:function(){var a;return function(c,b,d){if(a===undefined){a=new THREE.Matrix4()}a.makeRotationFromQuaternion(c);this.setFromRotationMatrix(a,b,d);return this}}(),setFromVector3:function(b,a){return this.set(b.x,b.y,b.z,a||this._order)},reorder:function(){var a=new THREE.Quaternion();return function(b){a.setFromEuler(this);this.setFromQuaternion(a,b)}}(),equals:function(a){return(a._x===this._x)&&(a._y===this._y)&&(a._z===this._z)&&(a._order===this._order)},fromArray:function(a){this._x=a[0];this._y=a[1];this._z=a[2];if(a[3]!==undefined){this._order=a[3]}this.onChangeCallback();return this},toArray:function(b,a){if(b===undefined){b=[]}if(a===undefined){a=0}b[a]=this._x;b[a+1]=this._y;b[a+2]=this._z;b[a+3]=this._order;return b},toVector3:function(a){if(a){return a.set(this._x,this._y,this._z)}else{return new THREE.Vector3(this._x,this._y,this._z)}},onChange:function(a){this.onChangeCallback=a;return this},onChangeCallback:function(){}};THREE.Line3=function(b,a){this.start=(b!==undefined)?b:new THREE.Vector3();this.end=(a!==undefined)?a:new THREE.Vector3()};THREE.Line3.prototype={constructor:THREE.Line3,set:function(b,a){this.start.copy(b);this.end.copy(a);return this},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.start.copy(a.start);this.end.copy(a.end);return this},center:function(b){var a=b||new THREE.Vector3();return a.addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(b){var a=b||new THREE.Vector3();return a.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(c,b){var a=b||new THREE.Vector3();return this.delta(a).multiplyScalar(c).add(this.start)},closestPointToPointParameter:function(){var b=new THREE.Vector3();var a=new THREE.Vector3();return function(c,g){b.subVectors(c,this.start);a.subVectors(this.end,this.start);var f=a.dot(a);var e=a.dot(b);var d=e/f;if(g){d=THREE.Math.clamp(d,0,1)}return d}}(),closestPointToPoint:function(b,e,d){var c=this.closestPointToPointParameter(b,e);var a=d||new THREE.Vector3();return this.delta(a).multiplyScalar(c).add(this.start)},applyMatrix4:function(a){this.start.applyMatrix4(a);this.end.applyMatrix4(a);return this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)}};THREE.Box2=function(b,a){this.min=(b!==undefined)?b:new THREE.Vector2(+Infinity,+Infinity);this.max=(a!==undefined)?a:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(b,a){this.min.copy(b);this.max.copy(a);return this},setFromPoints:function(c){this.makeEmpty();for(var b=0,a=c.length;b<a;b++){this.expandByPoint(c[b])}return this},setFromCenterAndSize:function(){var a=new THREE.Vector2();return function(b,d){var c=a.copy(d).multiplyScalar(0.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);return this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this},isEmpty:function(){return(this.max.x<this.min.x)||(this.max.y<this.min.y)},center:function(b){var a=b||new THREE.Vector2();return a.addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){var a=b||new THREE.Vector2();return a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){if(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y){return false}return true},containsBox:function(a){if((this.min.x<=a.min.x)&&(a.max.x<=this.max.x)&&(this.min.y<=a.min.y)&&(a.max.y<=this.max.y)){return true}return false},getParameter:function(b,c){var a=c||new THREE.Vector2();return a.set((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(a){if(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y){return false}return true},clampPoint:function(b,c){var a=c||new THREE.Vector2();return a.copy(b).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2();return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}};THREE.Box3=function(b,a){this.min=(b!==undefined)?b:new THREE.Vector3(+Infinity,+Infinity,+Infinity);this.max=(a!==undefined)?a:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(b,a){this.min.copy(b);this.max.copy(a);return this},setFromArray:function(g){this.makeEmpty();var e=+Infinity;var d=+Infinity;var c=+Infinity;var b=-Infinity;var a=-Infinity;var m=-Infinity;for(var f=0,l=g.length;f<l;f+=3){var k=g[f];var j=g[f+1];var h=g[f+2];if(k<e){e=k}if(j<d){d=j}if(h<c){c=h}if(k>b){b=k}if(j>a){a=j}if(h>m){m=h}}this.min.set(e,d,c);this.max.set(b,a,m)},setFromPoints:function(c){this.makeEmpty();for(var b=0,a=c.length;b<a;b++){this.expandByPoint(c[b])}return this},setFromCenterAndSize:function(){var a=new THREE.Vector3();return function(b,d){var c=a.copy(d).multiplyScalar(0.5);this.min.copy(b).sub(c);this.max.copy(b).add(c);return this}}(),setFromObject:function(){var a;return function(b){if(a===undefined){a=new THREE.Box3()}var c=this;this.makeEmpty();b.updateMatrixWorld(true);b.traverse(function(d){var e=d.geometry;if(e!==undefined){if(e.boundingBox===null){e.computeBoundingBox()}a.copy(e.boundingBox);a.applyMatrix4(d.matrixWorld);c.union(a)}});return this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},isEmpty:function(){return(this.max.x<this.min.x)||(this.max.y<this.min.y)||(this.max.z<this.min.z)},center:function(b){var a=b||new THREE.Vector3();return a.addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){var a=b||new THREE.Vector3();return a.subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){if(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z){return false}return true},containsBox:function(a){if((this.min.x<=a.min.x)&&(a.max.x<=this.max.x)&&(this.min.y<=a.min.y)&&(a.max.y<=this.max.y)&&(this.min.z<=a.min.z)&&(a.max.z<=this.max.z)){return true}return false},getParameter:function(b,c){var a=c||new THREE.Vector3();return a.set((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y),(b.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(a){if(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z){return false}return true},intersectsSphere:(function(){var a;return function b(c){if(a===undefined){a=new THREE.Vector3()}this.clampPoint(c.center,a);return a.distanceToSquared(c.center)<=(c.radius*c.radius)}})(),intersectsPlane:function(b){var c,a;if(b.normal.x>0){c=b.normal.x*this.min.x;a=b.normal.x*this.max.x}else{c=b.normal.x*this.max.x;a=b.normal.x*this.min.x}if(b.normal.y>0){c+=b.normal.y*this.min.y;a+=b.normal.y*this.max.y}else{c+=b.normal.y*this.max.y;a+=b.normal.y*this.min.y}if(b.normal.z>0){c+=b.normal.z*this.min.z;a+=b.normal.z*this.max.z}else{c+=b.normal.z*this.max.z;a+=b.normal.z*this.min.z}return(c<=b.constant&&a>=b.constant)},clampPoint:function(b,c){var a=c||new THREE.Vector3();return a.copy(b).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3();return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3();return function(c){var b=c||new THREE.Sphere();b.center=this.center();b.radius=this.size(a).length()*0.5;return b}}(),intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},applyMatrix4:function(){var a=[new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3()];return function(b){a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b);a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b);a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b);a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b);a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b);a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b);a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b);a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b);this.makeEmpty();this.setFromPoints(a);return this}}(),translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)}};THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]);if(arguments.length>0){console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(h,g,f,e,d,c,a,j,i){var b=this.elements;b[0]=h;b[3]=g;b[6]=f;b[1]=e;b[4]=d;b[7]=c;b[2]=a;b[5]=j;b[8]=i;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(a){var b=a.elements;this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]);return this},applyToVector3Array:function(){var a;return function(f,e,d){if(a===undefined){a=new THREE.Vector3()}if(e===undefined){e=0}if(d===undefined){d=f.length}for(var c=0,b=e;c<d;c+=3,b+=3){a.fromArray(f,b);a.applyMatrix3(this);a.toArray(f,b)}return f}}(),applyToBuffer:function(){var b;return function a(c,g,f){if(b===undefined){b=new THREE.Vector3()}if(g===undefined){g=0}if(f===undefined){f=c.length/c.itemSize}for(var e=0,d=g;e<f;e++,d++){b.x=c.getX(d);b.y=c.getY(d);b.z=c.getZ(d);b.applyMatrix3(this);c.setXYZ(b.x,b.y,b.z)}return c}}(),multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var j=this.elements;var s=j[0],r=j[1],q=j[2],p=j[3],o=j[4],n=j[5],m=j[6],l=j[7],k=j[8];return s*o*k-s*n*l-r*p*k+r*n*m+q*p*l-q*o*m},getInverse:function(a,b){var d=a.elements;var f=this.elements;f[0]=d[10]*d[5]-d[6]*d[9];f[1]=-d[10]*d[1]+d[2]*d[9];f[2]=d[6]*d[1]-d[2]*d[5];f[3]=-d[10]*d[4]+d[6]*d[8];f[4]=d[10]*d[0]-d[2]*d[8];f[5]=-d[6]*d[0]+d[2]*d[4];f[6]=d[9]*d[4]-d[5]*d[8];f[7]=-d[9]*d[0]+d[1]*d[8];f[8]=d[5]*d[0]-d[1]*d[4];var c=d[0]*f[0]+d[1]*f[3]+d[2]*f[6];if(c===0){var e="THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";if(b||false){throw new Error(e)}else{console.warn(e)}this.identity();return this}this.multiplyScalar(1/c);return this},transpose:function(){var b,a=this.elements;b=a[1];a[1]=a[3];a[3]=b;b=a[2];a[2]=a[6];a[6]=b;b=a[5];a[5]=a[7];a[7]=b;return this},flattenToArrayOffset:function(c,b){var a=this.elements;c[b]=a[0];c[b+1]=a[1];c[b+2]=a[2];c[b+3]=a[3];c[b+4]=a[4];c[b+5]=a[5];c[b+6]=a[6];c[b+7]=a[7];c[b+8]=a[8];return c},getNormalMatrix:function(a){this.getInverse(a).transpose();return this},transposeIntoArray:function(b){var a=this.elements;b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return this},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]}};THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);if(arguments.length>0){console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(n,m,k,i,f,e,d,c,a,q,p,o,l,j,h,g){var b=this.elements;b[0]=n;b[4]=m;b[8]=k;b[12]=i;b[1]=f;b[5]=e;b[9]=d;b[13]=c;b[2]=a;b[6]=q;b[10]=p;b[14]=o;b[3]=l;b[7]=j;b[11]=h;b[15]=g;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},clone:function(){return new THREE.Matrix4().fromArray(this.elements)},copy:function(a){this.elements.set(a.elements);return this},copyPosition:function(a){var c=this.elements;var b=a.elements;c[12]=b[12];c[13]=b[13];c[14]=b[14];return this},extractBasis:function(b,a,c){var d=this.elements;b.set(d[0],d[1],d[2]);a.set(d[4],d[5],d[6]);c.set(d[8],d[9],d[10]);return this},makeBasis:function(b,a,c){this.set(b.x,a.x,c.x,0,b.y,a.y,c.y,0,b.z,a.z,c.z,0,0,0,0,1);return this},extractRotation:function(){var a;return function(b){if(a===undefined){a=new THREE.Vector3()}var g=this.elements;var f=b.elements;var e=1/a.set(f[0],f[1],f[2]).length();var d=1/a.set(f[4],f[5],f[6]).length();var c=1/a.set(f[8],f[9],f[10]).length();g[0]=f[0]*e;g[1]=f[1]*e;g[2]=f[2]*e;g[4]=f[4]*d;g[5]=f[5]*d;g[6]=f[6]*d;g[8]=f[8]*c;g[9]=f[9]*c;g[10]=f[10]*c;return this}}(),makeRotationFromEuler:function(o){if(o instanceof THREE.Euler===false){console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.")}var k=this.elements;var n=o.x,m=o.y,l=o.z;var G=Math.cos(n),F=Math.sin(n);var D=Math.cos(m),A=Math.sin(m);var t=Math.cos(l),r=Math.sin(l);if(o.order==="XYZ"){var v=G*t,s=G*r,h=F*t,g=F*r;k[0]=D*t;k[4]=-D*r;k[8]=A;k[1]=s+h*A;k[5]=v-g*A;k[9]=-F*D;k[2]=g-v*A;k[6]=h+s*A;k[10]=G*D}else{if(o.order==="YXZ"){var q=D*t,p=D*r,C=A*t,u=A*r;k[0]=q+u*F;k[4]=C*F-p;k[8]=G*A;k[1]=G*r;k[5]=G*t;k[9]=-F;k[2]=p*F-C;k[6]=u+q*F;k[10]=G*D}else{if(o.order==="ZXY"){var q=D*t,p=D*r,C=A*t,u=A*r;k[0]=q-u*F;k[4]=-G*r;k[8]=C+p*F;k[1]=p+C*F;k[5]=G*t;k[9]=u-q*F;k[2]=-G*A;k[6]=F;k[10]=G*D}else{if(o.order==="ZYX"){var v=G*t,s=G*r,h=F*t,g=F*r;k[0]=D*t;k[4]=h*A-s;k[8]=v*A+g;k[1]=D*r;k[5]=g*A+v;k[9]=s*A-h;k[2]=-A;k[6]=F*D;k[10]=G*D}else{if(o.order==="YZX"){var E=G*D,B=G*A,j=F*D,i=F*A;k[0]=D*t;k[4]=i-E*r;k[8]=j*r+B;k[1]=r;k[5]=G*t;k[9]=-F*t;k[2]=-A*t;k[6]=B*r+j;k[10]=E-i*r}else{if(o.order==="XZY"){var E=G*D,B=G*A,j=F*D,i=F*A;k[0]=D*t;k[4]=-r;k[8]=A*t;k[1]=E*r+i;k[5]=G*t;k[9]=B*r-j;k[2]=j*r-B;k[6]=F*t;k[10]=i*r+E}}}}}}k[3]=0;k[7]=0;k[11]=0;k[12]=0;k[13]=0;k[14]=0;k[15]=1;return this},makeRotationFromQuaternion:function(l){var e=this.elements;var h=l.x,g=l.y,f=l.z,i=l.w;var n=h+h,a=g+g,j=f+f;var d=h*n,c=h*a,b=h*j;var m=g*a,k=g*j,r=f*j;var s=i*n,p=i*a,o=i*j;e[0]=1-(m+r);e[4]=c-o;e[8]=b+p;e[1]=c+o;e[5]=1-(d+r);e[9]=k-s;e[2]=b-p;e[6]=k+s;e[10]=1-(d+m);e[3]=0;e[7]=0;e[11]=0;e[12]=0;e[13]=0;e[14]=0;e[15]=1;return this},lookAt:function(){var a,c,b;return function(e,f,d){if(a===undefined){a=new THREE.Vector3()}if(c===undefined){c=new THREE.Vector3()}if(b===undefined){b=new THREE.Vector3()}var g=this.elements;b.subVectors(e,f).normalize();if(b.lengthSq()===0){b.z=1}a.crossVectors(d,b).normalize();if(a.lengthSq()===0){b.x+=0.0001;a.crossVectors(d,b).normalize()}c.crossVectors(b,a);g[0]=a.x;g[4]=c.x;g[8]=b.x;g[1]=a.y;g[5]=c.y;g[9]=b.y;g[2]=a.z;g[6]=c.z;g[10]=b.z;return this}}(),multiply:function(a,b){if(b!==undefined){console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(a,b)}return this.multiplyMatrices(this,a)},multiplyMatrices:function(Q,P){var s=Q.elements;var O=P.elements;var c=this.elements;var p=s[0],n=s[4],m=s[8],l=s[12];var N=s[1],M=s[5],L=s[9],K=s[13];var F=s[2],E=s[6],D=s[10],C=s[14];var t=s[3],r=s[7],q=s[11],o=s[15];var i=O[0],g=O[4],e=O[8],d=O[12];var J=O[1],I=O[5],H=O[9],G=O[13];var B=O[2],A=O[6],v=O[10],u=O[14];var k=O[3],j=O[7],h=O[11],f=O[15];c[0]=p*i+n*J+m*B+l*k;c[4]=p*g+n*I+m*A+l*j;c[8]=p*e+n*H+m*v+l*h;c[12]=p*d+n*G+m*u+l*f;c[1]=N*i+M*J+L*B+K*k;c[5]=N*g+M*I+L*A+K*j;c[9]=N*e+M*H+L*v+K*h;c[13]=N*d+M*G+L*u+K*f;c[2]=F*i+E*J+D*B+C*k;c[6]=F*g+E*I+D*A+C*j;c[10]=F*e+E*H+D*v+C*h;c[14]=F*d+E*G+D*u+C*f;c[3]=t*i+r*J+q*B+o*k;c[7]=t*g+r*I+q*A+o*j;c[11]=t*e+r*H+q*v+o*h;c[15]=t*d+r*G+q*u+o*f;return this},multiplyToArray:function(d,c,e){var f=this.elements;this.multiplyMatrices(d,c);e[0]=f[0];e[1]=f[1];e[2]=f[2];e[3]=f[3];e[4]=f[4];e[5]=f[5];e[6]=f[6];e[7]=f[7];e[8]=f[8];e[9]=f[9];e[10]=f[10];e[11]=f[11];e[12]=f[12];e[13]=f[13];e[14]=f[14];e[15]=f[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},applyToVector3Array:function(){var a;return function(f,e,d){if(a===undefined){a=new THREE.Vector3()}if(e===undefined){e=0}if(d===undefined){d=f.length}for(var c=0,b=e;c<d;c+=3,b+=3){a.fromArray(f,b);a.applyMatrix4(this);a.toArray(f,b)}return f}}(),applyToBuffer:function(){var b;return function a(c,g,f){if(b===undefined){b=new THREE.Vector3()}if(g===undefined){g=0}if(f===undefined){f=c.length/c.itemSize}for(var e=0,d=g;e<f;e++,d++){b.x=c.getX(d);b.y=c.getY(d);b.z=c.getZ(d);b.applyMatrix4(this);c.setXYZ(b.x,b.y,b.z)}return c}}(),determinant:function(){var c=this.elements;var n=c[0],m=c[4],k=c[8],i=c[12];var f=c[1],e=c[5],d=c[9],b=c[13];var a=c[2],q=c[6],p=c[10],o=c[14];var l=c[3],j=c[7],h=c[11],g=c[15];return(l*(+i*d*q-k*b*q-i*e*p+m*b*p+k*e*o-m*d*o)+j*(+n*d*o-n*b*p+i*f*p-k*f*o+k*b*a-i*d*a)+h*(+n*b*q-n*e*o-i*f*q+m*f*o+i*e*a-m*b*a)+g*(-k*e*a-n*d*q+n*e*p+k*f*q-m*f*p+m*d*a))},transpose:function(){var b=this.elements;var a;a=b[1];b[1]=b[4];b[4]=a;a=b[2];b[2]=b[8];b[8]=a;a=b[6];b[6]=b[9];b[9]=a;a=b[3];b[3]=b[12];b[12]=a;a=b[7];b[7]=b[13];b[13]=a;a=b[11];b[11]=b[14];b[14]=a;return this},flattenToArrayOffset:function(c,b){var a=this.elements;c[b]=a[0];c[b+1]=a[1];c[b+2]=a[2];c[b+3]=a[3];c[b+4]=a[4];c[b+5]=a[5];c[b+6]=a[6];c[b+7]=a[7];c[b+8]=a[8];c[b+9]=a[9];c[b+10]=a[10];c[b+11]=a[11];c[b+12]=a[12];c[b+13]=a[13];c[b+14]=a[14];c[b+15]=a[15];return c},getPosition:function(){var a;return function(){if(a===undefined){a=new THREE.Vector3()}console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getInverse:function(r,h){var g=this.elements;var A=r.elements;var p=A[0],n=A[4],k=A[8],i=A[12];var v=A[1],u=A[5],t=A[9],s=A[13];var d=A[2],c=A[6],b=A[10],a=A[14];var q=A[3],o=A[7],l=A[11],j=A[15];g[0]=t*a*o-s*b*o+s*c*l-u*a*l-t*c*j+u*b*j;g[4]=i*b*o-k*a*o-i*c*l+n*a*l+k*c*j-n*b*j;g[8]=k*s*o-i*t*o+i*u*l-n*s*l-k*u*j+n*t*j;g[12]=i*t*c-k*s*c-i*u*b+n*s*b+k*u*a-n*t*a;g[1]=s*b*q-t*a*q-s*d*l+v*a*l+t*d*j-v*b*j;g[5]=k*a*q-i*b*q+i*d*l-p*a*l-k*d*j+p*b*j;g[9]=i*t*q-k*s*q-i*v*l+p*s*l+k*v*j-p*t*j;g[13]=k*s*d-i*t*d+i*v*b-p*s*b-k*v*a+p*t*a;g[2]=u*a*q-s*c*q+s*d*o-v*a*o-u*d*j+v*c*j;g[6]=i*c*q-n*a*q-i*d*o+p*a*o+n*d*j-p*c*j;g[10]=n*s*q-i*u*q+i*v*o-p*s*o-n*v*j+p*u*j;g[14]=i*u*d-n*s*d-i*v*c+p*s*c+n*v*a-p*u*a;g[3]=t*c*q-u*b*q-t*d*o+v*b*o+u*d*l-v*c*l;g[7]=n*b*q-k*c*q+k*d*o-p*b*o-n*d*l+p*c*l;g[11]=k*u*q-n*t*q-k*v*o+p*t*o+n*v*l-p*u*l;g[15]=n*t*d-k*u*d+k*v*c-p*t*c-n*v*b+p*u*b;var e=p*g[0]+v*g[4]+d*g[8]+q*g[12];if(e===0){var f="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(h||false){throw new Error(f)}else{console.warn(f)}this.identity();return this}this.multiplyScalar(1/e);return this},scale:function(b){var d=this.elements;var a=b.x,e=b.y,c=b.z;d[0]*=a;d[4]*=e;d[8]*=c;d[1]*=a;d[5]*=e;d[9]*=c;d[2]*=a;d[6]*=e;d[10]*=c;d[3]*=a;d[7]*=e;d[11]*=c;return this},getMaxScaleOnAxis:function(){var c=this.elements;var d=c[0]*c[0]+c[1]*c[1]+c[2]*c[2];var b=c[4]*c[4]+c[5]*c[5]+c[6]*c[6];var a=c[8]*c[8]+c[9]*c[9]+c[10]*c[10];return Math.sqrt(Math.max(d,b,a))},makeTranslation:function(a,c,b){this.set(1,0,0,a,0,1,0,c,0,0,1,b,0,0,0,1);return this},makeRotationX:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(1,0,0,0,0,d,-b,0,0,b,d,0,0,0,0,1);return this},makeRotationY:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(d,0,b,0,0,1,0,0,-b,0,d,0,0,0,0,1);return this},makeRotationZ:function(a){var d=Math.cos(a),b=Math.sin(a);this.set(d,-b,0,0,b,d,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var f=Math.cos(b);var k=Math.sin(b);var j=1-f;var i=a.x,h=a.y,g=a.z;var e=j*i,d=j*h;this.set(e*i+f,e*h-k*g,e*g+k*h,0,e*h+k*g,d*h+f,d*g-k*i,0,e*g-k*h,d*g+k*i,j*g*g+f,0,0,0,0,1);return this},makeScale:function(a,c,b){this.set(a,0,0,0,0,c,0,0,0,0,b,0,0,0,0,1);return this},compose:function(a,b,c){this.makeRotationFromQuaternion(b);this.scale(c);this.setPosition(a);return this},decompose:function(){var a,b;return function(i,h,g){if(a===undefined){a=new THREE.Vector3()}if(b===undefined){b=new THREE.Matrix4()}var f=this.elements;var m=a.set(f[0],f[1],f[2]).length();var l=a.set(f[4],f[5],f[6]).length();var k=a.set(f[8],f[9],f[10]).length();var j=this.determinant();if(j<0){m=-m}i.x=f[12];i.y=f[13];i.z=f[14];b.elements.set(this.elements);var e=1/m;var d=1/l;var c=1/k;b.elements[0]*=e;b.elements[1]*=e;b.elements[2]*=e;b.elements[4]*=d;b.elements[5]*=d;b.elements[6]*=d;b.elements[8]*=c;b.elements[9]*=c;b.elements[10]*=c;h.setFromRotationMatrix(b);g.x=m;g.y=l;g.z=k;return this}}(),makeFrustum:function(g,q,e,n,i,h){var f=this.elements;var p=2*i/(q-g);var m=2*i/(n-e);var o=(q+g)/(q-g);var l=(n+e)/(n-e);var k=-(h+i)/(h-i);var j=-2*h*i/(h-i);f[0]=p;f[4]=0;f[8]=o;f[12]=0;f[1]=0;f[5]=m;f[9]=l;f[13]=0;f[2]=0;f[6]=0;f[10]=k;f[14]=j;f[3]=0;f[7]=0;f[11]=-1;f[15]=0;return this},makePerspective:function(e,c,g,b){var a=g*Math.tan(THREE.Math.degToRad(e*0.5));var f=-a;var h=f*c;var d=a*c;return this.makeFrustum(h,d,f,a,g,b)},makeOrthographic:function(d,n,k,a,g,f){var c=this.elements;var m=n-d;var e=k-a;var b=f-g;var l=(n+d)/m;var j=(k+a)/e;var i=(f+g)/b;c[0]=2/m;c[4]=0;c[8]=0;c[12]=-l;c[1]=0;c[5]=2/e;c[9]=0;c[13]=-j;c[2]=0;c[6]=0;c[10]=-2/b;c[14]=-i;c[3]=0;c[7]=0;c[11]=0;c[15]=1;return this},equals:function(a){var d=this.elements;var c=a.elements;for(var b=0;b<16;b++){if(d[b]!==c[b]){return false}}return true},fromArray:function(a){this.elements.set(a);return this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]}};THREE.Ray=function(a,b){this.origin=(a!==undefined)?a:new THREE.Vector3();this.direction=(b!==undefined)?b:new THREE.Vector3()};THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(c,b){var a=b||new THREE.Vector3();return a.copy(this.direction).multiplyScalar(c).add(this.origin)},lookAt:function(a){this.direction.copy(a).sub(this.origin).normalize()},recast:function(){var a=new THREE.Vector3();return function(b){this.origin.copy(this.at(b,a));return this}}(),closestPointToPoint:function(b,c){var a=c||new THREE.Vector3();a.subVectors(b,this.origin);var d=a.dot(this.direction);if(d<0){return a.copy(this.origin)}return a.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(a){return Math.sqrt(this.distanceSqToPoint(a))},distanceSqToPoint:function(){var a=new THREE.Vector3();return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);if(c<0){return this.origin.distanceToSquared(b)}a.copy(this.direction).multiplyScalar(c).add(this.origin);return a.distanceToSquared(b)}}(),distanceSqToSegment:function(){var b=new THREE.Vector3();var a=new THREE.Vector3();var c=new THREE.Vector3();return function(p,l,m,f){b.copy(p).add(l).multiplyScalar(0.5);a.copy(l).sub(p).normalize();c.copy(this.origin).sub(b);var h=p.distanceTo(l)*0.5;var d=-this.direction.dot(a);var n=c.dot(this.direction);var k=-c.dot(a);var j=c.lengthSq();var i=Math.abs(1-d*d);var r,o,e,q;if(i>0){r=d*k-n;o=d*n-k;q=h*i;if(r>=0){if(o>=-q){if(o<=q){var g=1/i;r*=g;o*=g;e=r*(r+d*o+2*n)+o*(d*r+o+2*k)+j}else{o=h;r=Math.max(0,-(d*o+n));e=-r*r+o*(o+2*k)+j}}else{o=-h;r=Math.max(0,-(d*o+n));e=-r*r+o*(o+2*k)+j}}else{if(o<=-q){r=Math.max(0,-(-d*h+n));o=(r>0)?-h:Math.min(Math.max(-h,-k),h);e=-r*r+o*(o+2*k)+j}else{if(o<=q){r=0;o=Math.min(Math.max(-h,-k),h);e=o*(o+2*k)+j}else{r=Math.max(0,-(d*h+n));o=(r>0)?h:Math.min(Math.max(-h,-k),h);e=-r*r+o*(o+2*k)+j}}}}else{o=(d>0)?-h:h;r=Math.max(0,-(d*o+n));e=-r*r+o*(o+2*k)+j}if(m){m.copy(this.direction).multiplyScalar(r).add(this.origin)}if(f){f.copy(a).multiplyScalar(o).add(b)}return e}}(),intersectSphere:function(){var a=new THREE.Vector3();return function(b,d){a.subVectors(b.center,this.origin);var i=a.dot(this.direction);var f=a.dot(a)-i*i;var c=b.radius*b.radius;if(f>c){return null}var h=Math.sqrt(c-f);var g=i-h;var e=i+h;if(g<0&&e<0){return null}if(g<0){return this.at(e,d)}return this.at(g,d)}}(),intersectsSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},distanceToPlane:function(a){var c=a.normal.dot(this.direction);if(c===0){if(a.distanceToPoint(this.origin)===0){return 0}return null}var b=-(this.origin.dot(a.normal)+a.constant)/c;return b>=0?b:null},intersectPlane:function(a,c){var b=this.distanceToPlane(a);if(b===null){return null}return this.at(b,c)},intersectsPlane:function(a){var b=a.distanceToPoint(this.origin);if(b===0){return true}var c=a.normal.dot(this.direction);if(c*b<0){return true}return false},intersectBox:function(f,l){var c,g,i,a,h,k;var e=1/this.direction.x,d=1/this.direction.y,b=1/this.direction.z;var j=this.origin;if(e>=0){c=(f.min.x-j.x)*e;g=(f.max.x-j.x)*e}else{c=(f.max.x-j.x)*e;g=(f.min.x-j.x)*e}if(d>=0){i=(f.min.y-j.y)*d;a=(f.max.y-j.y)*d}else{i=(f.max.y-j.y)*d;a=(f.min.y-j.y)*d}if((c>a)||(i>g)){return null}if(i>c||c!==c){c=i}if(a<g||g!==g){g=a}if(b>=0){h=(f.min.z-j.z)*b;k=(f.max.z-j.z)*b}else{h=(f.max.z-j.z)*b;k=(f.min.z-j.z)*b}if((c>k)||(h>g)){return null}if(h>c||c!==c){c=h}if(k<g||g!==g){g=k}if(g<0){return null}return this.at(c>=0?c:g,l)},intersectsBox:(function(){var a=new THREE.Vector3();return function(b){return this.intersectBox(b,a)!==null}})(),intersectTriangle:function(){var d=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Vector3();var c=new THREE.Vector3();return function(m,k,j,e,n){b.subVectors(k,m);a.subVectors(j,m);c.crossVectors(b,a);var i=this.direction.dot(c);var f;if(i>0){if(e){return null}f=1}else{if(i<0){f=-1;i=-i}else{return null}}d.subVectors(this.origin,m);var l=f*this.direction.dot(a.crossVectors(d,a));if(l<0){return null}var g=f*this.direction.dot(b.cross(d));if(g<0){return null}if(l+g>i){return null}var h=-f*d.dot(c);if(h<0){return null}return this.at(h/i,n)}}(),applyMatrix4:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}};THREE.Sphere=function(b,a){this.center=(b!==undefined)?b:new THREE.Vector3();this.radius=(a!==undefined)?a:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(b,a){this.center.copy(b);this.radius=a;return this},setFromPoints:function(){var a=new THREE.Box3();return function(f,g){var b=this.center;if(g!==undefined){b.copy(g)}else{a.setFromPoints(f).center(b)}var c=0;for(var e=0,d=f.length;e<d;e++){c=Math.max(c,b.distanceToSquared(f[e]))}this.radius=Math.sqrt(c);return this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return(this.radius<=0)},containsPoint:function(a){return(a.distanceToSquared(this.center)<=(this.radius*this.radius))},distanceToPoint:function(a){return(a.distanceTo(this.center)-this.radius)},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=(b*b)},intersectsBox:function(a){return a.intersectsSphere(this)},intersectsPlane:function(a){return Math.abs(this.center.dot(a.normal)-a.constant)<=this.radius},clampPoint:function(b,d){var c=this.center.distanceToSquared(b);var a=d||new THREE.Vector3();a.copy(b);if(c>(this.radius*this.radius)){a.sub(this.center).normalize();a.multiplyScalar(this.radius).add(this.center)}return a},getBoundingBox:function(a){var b=a||new THREE.Box3();b.set(this.center,this.center);b.expandByScalar(this.radius);return b},applyMatrix4:function(a){this.center.applyMatrix4(a);this.radius=this.radius*a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&(a.radius===this.radius)}};THREE.Frustum=function(f,e,d,c,b,a){this.planes=[(f!==undefined)?f:new THREE.Plane(),(e!==undefined)?e:new THREE.Plane(),(d!==undefined)?d:new THREE.Plane(),(c!==undefined)?c:new THREE.Plane(),(b!==undefined)?b:new THREE.Plane(),(a!==undefined)?a:new THREE.Plane()]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(g,f,e,d,c,b){var a=this.planes;a[0].copy(g);a[1].copy(f);a[2].copy(e);a[3].copy(d);a[4].copy(c);a[5].copy(b);return this},clone:function(){return new this.constructor().copy(this)},copy:function(c){var a=this.planes;for(var b=0;b<6;b++){a[b].copy(c.planes[b])}return this},setFromMatrix:function(o){var h=this.planes;var t=o.elements;var l=t[0],j=t[1],i=t[2],g=t[3];var f=t[4],e=t[5],d=t[6],c=t[7];var b=t[8],a=t[9],s=t[10],r=t[11];var q=t[12],p=t[13],n=t[14],k=t[15];h[0].setComponents(g-l,c-f,r-b,k-q).normalize();h[1].setComponents(g+l,c+f,r+b,k+q).normalize();h[2].setComponents(g+j,c+e,r+a,k+p).normalize();h[3].setComponents(g-j,c-e,r-a,k-p).normalize();h[4].setComponents(g-i,c-d,r-s,k-n).normalize();h[5].setComponents(g+i,c+d,r+s,k+n).normalize();return this},intersectsObject:function(){var a=new THREE.Sphere();return function(b){var c=b.geometry;if(c.boundingSphere===null){c.computeBoundingSphere()}a.copy(c.boundingSphere);a.applyMatrix4(b.matrixWorld);return this.intersectsSphere(a)}}(),intersectsSphere:function(c){var d=this.planes;var a=c.center;var b=-c.radius;for(var e=0;e<6;e++){var f=d[e].distanceToPoint(a);if(f<b){return false}}return true},intersectsBox:function(){var b=new THREE.Vector3(),a=new THREE.Vector3();return function(g){var d=this.planes;for(var e=0;e<6;e++){var c=d[e];b.x=c.normal.x>0?g.min.x:g.max.x;a.x=c.normal.x>0?g.max.x:g.min.x;b.y=c.normal.y>0?g.min.y:g.max.y;a.y=c.normal.y>0?g.max.y:g.min.y;b.z=c.normal.z>0?g.min.z:g.max.z;a.z=c.normal.z>0?g.max.z:g.min.z;var h=c.distanceToPoint(b);var f=c.distanceToPoint(a);if(h<0&&f<0){return false}}return true}}(),containsPoint:function(a){var b=this.planes;for(var c=0;c<6;c++){if(b[c].distanceToPoint(a)<0){return false}}return true}};THREE.Plane=function(b,a){this.normal=(b!==undefined)?b:new THREE.Vector3(1,0,0);this.constant=(a!==undefined)?a:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(b,a){this.normal.copy(b);this.constant=a;return this},setComponents:function(a,d,c,b){this.normal.set(a,d,c);this.constant=b;return this},setFromNormalAndCoplanarPoint:function(b,a){this.normal.copy(b);this.constant=-a.dot(this.normal);return this},setFromCoplanarPoints:function(){var b=new THREE.Vector3();var a=new THREE.Vector3();return function(e,d,g){var f=b.subVectors(g,d).cross(a.subVectors(e,d)).normalize();this.setFromNormalAndCoplanarPoint(f,e);return this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(a){this.normal.copy(a.normal);this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(b,d){var c=this.distanceToPoint(b);var a=d||new THREE.Vector3();return a.copy(this.normal).multiplyScalar(c)},intersectLine:function(){var a=new THREE.Vector3();return function(c,e){var b=e||new THREE.Vector3();var f=c.delta(a);var g=this.normal.dot(f);if(g===0){if(this.distanceToPoint(c.start)===0){return b.copy(c.start)}return undefined}var d=-(c.start.dot(this.normal)+this.constant)/g;if(d<0||d>1){return undefined}return b.copy(f).multiplyScalar(d).add(c.start)}}(),intersectsLine:function(a){var c=this.distanceToPoint(a.start);var b=this.distanceToPoint(a.end);return(c<0&&b>0)||(b<0&&c>0)},intersectsBox:function(a){return a.intersectsPlane(this)},intersectsSphere:function(a){return a.intersectsPlane(this)},coplanarPoint:function(b){var a=b||new THREE.Vector3();return a.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var c=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Matrix3();return function(e,f){var h=f||a.getNormalMatrix(e);var g=c.copy(this.normal).applyMatrix3(h);var d=this.coplanarPoint(b);d.applyMatrix4(e);this.setFromNormalAndCoplanarPoint(g,d);return this}}(),translate:function(a){this.constant=this.constant-a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&(a.constant===this.constant)}};THREE.Math={generateUUID:function(){var d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split("");var b=new Array(36);var a=0,c;return function(){for(var e=0;e<36;e++){if(e===8||e===13||e===18||e===23){b[e]="-"}else{if(e===14){b[e]="4"}else{if(a<=2){a=33554432+(Math.random()*16777216)|0}c=a&15;a=a>>4;b[e]=d[(e===19)?(c&3)|8:c]}}}return b.join("")}}(),clamp:function(c,b,a){return Math.max(b,Math.min(a,c))},euclideanModulo:function(b,a){return((b%a)+a)%a},mapLinear:function(b,c,a,e,d){return e+(b-c)*(d-e)/(a-c)},smoothstep:function(b,c,a){if(b<=c){return 0}if(b>=a){return 1}b=(b-c)/(a-c);return b*b*(3-2*b)},smootherstep:function(b,c,a){if(b<=c){return 0}if(b>=a){return 1}b=(b-c)/(a-c);return b*b*b*(b*(b*6-15)+10)},random16:function(){console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead.");return Math.random()},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return(a&(a-1))===0&&a!==0},nearestPowerOfTwo:function(a){return Math.pow(2,Math.round(Math.log(a)/Math.LN2))},nextPowerOfTwo:function(a){a--;a|=a>>1;a|=a>>2;a|=a>>4;a|=a>>8;a|=a>>16;a++;return a}};THREE.Spline=function(n){this.points=n;var h=[],j={x:0,y:0,z:0},m,a,e,d,b,l,k,i,g;this.initFromArray=function(c){this.points=[];for(var o=0;o<c.length;o++){this.points[o]={x:c[o][0],y:c[o][1],z:c[o][2]}}};this.getPoint=function(c){m=(this.points.length-1)*c;a=Math.floor(m);e=m-a;h[0]=a===0?a:a-1;h[1]=a;h[2]=a>this.points.length-2?this.points.length-1:a+1;h[3]=a>this.points.length-3?this.points.length-1:a+2;l=this.points[h[0]];k=this.points[h[1]];i=this.points[h[2]];g=this.points[h[3]];d=e*e;b=e*d;j.x=f(l.x,k.x,i.x,g.x,e,d,b);j.y=f(l.y,k.y,i.y,g.y,e,d,b);j.z=f(l.z,k.z,i.z,g.z,e,d,b);return j};this.getControlPointsArray=function(){var o,r,c=this.points.length,q=[];for(o=0;o<c;o++){r=this.points[o];q[o]=[r.x,r.y,r.z]}return q};this.getLength=function(p){var r,t,u,s,B=0,c=0,q=0,A=new THREE.Vector3(),o=new THREE.Vector3(),v=[],C=0;v[0]=0;if(!p){p=100}u=this.points.length*p;A.copy(this.points[0]);for(r=1;r<u;r++){t=r/u;s=this.getPoint(t);o.copy(s);C+=o.distanceTo(A);A.copy(s);B=(this.points.length-1)*t;c=Math.floor(B);if(c!==q){v[c]=C;q=c}}v[v.length]=C;return{chunks:v,total:C}};this.reparametrizeByArcLength=function(o){var s,r,v,A,p,B,u,t,C=[],c=new THREE.Vector3(),q=this.getLength();C.push(c.copy(this.points[0]).clone());for(s=1;s<this.points.length;s++){B=q.chunks[s]-q.chunks[s-1];u=Math.ceil(o*B/q.total);A=(s-1)/(this.points.length-1);p=s/(this.points.length-1);for(r=1;r<u-1;r++){v=A+r*(1/u)*(p-A);t=this.getPoint(v);C.push(c.copy(t).clone())}C.push(c.copy(this.points[s]).clone())}this.points=C};function f(v,u,r,q,A,o,c){var s=(r-v)*0.5,p=(q-u)*0.5;return(2*(u-r)+s+p)*c+(-3*(u-r)-2*s-p)*o+s*A+u}};THREE.Triangle=function(e,d,f){this.a=(e!==undefined)?e:new THREE.Vector3();this.b=(d!==undefined)?d:new THREE.Vector3();this.c=(f!==undefined)?f:new THREE.Vector3()};THREE.Triangle.normal=function(){var a=new THREE.Vector3();return function(g,e,i,h){var d=h||new THREE.Vector3();d.subVectors(i,e);a.subVectors(g,e);d.cross(a);var f=d.lengthSq();if(f>0){return d.multiplyScalar(1/Math.sqrt(f))}return d.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3();var c=new THREE.Vector3();var b=new THREE.Vector3();return function(n,m,k,h,r){a.subVectors(h,m);c.subVectors(k,m);b.subVectors(n,m);var l=a.dot(a);var j=a.dot(c);var i=a.dot(b);var f=c.dot(c);var d=c.dot(b);var g=(l*f-j*j);var q=r||new THREE.Vector3();if(g===0){return q.set(-2,-1,-1)}var e=1/g;var p=(f*i-j*d)*e;var o=(l*d-j*i)*e;return q.set(1-p-o,o,p)}}();THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3();return function(f,g,e,h){var d=THREE.Triangle.barycoordFromPoint(f,g,e,h,a);return(d.x>=0)&&(d.y>=0)&&((d.x+d.y)<=1)}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,d,f){this.a.copy(e);this.b.copy(d);this.c.copy(f);return this},setFromPointsAndIndices:function(b,d,c,a){this.a.copy(b[d]);this.b.copy(b[c]);this.c.copy(b[a]);return this},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){var a=new THREE.Vector3();var b=new THREE.Vector3();return function(){a.subVectors(this.c,this.b);b.subVectors(this.a,this.b);return a.cross(b).length()*0.5}}(),midpoint:function(b){var a=b||new THREE.Vector3();return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(b){var a=b||new THREE.Plane();return a.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}};THREE.Interpolant=function(b,d,a,c){this.parameterPositions=b;this._cachedIndex=0;this.resultBuffer=c!==undefined?c:new d.constructor(a);this.sampleValues=d;this.valueSize=a};THREE.Interpolant.prototype={constructor:THREE.Interpolant,evaluate:function(i){var a=this.parameterPositions,b=this._cachedIndex,d=a[b],e=a[b-1];validate_interval:{seek:{var h;linear_scan:{forward_scan:if(!(i<d)){for(var c=b+2;;){if(d===undefined){if(i<e){break forward_scan}b=a.length;this._cachedIndex=b;return this.afterEnd_(b-1,i,e)}if(b===c){break}e=d;d=a[++b];if(i<d){break seek}}h=a.length;break linear_scan}if(!(i>=e)){var f=a[1];if(i<f){b=2;e=f}for(var c=b-2;;){if(e===undefined){this._cachedIndex=0;return this.beforeStart_(0,i,d)}if(b===c){break}d=e;e=a[--b-1];if(i>=e){break seek}}h=b;b=0;break linear_scan}break validate_interval}while(b<h){var g=(b+h)>>>1;if(i<a[g]){h=g}else{b=g+1}}d=a[b];e=a[b-1];if(e===undefined){this._cachedIndex=0;return this.beforeStart_(0,i,d)}if(d===undefined){b=a.length;this._cachedIndex=b;return this.afterEnd_(b-1,e,i)}}this._cachedIndex=b;this.intervalChanged_(b,e,d)}return this.interpolate_(b,e,i,d)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(c){var a=this.resultBuffer,b=this.sampleValues,e=this.valueSize,f=c*e;for(var d=0;d!==e;++d){a[d]=b[f+d]}return a},interpolate_:function(c,d,a,b){throw new Error("call to abstract method")},intervalChanged_:function(b,c,a){}};Object.assign(THREE.Interpolant.prototype,{beforeStart_:THREE.Interpolant.prototype.copySampleValue_,afterEnd_:THREE.Interpolant.prototype.copySampleValue_});THREE.CubicInterpolant=function(b,d,a,c){THREE.Interpolant.call(this,b,d,a,c);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0};THREE.CubicInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.CubicInterpolant,DefaultSettings_:{endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},intervalChanged_:function(c,f,d){var b=this.parameterPositions,e=c-2,h=c+1,g=b[e],i=b[h];if(g===undefined){switch(this.getSettings_().endingStart){case THREE.ZeroSlopeEnding:e=c;g=2*f-d;break;case THREE.WrapAroundEnding:e=b.length-2;g=f+b[e]-b[e+1];break;default:e=c;g=d}}if(i===undefined){switch(this.getSettings_().endingEnd){case THREE.ZeroSlopeEnding:h=c;i=2*d-f;break;case THREE.WrapAroundEnding:h=1;i=d+b[1]-b[0];break;default:h=c-1;i=f}}var j=(d-f)*0.5,a=this.valueSize;this._weightPrev=j/(f-g);this._weightNext=j/(i-d);this._offsetPrev=e*a;this._offsetNext=h*a},interpolate_:function(q,j,l,f){var h=this.resultBuffer,c=this.sampleValues,n=this.valueSize,r=q*n,v=r-n,a=this._offsetPrev,e=this._offsetNext,A=this._weightPrev,B=this._weightNext,m=(l-j)/(f-j),s=m*m,o=s*m;var g=-A*o+2*A*s-A*m;var d=(1+A)*o+(-1.5-2*A)*s+(-0.5+A)*m+1;var b=(-1-B)*o+(1.5+B)*s+0.5*m;var k=B*o-B*s;for(var u=0;u!==n;++u){h[u]=g*c[a+u]+d*c[v+u]+b*c[r+u]+k*c[e+u]}return h}});THREE.DiscreteInterpolant=function(b,d,a,c){THREE.Interpolant.call(this,b,d,a,c)};THREE.DiscreteInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.DiscreteInterpolant,interpolate_:function(c,d,a,b){return this.copySampleValue_(c-1)}});THREE.LinearInterpolant=function(b,d,a,c){THREE.Interpolant.call(this,b,d,a,c)};THREE.LinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.LinearInterpolant,interpolate_:function(d,g,l,f){var m=this.resultBuffer,k=this.sampleValues,a=this.valueSize,b=d*a,c=b-a,h=(l-g)/(f-g),j=1-h;for(var e=0;e!==a;++e){m[e]=k[c+e]*j+k[b+e]*h}return m}});THREE.QuaternionLinearInterpolant=function(b,d,a,c){THREE.Interpolant.call(this,b,d,a,c)};THREE.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.QuaternionLinearInterpolant,interpolate_:function(d,g,i,f){var j=this.resultBuffer,h=this.sampleValues,a=this.valueSize,e=d*a,c=(i-g)/(f-g);for(var b=e+a;e!==b;e+=4){THREE.Quaternion.slerpFlat(j,0,h,e-a,h,e,c)}return j}});THREE.Clock=function(a){this.autoStart=(a!==undefined)?a:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=performance.now();this.oldTime=this.startTime;this.running=true},stop:function(){this.getElapsedTime();this.running=false},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var b=0;if(this.autoStart&&!this.running){this.start()}if(this.running){var a=performance.now();b=0.001*(a-this.oldTime);this.oldTime=a;this.elapsedTime+=b}return b}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener;a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(b,c){if(this._listeners===undefined){this._listeners={}}var a=this._listeners;if(a[b]===undefined){a[b]=[]}if(a[b].indexOf(c)===-1){a[b].push(c)}},hasEventListener:function(b,c){if(this._listeners===undefined){return false}var a=this._listeners;if(a[b]!==undefined&&a[b].indexOf(c)!==-1){return true}return false},removeEventListener:function(d,e){if(this._listeners===undefined){return}var c=this._listeners;var a=c[d];if(a!==undefined){var b=a.indexOf(e);if(b!==-1){a.splice(b,1)}}},dispatchEvent:function(e){if(this._listeners===undefined){return}var c=this._listeners;var a=c[e.type];if(a!==undefined){e.target=this;var f=[];var d=a.length;for(var b=0;b<d;b++){f[b]=a[b]}for(var b=0;b<d;b++){f[b].call(this,e)}}}};THREE.Layers=function(){this.mask=1};THREE.Layers.prototype={constructor:THREE.Layers,set:function(a){this.mask=1<<a},enable:function(a){this.mask|=1<<a},toggle:function(a){this.mask^=1<<a},disable:function(a){this.mask&=~(1<<a)},test:function(a){return(this.mask&a.mask)!==0}};(function(b){b.Raycaster=function(e,g,f,d){this.ray=new b.Ray(e,g);this.near=f||0;this.far=d||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points.");return this.Points}}})};function c(e,d){return e.distance-d.distance}function a(g,e,k,f){if(g.visible===false){return}g.raycast(e,k);if(f===true){var j=g.children;for(var h=0,d=j.length;h<d;h++){a(j[h],e,k,true)}}}b.Raycaster.prototype={constructor:b.Raycaster,linePrecision:1,set:function(d,e){this.ray.set(d,e)},setFromCamera:function(e,d){if(d instanceof b.PerspectiveCamera){this.ray.origin.setFromMatrixPosition(d.matrixWorld);this.ray.direction.set(e.x,e.y,0.5).unproject(d).sub(this.ray.origin).normalize()}else{if(d instanceof b.OrthographicCamera){this.ray.origin.set(e.x,e.y,-1).unproject(d);this.ray.direction.set(0,0,-1).transformDirection(d.matrixWorld)}else{console.error("THREE.Raycaster: Unsupported camera type.")}}},intersectObject:function(e,d){var f=[];a(e,this,f,d);f.sort(c);return f},intersectObjects:function(h,e){var g=[];if(Array.isArray(h)===false){console.warn("THREE.Raycaster.intersectObjects: objects is not an Array.");return g}for(var f=0,d=h.length;f<d;f++){a(h[f],this,g,e)}g.sort(c);return g}}}(THREE));THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++});this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3();var c=new THREE.Euler();var e=new THREE.Quaternion();var f=new THREE.Vector3(1,1,1);function d(){e.setFromEuler(c,false)}function b(){c.setFromQuaternion(e,undefined,false)}c.onChange(d);e.onChange(b);Object.defineProperties(this,{position:{enumerable:true,value:a},rotation:{enumerable:true,value:c},quaternion:{enumerable:true,value:e},scale:{enumerable:true,value:f},modelViewMatrix:{value:new THREE.Matrix4()},normalMatrix:{value:new THREE.Matrix3()}});this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4();this.matrixWorld=new THREE.Matrix4();this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new THREE.Layers();this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.userData={}};THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0);THREE.Object3D.DefaultMatrixAutoUpdate=true;THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,true)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion();return function(b,c){a.setFromAxisAngle(b,c);this.quaternion.multiply(a);return this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3();return function(b,c){a.copy(b).applyQuaternion(this.quaternion);this.position.add(a.multiplyScalar(c));return this}}(),translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4();return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4();return function(b){a.lookAt(b,this.position,this.up);this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(arguments.length>1){for(var b=0;b<arguments.length;b++){this.add(arguments[b])}return this}if(a===this){console.error("THREE.Object3D.add: object can't be added as a child of itself.",a);return this}if(a instanceof THREE.Object3D){if(a.parent!==null){a.parent.remove(a)}a.parent=this;a.dispatchEvent({type:"added"});this.children.push(a)}else{console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a)}return this},remove:function(b){if(arguments.length>1){for(var c=0;c<arguments.length;c++){this.remove(arguments[c])}}var a=this.children.indexOf(b);if(a!==-1){b.parent=null;b.dispatchEvent({type:"removed"});this.children.splice(a,1)}},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(c,e){if(this[c]===e){return this}for(var d=0,a=this.children.length;d<a;d++){var f=this.children[d];var b=f.getObjectByProperty(c,e);if(b!==undefined){return b}}return undefined},getWorldPosition:function(b){var a=b||new THREE.Vector3();this.updateMatrixWorld(true);return a.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3();var b=new THREE.Vector3();return function(d){var c=d||new THREE.Quaternion();this.updateMatrixWorld(true);this.matrixWorld.decompose(a,c,b);return c}}(),getWorldRotation:function(){var a=new THREE.Quaternion();return function(c){var b=c||new THREE.Euler();this.getWorldQuaternion(a);return b.setFromQuaternion(a,this.rotation.order,false)}}(),getWorldScale:function(){var a=new THREE.Vector3();var b=new THREE.Quaternion();return function(d){var c=d||new THREE.Vector3();this.updateMatrixWorld(true);this.matrixWorld.decompose(a,b,c);return c}}(),getWorldDirection:function(){var a=new THREE.Quaternion();return function(c){var b=c||new THREE.Vector3();this.getWorldQuaternion(a);return b.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(d){d(this);var c=this.children;for(var b=0,a=c.length;b<a;b++){c[b].traverse(d)}},traverseVisible:function(d){if(this.visible===false){return}d(this);var c=this.children;for(var b=0,a=c.length;b<a;b++){c[b].traverseVisible(d)}},traverseAncestors:function(b){var a=this.parent;if(a!==null){b(a);a.traverseAncestors(b)}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(c){if(this.matrixAutoUpdate===true){this.updateMatrix()}if(this.matrixWorldNeedsUpdate===true||c===true){if(this.parent===null){this.matrixWorld.copy(this.matrix)}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)}this.matrixWorldNeedsUpdate=false;c=true}for(var b=0,a=this.children.length;b<a;b++){this.children[b].updateMatrixWorld(c)}},toJSON:function(k){var a=(k===undefined);var c={};if(a){k={geometries:{},materials:{},textures:{},images:{}};c.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"}}var d={};d.uuid=this.uuid;d.type=this.type;if(this.name!==""){d.name=this.name}if(JSON.stringify(this.userData)!=="{}"){d.userData=this.userData}if(this.castShadow===true){d.castShadow=true}if(this.receiveShadow===true){d.receiveShadow=true}if(this.visible===false){d.visible=false}d.matrix=this.matrix.toArray();if(this.geometry!==undefined){if(k.geometries[this.geometry.uuid]===undefined){k.geometries[this.geometry.uuid]=this.geometry.toJSON(k)}d.geometry=this.geometry.uuid}if(this.material!==undefined){if(k.materials[this.material.uuid]===undefined){k.materials[this.material.uuid]=this.material.toJSON(k)}d.material=this.material.uuid}if(this.children.length>0){d.children=[];for(var e=0;e<this.children.length;e++){d.children.push(this.children[e].toJSON(k).object)}}if(a){var b=g(k.geometries);var j=g(k.materials);var h=g(k.textures);var f=g(k.images);if(b.length>0){c.geometries=b}if(j.length>0){c.materials=j}if(h.length>0){c.textures=h}if(f.length>0){c.images=f}}c.object=d;return c;function g(l){var i=[];for(var m in l){var n=l[m];delete n.metadata;i.push(n)}return i}},clone:function(a){return new this.constructor().copy(this,a)},copy:function(c,a){if(a===undefined){a=true}this.name=c.name;this.up.copy(c.up);this.position.copy(c.position);this.quaternion.copy(c.quaternion);this.scale.copy(c.scale);this.rotationAutoUpdate=c.rotationAutoUpdate;this.matrix.copy(c.matrix);this.matrixWorld.copy(c.matrixWorld);this.matrixAutoUpdate=c.matrixAutoUpdate;this.matrixWorldNeedsUpdate=c.matrixWorldNeedsUpdate;this.visible=c.visible;this.castShadow=c.castShadow;this.receiveShadow=c.receiveShadow;this.frustumCulled=c.frustumCulled;this.renderOrder=c.renderOrder;this.userData=JSON.parse(JSON.stringify(c.userData));if(a===true){for(var b=0;b<c.children.length;b++){var d=c.children[b];this.add(d.clone())}}return this}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;THREE.Face3=function(f,e,i,h,g,d){this.a=f;this.b=e;this.c=i;this.normal=h instanceof THREE.Vector3?h:new THREE.Vector3();this.vertexNormals=Array.isArray(h)?h:[];this.color=g instanceof THREE.Color?g:new THREE.Color();this.vertexColors=Array.isArray(g)?g:[];this.materialIndex=d!==undefined?d:0};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return new this.constructor().copy(this)},copy:function(c){this.a=c.a;this.b=c.b;this.c=c.c;this.normal.copy(c.normal);this.color.copy(c.color);this.materialIndex=c.materialIndex;for(var b=0,a=c.vertexNormals.length;b<a;b++){this.vertexNormals[b]=c.vertexNormals[b].clone()}for(var b=0,a=c.vertexColors.length;b<a;b++){this.vertexColors[b]=c.vertexColors[b].clone()}return this}};THREE.BufferAttribute=function(b,a){this.uuid=THREE.Math.generateUUID();this.array=b;this.itemSize=a;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0};THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(a){if(a===true){this.version++}},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.itemSize=a.itemSize;this.dynamic=a.dynamic;return this},copyAt:function(e,c,d){e*=this.itemSize;d*=c.itemSize;for(var b=0,a=this.itemSize;b<a;b++){this.array[e+b]=c.array[d+b]}return this},copyArray:function(a){this.array.set(a);return this},copyColorsArray:function(b){var f=this.array,e=0;for(var d=0,a=b.length;d<a;d++){var c=b[d];if(c===undefined){console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d);c=new THREE.Color()}f[e++]=c.r;f[e++]=c.g;f[e++]=c.b}return this},copyIndicesArray:function(e){var f=this.array,d=0;for(var c=0,a=e.length;c<a;c++){var b=e[c];f[d++]=b.a;f[d++]=b.b;f[d++]=b.c}return this},copyVector2sArray:function(d){var f=this.array,e=0;for(var c=0,b=d.length;c<b;c++){var a=d[c];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",c);a=new THREE.Vector2()}f[e++]=a.x;f[e++]=a.y}return this},copyVector3sArray:function(d){var f=this.array,e=0;for(var c=0,b=d.length;c<b;c++){var a=d[c];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",c);a=new THREE.Vector3()}f[e++]=a.x;f[e++]=a.y;f[e++]=a.z}return this},copyVector4sArray:function(d){var f=this.array,e=0;for(var c=0,b=d.length;c<b;c++){var a=d[c];if(a===undefined){console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",c);a=new THREE.Vector4()}f[e++]=a.x;f[e++]=a.y;f[e++]=a.z;f[e++]=a.w}return this},set:function(a,b){if(b===undefined){b=0}this.array.set(a,b);return this},getX:function(a){return this.array[a*this.itemSize]},setX:function(b,a){this.array[b*this.itemSize]=a;return this},getY:function(a){return this.array[a*this.itemSize+1]},setY:function(a,b){this.array[a*this.itemSize+1]=b;return this},getZ:function(a){return this.array[a*this.itemSize+2]},setZ:function(a,b){this.array[a*this.itemSize+2]=b;return this},getW:function(a){return this.array[a*this.itemSize+3]},setW:function(b,a){this.array[b*this.itemSize+3]=a;return this},setXY:function(b,a,c){b*=this.itemSize;this.array[b+0]=a;this.array[b+1]=c;return this},setXYZ:function(b,a,d,c){b*=this.itemSize;this.array[b+0]=a;this.array[b+1]=d;this.array[b+2]=c;return this},setXYZW:function(c,a,e,d,b){c*=this.itemSize;this.array[c+0]=a;this.array[c+1]=e;this.array[c+2]=d;this.array[c+3]=b;return this},clone:function(){return new this.constructor().copy(this)}};THREE.Int8Attribute=function(b,a){return new THREE.BufferAttribute(new Int8Array(b),a)};THREE.Uint8Attribute=function(b,a){return new THREE.BufferAttribute(new Uint8Array(b),a)};THREE.Uint8ClampedAttribute=function(b,a){return new THREE.BufferAttribute(new Uint8ClampedArray(b),a)};THREE.Int16Attribute=function(b,a){return new THREE.BufferAttribute(new Int16Array(b),a)};THREE.Uint16Attribute=function(b,a){return new THREE.BufferAttribute(new Uint16Array(b),a)};THREE.Int32Attribute=function(b,a){return new THREE.BufferAttribute(new Int32Array(b),a)};THREE.Uint32Attribute=function(b,a){return new THREE.BufferAttribute(new Uint32Array(b),a)};THREE.Float32Attribute=function(b,a){return new THREE.BufferAttribute(new Float32Array(b),a)};THREE.Float64Attribute=function(b,a){return new THREE.BufferAttribute(new Float64Array(b),a)};THREE.DynamicBufferAttribute=function(b,a){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.");return new THREE.BufferAttribute(b,a).setDynamic(true)};THREE.InstancedBufferAttribute=function(c,b,a){THREE.BufferAttribute.call(this,c,b);this.meshPerAttribute=a||1};THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype);THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute;THREE.InstancedBufferAttribute.prototype.copy=function(a){THREE.BufferAttribute.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBuffer=function(b,a){this.uuid=THREE.Math.generateUUID();this.array=b;this.stride=a;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0};THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(a){if(a===true){this.version++}},setDynamic:function(a){this.dynamic=a;return this},copy:function(a){this.array=new a.array.constructor(a.array);this.stride=a.stride;this.dynamic=a.dynamic;return this},copyAt:function(e,c,d){e*=this.stride;d*=c.stride;for(var b=0,a=this.stride;b<a;b++){this.array[e+b]=c.array[d+b]}return this},set:function(a,b){if(b===undefined){b=0}this.array.set(a,b);return this},clone:function(){return new this.constructor().copy(this)}};THREE.InstancedInterleavedBuffer=function(c,b,a){THREE.InterleavedBuffer.call(this,c,b);this.meshPerAttribute=a||1};THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype);THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer;THREE.InstancedInterleavedBuffer.prototype.copy=function(a){THREE.InterleavedBuffer.prototype.copy.call(this,a);this.meshPerAttribute=a.meshPerAttribute;return this};THREE.InterleavedBufferAttribute=function(a,b,c){this.uuid=THREE.Math.generateUUID();this.data=a;this.itemSize=b;this.offset=c};THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");return this.array.length},get count(){return this.data.count},setX:function(b,a){this.data.array[b*this.data.stride+this.offset]=a;return this},setY:function(a,b){this.data.array[a*this.data.stride+this.offset+1]=b;return this},setZ:function(a,b){this.data.array[a*this.data.stride+this.offset+2]=b;return this},setW:function(b,a){this.data.array[b*this.data.stride+this.offset+3]=a;return this},getX:function(a){return this.data.array[a*this.data.stride+this.offset]},getY:function(a){return this.data.array[a*this.data.stride+this.offset+1]},getZ:function(a){return this.data.array[a*this.data.stride+this.offset+2]},getW:function(a){return this.data.array[a*this.data.stride+this.offset+3]},setXY:function(b,a,c){b=b*this.data.stride+this.offset;this.data.array[b+0]=a;this.data.array[b+1]=c;return this},setXYZ:function(b,a,d,c){b=b*this.data.stride+this.offset;this.data.array[b+0]=a;this.data.array[b+1]=d;this.data.array[b+2]=c;return this},setXYZW:function(c,a,e,d,b){c=c*this.data.stride+this.offset;this.data.array[c+0]=a;this.data.array[c+1]=e;this.data.array[c+2]=d;this.data.array[c+3]=b;return this}};THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.name="";this.type="Geometry";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=false;this.elementsNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.groupsNeedUpdate=false};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(b){var h=new THREE.Matrix3().getNormalMatrix(b);for(var e=0,a=this.vertices.length;e<a;e++){var g=this.vertices[e];g.applyMatrix4(b)}for(var e=0,a=this.faces.length;e<a;e++){var f=this.faces[e];f.normal.applyMatrix3(h).normalize();for(var c=0,d=f.vertexNormals.length;c<d;c++){f.vertexNormals[c].applyMatrix3(h).normalize()}}if(this.boundingBox!==null){this.computeBoundingBox()}if(this.boundingSphere!==null){this.computeBoundingSphere()}this.verticesNeedUpdate=true;this.normalsNeedUpdate=true},rotateX:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationX(c);this.applyMatrix(b);return this}}(),rotateY:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationY(c);this.applyMatrix(b);return this}}(),rotateZ:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationZ(c);this.applyMatrix(b);return this}}(),translate:function(){var a;return function b(c,e,d){if(a===undefined){a=new THREE.Matrix4()}a.makeTranslation(c,e,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function b(c,e,d){if(a===undefined){a=new THREE.Matrix4()}a.makeScale(c,e,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function b(c){if(a===undefined){a=new THREE.Object3D()}a.lookAt(c);a.updateMatrix();this.applyMatrix(a.matrix)}}(),fromBufferGeometry:function(e){var b=this;var f=e.index!==null?e.index.array:undefined;var m=e.attributes;var k=m.position.array;var p=m.normal!==undefined?m.normal.array:undefined;var n=m.color!==undefined?m.color.array:undefined;var o=m.uv!==undefined?m.uv.array:undefined;var u=m.uv2!==undefined?m.uv2.array:undefined;if(u!==undefined){this.faceVertexUvs[1]=[]}var a=[];var q=[];var c=[];for(var s=0,r=0;s<k.length;s+=3,r+=2){b.vertices.push(new THREE.Vector3(k[s],k[s+1],k[s+2]));if(p!==undefined){a.push(new THREE.Vector3(p[s],p[s+1],p[s+2]))}if(n!==undefined){b.colors.push(new THREE.Color(n[s],n[s+1],n[s+2]))}if(o!==undefined){q.push(new THREE.Vector2(o[r],o[r+1]))}if(u!==undefined){c.push(new THREE.Vector2(u[r],u[r+1]))}}function g(j,i,D){var A=p!==undefined?[a[j].clone(),a[i].clone(),a[D].clone()]:[];var B=n!==undefined?[b.colors[j].clone(),b.colors[i].clone(),b.colors[D].clone()]:[];var C=new THREE.Face3(j,i,D,A,B);b.faces.push(C);if(o!==undefined){b.faceVertexUvs[0].push([q[j].clone(),q[i].clone(),q[D].clone()])}if(u!==undefined){b.faceVertexUvs[1].push([c[j].clone(),c[i].clone(),c[D].clone()])}}if(f!==undefined){var v=e.groups;if(v.length>0){for(var s=0;s<v.length;s++){var l=v[s];var d=l.start;var h=l.count;for(var r=d,t=d+h;r<t;r+=3){g(f[r],f[r+1],f[r+2])}}}else{for(var s=0;s<f.length;s+=3){g(f[s],f[s+1],f[s+2])}}}else{for(var s=0;s<k.length/3;s+=3){g(s,s+1,s+2)}}this.computeFaceNormals();if(e.boundingBox!==null){this.boundingBox=e.boundingBox.clone()}if(e.boundingSphere!==null){this.boundingSphere=e.boundingSphere.clone()}return this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},normalize:function(){this.computeBoundingSphere();var b=this.boundingSphere.center;var a=this.boundingSphere.radius;var d=a===0?1:1/a;var c=new THREE.Matrix4();c.set(d,0,0,-d*b.x,0,d,0,-d*b.y,0,0,d,-d*b.z,0,0,0,1);this.applyMatrix(c);return this},computeFaceNormals:function(){var a=new THREE.Vector3(),i=new THREE.Vector3();for(var h=0,g=this.faces.length;h<g;h++){var e=this.faces[h];var d=this.vertices[e.a];var c=this.vertices[e.b];var b=this.vertices[e.c];a.subVectors(b,c);i.subVectors(d,c);a.cross(i);a.normalize();e.normal.copy(a)}},computeVertexNormals:function(h){if(h===undefined){h=true}var m,e,i,l,k,j;j=new Array(this.vertices.length);for(m=0,e=this.vertices.length;m<e;m++){j[m]=new THREE.Vector3()}if(h){var c,b,a;var g=new THREE.Vector3(),n=new THREE.Vector3();for(i=0,l=this.faces.length;i<l;i++){k=this.faces[i];c=this.vertices[k.a];b=this.vertices[k.b];a=this.vertices[k.c];g.subVectors(a,b);n.subVectors(c,b);g.cross(n);j[k.a].add(g);j[k.b].add(g);j[k.c].add(g)}}else{for(i=0,l=this.faces.length;i<l;i++){k=this.faces[i];j[k.a].add(k.normal);j[k.b].add(k.normal);j[k.c].add(k.normal)}}for(m=0,e=this.vertices.length;m<e;m++){j[m].normalize()}var d;for(i=0,l=this.faces.length;i<l;i++){k=this.faces[i];d=k.vertexNormals;if(d.length===3){d[0].copy(j[k.a]);d[1].copy(j[k.b]);d[2].copy(j[k.c])}else{d[0]=j[k.a].clone();d[1]=j[k.b].clone();d[2]=j[k.c].clone()}}if(this.faces.length>0){this.normalsNeedUpdate=true}},computeMorphNormals:function(){var e,l,g,m,h;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];if(!h.__originalFaceNormal){h.__originalFaceNormal=h.normal.clone()}else{h.__originalFaceNormal.copy(h.normal)}if(!h.__originalVertexNormals){h.__originalVertexNormals=[]}for(e=0,l=h.vertexNormals.length;e<l;e++){if(!h.__originalVertexNormals[e]){h.__originalVertexNormals[e]=h.vertexNormals[e].clone()}else{h.__originalVertexNormals[e].copy(h.vertexNormals[e])}}}var c=new THREE.Geometry();c.faces=this.faces;for(e=0,l=this.morphTargets.length;e<l;e++){if(!this.morphNormals[e]){this.morphNormals[e]={};this.morphNormals[e].faceNormals=[];this.morphNormals[e].vertexNormals=[];var d=this.morphNormals[e].faceNormals;var a=this.morphNormals[e].vertexNormals;var k,b;for(g=0,m=this.faces.length;g<m;g++){k=new THREE.Vector3();b={a:new THREE.Vector3(),b:new THREE.Vector3(),c:new THREE.Vector3()};d.push(k);a.push(b)}}var j=this.morphNormals[e];c.vertices=this.morphTargets[e].vertices;c.computeFaceNormals();c.computeVertexNormals();var k,b;for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];k=j.faceNormals[g];b=j.vertexNormals[g];k.copy(h.normal);b.a.copy(h.vertexNormals[0]);b.b.copy(h.vertexNormals[1]);b.c.copy(h.vertexNormals[2])}}for(g=0,m=this.faces.length;g<m;g++){h=this.faces[g];h.normal=h.__originalFaceNormal;h.vertexNormals=h.__originalVertexNormals}},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){var e=0;var b=this.vertices;for(var c=0,a=b.length;c<a;c++){if(c>0){e+=b[c].distanceTo(b[c-1])}this.lineDistances[c]=e}},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3()}this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere()}this.boundingSphere.setFromPoints(this.vertices)},merge:function(f,s,E){if(f instanceof THREE.Geometry===false){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",f);return}var k,m=this.vertices.length,d=this.vertices,c=f.vertices,b=this.faces,a=f.faces,B=this.faceVertexUvs[0],A=f.faceVertexUvs[0];if(E===undefined){E=0}if(s!==undefined){k=new THREE.Matrix3().getNormalMatrix(s)}for(var t=0,l=c.length;t<l;t++){var C=c[t];var p=C.clone();if(s!==undefined){p.applyMatrix4(s)}d.push(p)}for(t=0,l=a.length;t<l;t++){var h=a[t],o,D,q,n=h.vertexNormals,v=h.vertexColors;o=new THREE.Face3(h.a+m,h.b+m,h.c+m);o.normal.copy(h.normal);if(k!==undefined){o.normal.applyMatrix3(k).normalize()}for(var r=0,u=n.length;r<u;r++){D=n[r].clone();if(k!==undefined){D.applyMatrix3(k).normalize()}o.vertexNormals.push(D)}o.color.copy(h.color);for(var r=0,u=v.length;r<u;r++){q=v[r];o.vertexColors.push(q.clone())}o.materialIndex=h.materialIndex+E;b.push(o)}for(t=0,l=A.length;t<l;t++){var g=A[t],e=[];if(g===undefined){continue}for(var r=0,u=g.length;r<u;r++){e.push(g[r].clone())}B.push(e)}},mergeMesh:function(a){if(a instanceof THREE.Mesh===false){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a);return}a.matrixAutoUpdate&&a.updateMatrix();this.merge(a.geometry,a.matrix)},mergeVertices:function(){var b={};var a=[],t=[];var f,u;var g=4;var s=Math.pow(10,g);var q,e,d;var c,p,r;for(q=0,e=this.vertices.length;q<e;q++){f=this.vertices[q];u=Math.round(f.x*s)+"_"+Math.round(f.y*s)+"_"+Math.round(f.z*s);if(b[u]===undefined){b[u]=q;a.push(this.vertices[q]);t[q]=a.length-1}else{t[q]=t[b[u]]}}var l=[];for(q=0,e=this.faces.length;q<e;q++){d=this.faces[q];d.a=t[d.a];d.b=t[d.b];d.c=t[d.c];c=[d.a,d.b,d.c];var o=-1;for(var m=0;m<3;m++){if(c[m]===c[(m+1)%3]){o=m;l.push(q);break}}}for(q=l.length-1;q>=0;q--){var k=l[q];this.faces.splice(k,1);for(p=0,r=this.faceVertexUvs.length;p<r;p++){this.faceVertexUvs[p].splice(k,1)}}var h=this.vertices.length-a.length;this.vertices=a;return h},sortFacesByMaterialIndex:function(){var c=this.faces;var b=c.length;for(var d=0;d<b;d++){c[d]._id=d}function g(k,i){return k.materialIndex-i.materialIndex}c.sort(g);var j=this.faceVertexUvs[0];var h=this.faceVertexUvs[1];var f,e;if(j&&j.length===b){f=[]}if(h&&h.length===b){e=[]}for(var d=0;d<b;d++){var a=c[d]._id;if(f){f.push(j[a])}if(e){e.push(h[a])}}if(f){this.faceVertexUvs[0]=f}if(e){this.faceVertexUvs[1]=e}},toJSON:function(){var F={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};F.uuid=this.uuid;F.type=this.type;if(this.name!==""){F.name=this.name}if(this.parameters!==undefined){var f=this.parameters;for(var H in f){if(f[H]!==undefined){F[H]=f[H]}}return F}var e=[];for(var u=0;u<this.vertices.length;u++){var A=this.vertices[u];e.push(A.x,A.y,A.z)}var b=[];var p=[];var m={};var h=[];var D={};var j=[];var d={};for(var u=0;u<this.faces.length;u++){var g=this.faces[u];var n=true;var C=false;var a=this.faceVertexUvs[0][u]!==undefined;var v=g.normal.length()>0;var t=g.vertexNormals.length>0;var r=g.color.r!==1||g.color.g!==1||g.color.b!==1;var o=g.vertexColors.length>0;var G=0;G=l(G,0,0);G=l(G,1,n);G=l(G,2,C);G=l(G,3,a);G=l(G,4,v);G=l(G,5,t);G=l(G,6,r);G=l(G,7,o);b.push(G);b.push(g.a,g.b,g.c);b.push(g.materialIndex);if(a){var B=this.faceVertexUvs[0][u];b.push(c(B[0]),c(B[1]),c(B[2]))}if(v){b.push(E(g.normal))}if(t){var s=g.vertexNormals;b.push(E(s[0]),E(s[1]),E(s[2]))}if(r){b.push(k(g.color))}if(o){var q=g.vertexColors;b.push(k(q[0]),k(q[1]),k(q[2]))}}function l(J,i,I){return I?J|(1<<i):J&(~(1<<i))}function E(I){var i=I.x.toString()+I.y.toString()+I.z.toString();if(m[i]!==undefined){return m[i]}m[i]=p.length/3;p.push(I.x,I.y,I.z);return m[i]}function k(i){var I=i.r.toString()+i.g.toString()+i.b.toString();if(D[I]!==undefined){return D[I]}D[I]=h.length;h.push(i.getHex());return D[I]}function c(i){var I=i.x.toString()+i.y.toString();if(d[I]!==undefined){return d[I]}d[I]=j.length/2;j.push(i.x,i.y);return d[I]}F.data={};F.data.vertices=e;F.data.normals=p;if(h.length>0){F.data.colors=h}if(j.length>0){F.data.uvs=[j]}F.data.faces=b;return F},clone:function(){return new THREE.Geometry().copy(this)},copy:function(a){this.vertices=[];this.faces=[];this.faceVertexUvs=[[]];var n=a.vertices;for(var h=0,o=n.length;h<o;h++){this.vertices.push(n[h].clone())}var d=a.faces;for(var h=0,o=d.length;h<o;h++){this.faces.push(d[h].clone())}for(var h=0,o=a.faceVertexUvs.length;h<o;h++){var m=a.faceVertexUvs[h];if(this.faceVertexUvs[h]===undefined){this.faceVertexUvs[h]=[]}for(var g=0,l=m.length;g<l;g++){var f=m[g],p=[];for(var e=0,b=f.length;e<b;e++){var c=f[e];p.push(c.clone())}this.faceVertexUvs[h].push(p)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="DirectGeometry";this.indices=[];this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];this.boundingBox=null;this.boundingSphere=null;this.verticesNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.uvsNeedUpdate=false;this.groupsNeedUpdate=false};THREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(g){var f;var c=[];var b;var a=g.faces;for(var d=0;d<a.length;d++){var e=a[d];if(e.materialIndex!==b){b=e.materialIndex;if(f!==undefined){f.count=(d*3)-f.start;c.push(f)}f={start:d*3,materialIndex:b}}}if(f!==undefined){f.count=(d*3)-f.start;c.push(f)}this.groups=c},fromGeometry:function(e){var c=e.faces;var f=e.vertices;var C=e.faceVertexUvs;var a=C[0]&&C[0].length>0;var u=C[1]&&C[1].length>0;var k=e.morphTargets;var D=k.length;var b;if(D>0){b=[];for(var v=0;v<D;v++){b[v]=[]}this.morphTargets.position=b}var m=e.morphNormals;var q=m.length;var p;if(q>0){p=[];for(var v=0;v<q;v++){p[v]=[]}this.morphTargets.normal=p}var n=e.skinIndices;var d=e.skinWeights;var g=n.length===f.length;var E=d.length===f.length;for(var v=0;v<c.length;v++){var h=c[v];this.vertices.push(f[h.a],f[h.b],f[h.c]);var s=h.vertexNormals;if(s.length===3){this.normals.push(s[0],s[1],s[2])}else{var F=h.normal;this.normals.push(F,F,F)}var o=h.vertexColors;if(o.length===3){this.colors.push(o[0],o[1],o[2])}else{var r=h.color;this.colors.push(r,r,r)}if(a===true){var l=C[0][v];if(l!==undefined){this.uvs.push(l[0],l[1],l[2])}else{console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v);this.uvs.push(new THREE.Vector2(),new THREE.Vector2(),new THREE.Vector2())}}if(u===true){var l=C[1][v];if(l!==undefined){this.uvs2.push(l[0],l[1],l[2])}else{console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v);this.uvs2.push(new THREE.Vector2(),new THREE.Vector2(),new THREE.Vector2())}}for(var t=0;t<D;t++){var B=k[t].vertices;b[t].push(B[h.a],B[h.b],B[h.c])}for(var t=0;t<q;t++){var A=m[t].vertexNormals[v];p[t].push(A.a,A.b,A.c)}if(g){this.skinIndices.push(n[h.a],n[h.b],n[h.c])}if(E){this.skinWeights.push(d[h.a],d[h.b],d[h.c])}}this.computeGroups(e);this.verticesNeedUpdate=e.verticesNeedUpdate;this.normalsNeedUpdate=e.normalsNeedUpdate;this.colorsNeedUpdate=e.colorsNeedUpdate;this.uvsNeedUpdate=e.uvsNeedUpdate;this.groupsNeedUpdate=e.groupsNeedUpdate;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype);THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity}};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,getIndex:function(){return this.index},setIndex:function(a){this.index=a},addAttribute:function(a,b){if(b instanceof THREE.BufferAttribute===false&&b instanceof THREE.InterleavedBufferAttribute===false){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).");this.addAttribute(a,new THREE.BufferAttribute(arguments[1],arguments[2]));return}if(a==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.");this.setIndex(b);return}this.attributes[a]=b;return this},getAttribute:function(a){return this.attributes[a]},removeAttribute:function(a){delete this.attributes[a];return this},addGroup:function(c,b,a){this.groups.push({start:c,count:b,materialIndex:a!==undefined?a:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(b,a){this.drawRange.start=b;this.drawRange.count=a},applyMatrix:function(b){var a=this.attributes.position;if(a!==undefined){b.applyToVector3Array(a.array);a.needsUpdate=true}var c=this.attributes.normal;if(c!==undefined){var d=new THREE.Matrix3().getNormalMatrix(b);d.applyToVector3Array(c.array);c.needsUpdate=true}if(this.boundingBox!==null){this.computeBoundingBox()}if(this.boundingSphere!==null){this.computeBoundingSphere()}},rotateX:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationX(c);this.applyMatrix(b);return this}}(),rotateY:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationY(c);this.applyMatrix(b);return this}}(),rotateZ:function(){var b;return function a(c){if(b===undefined){b=new THREE.Matrix4()}b.makeRotationZ(c);this.applyMatrix(b);return this}}(),translate:function(){var a;return function b(c,e,d){if(a===undefined){a=new THREE.Matrix4()}a.makeTranslation(c,e,d);this.applyMatrix(a);return this}}(),scale:function(){var a;return function b(c,e,d){if(a===undefined){a=new THREE.Matrix4()}a.makeScale(c,e,d);this.applyMatrix(a);return this}}(),lookAt:function(){var a;return function b(c){if(a===undefined){a=new THREE.Object3D()}a.lookAt(c);a.updateMatrix();this.applyMatrix(a.matrix)}}(),center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();this.translate(a.x,a.y,a.z);return a},setFromObject:function(d){var e=d.geometry;if(d instanceof THREE.Points||d instanceof THREE.Line){var b=new THREE.Float32Attribute(e.vertices.length*3,3);var a=new THREE.Float32Attribute(e.colors.length*3,3);this.addAttribute("position",b.copyVector3sArray(e.vertices));this.addAttribute("color",a.copyColorsArray(e.colors));if(e.lineDistances&&e.lineDistances.length===e.vertices.length){var c=new THREE.Float32Attribute(e.lineDistances.length,1);this.addAttribute("lineDistance",c.copyArray(e.lineDistances))}if(e.boundingSphere!==null){this.boundingSphere=e.boundingSphere.clone()}if(e.boundingBox!==null){this.boundingBox=e.boundingBox.clone()}}else{if(d instanceof THREE.Mesh){if(e instanceof THREE.Geometry){this.fromGeometry(e)}}}return this},updateFromObject:function(a){var c=a.geometry;if(a instanceof THREE.Mesh){var d=c.__directGeometry;if(d===undefined){return this.fromGeometry(c)}d.verticesNeedUpdate=c.verticesNeedUpdate;d.normalsNeedUpdate=c.normalsNeedUpdate;d.colorsNeedUpdate=c.colorsNeedUpdate;d.uvsNeedUpdate=c.uvsNeedUpdate;d.groupsNeedUpdate=c.groupsNeedUpdate;c.verticesNeedUpdate=false;c.normalsNeedUpdate=false;c.colorsNeedUpdate=false;c.uvsNeedUpdate=false;c.groupsNeedUpdate=false;c=d}if(c.verticesNeedUpdate===true){var b=this.attributes.position;if(b!==undefined){b.copyVector3sArray(c.vertices);b.needsUpdate=true}c.verticesNeedUpdate=false}if(c.normalsNeedUpdate===true){var b=this.attributes.normal;if(b!==undefined){b.copyVector3sArray(c.normals);b.needsUpdate=true}c.normalsNeedUpdate=false}if(c.colorsNeedUpdate===true){var b=this.attributes.color;if(b!==undefined){b.copyColorsArray(c.colors);b.needsUpdate=true}c.colorsNeedUpdate=false}if(c.uvsNeedUpdate){var b=this.attributes.uv;if(b!==undefined){b.copyVector2sArray(c.uvs);b.needsUpdate=true}c.uvsNeedUpdate=false}if(c.lineDistancesNeedUpdate){var b=this.attributes.lineDistance;if(b!==undefined){b.copyArray(c.lineDistances);b.needsUpdate=true}c.lineDistancesNeedUpdate=false}if(c.groupsNeedUpdate){c.computeGroups(a.geometry);this.groups=c.groups;c.groupsNeedUpdate=false}return this},fromGeometry:function(a){a.__directGeometry=new THREE.DirectGeometry().fromGeometry(a);return this.fromDirectGeometry(a.__directGeometry)},fromDirectGeometry:function(o){var m=new Float32Array(o.vertices.length*3);this.addAttribute("position",new THREE.BufferAttribute(m,3).copyVector3sArray(o.vertices));if(o.normals.length>0){var p=new Float32Array(o.normals.length*3);this.addAttribute("normal",new THREE.BufferAttribute(p,3).copyVector3sArray(o.normals))}if(o.colors.length>0){var b=new Float32Array(o.colors.length*3);this.addAttribute("color",new THREE.BufferAttribute(b,3).copyColorsArray(o.colors))}if(o.uvs.length>0){var h=new Float32Array(o.uvs.length*2);this.addAttribute("uv",new THREE.BufferAttribute(h,2).copyVector2sArray(o.uvs))}if(o.uvs2.length>0){var s=new Float32Array(o.uvs2.length*2);this.addAttribute("uv2",new THREE.BufferAttribute(s,2).copyVector2sArray(o.uvs2))}if(o.indices.length>0){var q=o.vertices.length>65535?Uint32Array:Uint16Array;var r=new q(o.indices.length*3);this.setIndex(new THREE.BufferAttribute(r,1).copyIndicesArray(o.indices))}this.groups=o.groups;for(var c in o.morphTargets){var n=[];var f=o.morphTargets[c];for(var k=0,g=f.length;k<g;k++){var j=f[k];var e=new THREE.Float32Attribute(j.length*3,3);n.push(e.copyVector3sArray(j))}this.morphAttributes[c]=n}if(o.skinIndices.length>0){var d=new THREE.Float32Attribute(o.skinIndices.length*4,4);this.addAttribute("skinIndex",d.copyVector4sArray(o.skinIndices))}if(o.skinWeights.length>0){var a=new THREE.Float32Attribute(o.skinWeights.length*4,4);this.addAttribute("skinWeight",a.copyVector4sArray(o.skinWeights))}if(o.boundingSphere!==null){this.boundingSphere=o.boundingSphere.clone()}if(o.boundingBox!==null){this.boundingBox=o.boundingBox.clone()}return this},computeBoundingBox:function(){var a=new THREE.Vector3();return function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3()}var b=this.attributes.position.array;if(b){this.boundingBox.setFromArray(b)}if(b===undefined||b.length===0){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}}}(),computeBoundingSphere:function(){var b=new THREE.Box3();var a=new THREE.Vector3();return function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere()}var e=this.attributes.position.array;if(e){var c=this.boundingSphere.center;b.setFromArray(e);b.center(c);var d=0;for(var g=0,f=e.length;g<f;g+=3){a.fromArray(e,g);d=Math.max(d,c.distanceToSquared(a))}this.boundingSphere.radius=Math.sqrt(d);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var d=this.index;var h=this.attributes;var A=this.groups;if(h.position){var f=h.position.array;if(h.normal===undefined){this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(f.length),3))}else{var e=h.normal.array;for(var s=0,k=e.length;s<k;s++){e[s]=0}}var l=h.normal.array;var v,t,r,q=new THREE.Vector3(),o=new THREE.Vector3(),n=new THREE.Vector3(),m=new THREE.Vector3(),B=new THREE.Vector3();if(d){var b=d.array;if(A.length===0){this.addGroup(0,b.length)}for(var p=0,u=A.length;p<u;++p){var g=A[p];var a=g.start;var c=g.count;for(var s=a,k=a+c;s<k;s+=3){v=b[s+0]*3;t=b[s+1]*3;r=b[s+2]*3;q.fromArray(f,v);o.fromArray(f,t);n.fromArray(f,r);m.subVectors(n,o);B.subVectors(q,o);m.cross(B);l[v]+=m.x;l[v+1]+=m.y;l[v+2]+=m.z;l[t]+=m.x;l[t+1]+=m.y;l[t+2]+=m.z;l[r]+=m.x;l[r+1]+=m.y;l[r+2]+=m.z}}}else{for(var s=0,k=f.length;s<k;s+=9){q.fromArray(f,s);o.fromArray(f,s+3);n.fromArray(f,s+6);m.subVectors(n,o);B.subVectors(q,o);m.cross(B);l[s]=m.x;l[s+1]=m.y;l[s+2]=m.z;l[s+3]=m.x;l[s+4]=m.y;l[s+5]=m.z;l[s+6]=m.x;l[s+7]=m.y;l[s+8]=m.z}}this.normalizeNormals();h.normal.needsUpdate=true}},merge:function(l,f){if(l instanceof THREE.BufferGeometry===false){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",l);return}if(f===undefined){f=0}var g=this.attributes;for(var m in g){if(l.attributes[m]===undefined){continue}var d=g[m];var b=d.array;var c=l.attributes[m];var a=c.array;var k=c.itemSize;for(var h=0,e=k*f;h<a.length;h++,e++){b[e]=a[h]}}return this},normalizeNormals:function(){var d=this.attributes.normal.array;var a,g,e,f;for(var c=0,b=d.length;c<b;c+=3){a=d[c];g=d[c+1];e=d[c+2];f=1/Math.sqrt(a*a+g*g+e*e);d[c]*=f;d[c+1]*=f;d[c+2]*=f}},toNonIndexed:function(){if(this.index===null){console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.");return this}var g=new THREE.BufferGeometry();var n=this.index.array;var e=this.attributes;for(var a in e){var b=e[a];var m=b.array;var o=b.itemSize;var p=new m.constructor(n.length*o);var h=0,k=0;for(var f=0,c=n.length;f<c;f++){h=n[f]*o;for(var d=0;d<o;d++){p[k++]=m[h++]}}g.addAttribute(a,new THREE.BufferAttribute(p,o))}return g},toJSON:function(){var d={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};d.uuid=this.uuid;d.type=this.type;if(this.name!==""){d.name=this.name}if(this.parameters!==undefined){var i=this.parameters;for(var h in i){if(i[h]!==undefined){d[h]=i[h]}}return d}d.data={attributes:{}};var e=this.index;if(e!==null){var f=Array.prototype.slice.call(e.array);d.data.index={type:e.array.constructor.name,array:f}}var c=this.attributes;for(var h in c){var a=c[h];var f=Array.prototype.slice.call(a.array);d.data.attributes[h]={itemSize:a.itemSize,type:a.array.constructor.name,array:f}}var b=this.groups;if(b.length>0){d.data.groups=JSON.parse(JSON.stringify(b))}var g=this.boundingSphere;if(g!==null){d.data.boundingSphere={center:g.center.toArray(),radius:g.radius}}return d},clone:function(){return new THREE.BufferGeometry().copy(this)},copy:function(a){var h=a.index;if(h!==null){this.setIndex(h.clone())}var f=a.attributes;for(var b in f){var c=f[b];this.addAttribute(b,c.clone())}var d=a.groups;for(var g=0,e=d.length;g<e;g++){var j=d[g];this.addGroup(j.start,j.count)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.BufferGeometry.MaxIndex=65535;THREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this);this.type="InstancedBufferGeometry";this.maxInstancedCount=undefined};THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry;THREE.InstancedBufferGeometry.prototype.addGroup=function(c,a,b){this.groups.push({start:c,count:a,instances:b})};THREE.InstancedBufferGeometry.prototype.copy=function(a){var h=a.index;if(h!==null){this.setIndex(h.clone())}var f=a.attributes;for(var b in f){var c=f[b];this.addAttribute(b,c.clone())}var d=a.groups;for(var g=0,e=d.length;g<e;g++){var j=d[g];this.addGroup(j.start,j.count,j.instances)}return this};THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype);THREE.Uniform=function(a,b){this.type=a;this.value=b;this.dynamic=false};THREE.Uniform.prototype={constructor:THREE.Uniform,onUpdate:function(a){this.dynamic=true;this.onUpdateCallback=a;return this}};THREE.AnimationClip=function(b,c,a){this.name=b||THREE.Math.generateUUID();this.tracks=a;this.duration=(c!==undefined)?c:-1;if(this.duration<0){this.resetDuration()}this.trim();this.optimize()};THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,resetDuration:function(){var b=this.tracks,d=0;for(var c=0,e=b.length;c!==e;++c){var a=this.tracks[c];d=Math.max(d,a.times[a.times.length-1])}this.duration=d},trim:function(){for(var a=0;a<this.tracks.length;a++){this.tracks[a].trim(0,this.duration)}return this},optimize:function(){for(var a=0;a<this.tracks.length;a++){this.tracks[a].optimize()}return this}};Object.assign(THREE.AnimationClip,{parse:function(d){var a=[],c=d.tracks,e=1/(d.fps||1);for(var b=0,f=c.length;b!==f;++b){a.push(THREE.KeyframeTrack.parse(c[b]).scale(e))}return new THREE.AnimationClip(d.name,d.duration,a)},toJSON:function(d){var a=[],f=d.tracks;var c={name:d.name,duration:d.duration,tracks:a};for(var b=0,e=f.length;b!==e;++b){a.push(THREE.KeyframeTrack.toJSON(f[b]))}return c},CreateFromMorphTargetSequence:function(b,j,c){var g=j.length;var f=[];for(var e=0;e<g;e++){var a=[];var h=[];a.push((e+g-1)%g,e,(e+1)%g);h.push(0,1,0);var d=THREE.AnimationUtils.getKeyframeOrder(a);a=THREE.AnimationUtils.sortedArray(a,1,d);h=THREE.AnimationUtils.sortedArray(h,1,d);if(a[0]===0){a.push(g);h.push(h[0])}f.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences["+j[e].name+"]",a,h).scale(1/c))}return new THREE.AnimationClip(b,-1,f)},findByName:function(c,a){for(var b=0;b<c.length;b++){if(c[b].name===a){return c[b]}}return null},CreateClipsFromMorphTargetSequences:function(d,c){var j={};var k=/^([\w-]*?)([\d]+)$/;for(var h=0,l=d.length;h<l;h++){var g=d[h];var e=g.name.match(k);if(e&&e.length>1){var b=e[1];var f=j[b];if(!f){j[b]=f=[]}f.push(g)}}var a=[];for(var b in j){a.push(THREE.AnimationClip.CreateFromMorphTargetSequence(b,j[b],c))}return a},parseAnimation:function(u,t,b){if(!u){console.error("  no animation in JSONLoader data");return null}var c=function(C,B,D,m,k){if(D.length!==0){var E=[];var h=[];THREE.AnimationUtils.flattenJSON(D,E,h,m);if(E.length!==0){k.push(new C(B,E,h))}}};var r=[];var n=u.name||"default";var a=u.length||-1;var e=u.fps||30;var l=u.hierarchy||[];for(var s=0;s<l.length;s++){var A=l[s].keys;if(!A||A.length==0){continue}if(A[0].morphTargets){var o={};for(var q=0;q<A.length;q++){if(A[q].morphTargets){for(var p=0;p<A[q].morphTargets.length;p++){o[A[q].morphTargets[p]]=-1}}}for(var j in o){var i=[];var d=[];for(var p=0;p!==A[q].morphTargets.length;++p){var f=A[q];i.push(f.time);d.push((f.morphTarget===j)?1:0)}r.push(new THREE.NumberKeyframeTrack(".morphTargetInfluence["+j+"]",i,d))}a=o.length*(e||1)}else{var g=".bones["+t[s].name+"]";c(THREE.VectorKeyframeTrack,g+".position",A,"pos",r);c(THREE.QuaternionKeyframeTrack,g+".quaternion",A,"rot",r);c(THREE.VectorKeyframeTrack,g+".scale",A,"scl",r)}}if(r.length===0){return null}var v=new THREE.AnimationClip(n,a,r);return v}});THREE.AnimationMixer=function(a){this._root=a;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1};THREE.AnimationMixer.prototype={constructor:THREE.AnimationMixer,clipAction:function(d,b){var g=b||this._root,j=g.uuid,h=(typeof d==="string")?d:d.name,i=(d!==h)?d:null,c=this._actionsByClip[h],a;if(c!==undefined){var e=c.actionByRoot[j];if(e!==undefined){return e}a=c.knownActions[0];i=a._clip;if(d!==h&&d!==i){throw new Error("Different clips with the same name detected!")}}if(i===null){return null}var f=new THREE.AnimationMixer._Action(this,i,b);this._bindAction(f,a);this._addInactiveAction(f,h,j);return f},existingAction:function(f,a){var d=a||this._root,c=d.uuid,b=(typeof f==="string")?f:f.name,e=this._actionsByClip[b];if(e!==undefined){return e.actionByRoot[c]||null}return null},stopAllAction:function(){var d=this._actions,c=this._nActiveActions,e=this._bindings,a=this._nActiveBindings;this._nActiveActions=0;this._nActiveBindings=0;for(var b=0;b!==c;++b){d[b].reset()}for(var b=0;b!==a;++b){e[b].useCount=0}return this},update:function(k){k*=this.timeScale;var h=this._actions,d=this._nActiveActions,e=this.time+=k,b=Math.sign(k),c=this._accuIndex^=1;for(var j=0;j!==d;++j){var g=h[j];if(g.enabled){g._update(e,k,b,c)}}var a=this._bindings,f=this._nActiveBindings;for(var j=0;j!==f;++j){a[j].apply(c)}return this},getRoot:function(){return this._root},uncacheClip:function(c){var g=this._actions,k=c.name,f=this._actionsByClip,a=f[k];if(a!==undefined){var l=a.knownActions;for(var h=0,b=l.length;h!==b;++h){var e=l[h];this._deactivateAction(e);var j=e._cacheIndex,d=g[g.length-1];e._cacheIndex=null;e._byClipCacheIndex=null;d._cacheIndex=j;g[j]=d;g.pop();this._removeInactiveBindingsForAction(e)}delete f[k]}},uncacheRoot:function(f){var j=f.uuid,b=this._actionsByClip;for(var g in b){var d=b[g].actionByRoot,a=d[j];if(a!==undefined){this._deactivateAction(a);this._removeInactiveAction(a)}}var h=this._bindingsByRootAndName,c=h[j];if(c!==undefined){for(var i in c){var e=c[i];e.restoreOriginalState();this._removeInactiveBinding(e)}}},uncacheAction:function(b,a){var c=this.existingAction(b,a);if(c!==null){this._deactivateAction(c);this._removeInactiveAction(c)}}};THREE.EventDispatcher.prototype.apply(THREE.AnimationMixer.prototype);THREE.AnimationMixer._Action=function(b,c,j){this._mixer=b;this._clip=c;this._localRoot=j||null;var g=c.tracks,e=g.length,f=new Array(e);var h={endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding};for(var d=0;d!==e;++d){var a=g[d].createInterpolant(null);f[d]=a;a.settings=h}this._interpolantSettings=h;this._interpolants=f;this._propertyBindings=new Array(e);this._cacheIndex=null;this._byClipCacheIndex=null;this._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=THREE.LoopRepeat;this._loopCount=-1;this._startTime=null;this.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;this.paused=false;this.enabled=true;this.clampWhenFinished=false;this.zeroSlopeAtStart=true;this.zeroSlopeAtEnd=true};THREE.AnimationMixer._Action.prototype={constructor:THREE.AnimationMixer._Action,play:function(){this._mixer._activateAction(this);return this},stop:function(){this._mixer._deactivateAction(this);return this.reset()},reset:function(){this.paused=false;this.enabled=true;this.time=0;this._loopCount=-1;this._startTime=null;return this.stopFading().stopWarping()},isRunning:function(){var a=this._startTime;return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(a){this._startTime=a;return this},setLoop:function(b,a){this.loop=b;this.repetitions=a;return this},setEffectiveWeight:function(a){this.weight=a;this._effectiveWeight=this.enabled?a:0;return this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(a){return this._scheduleFading(a,0,1)},fadeOut:function(a){return this._scheduleFading(a,1,0)},crossFadeFrom:function(h,f,e){var a=this._mixer;h.fadeOut(f);this.fadeIn(f);if(e){var c=this._clip.duration,d=h._clip.duration,b=d/c,g=c/d;h.warp(1,b,f);this.warp(g,1,f)}return this},crossFadeTo:function(c,b,a){return c.crossFadeFrom(this,b,a)},stopFading:function(){var a=this._weightInterpolant;if(a!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(a)}return this},setEffectiveTimeScale:function(a){this.timeScale=a;this._effectiveTimeScale=this.paused?0:a;return this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(a){this.timeScale=this._clip.duration/a;return this.stopWarping()},syncWith:function(a){this.time=a.time;this.timeScale=a.timeScale;return this.stopWarping()},halt:function(a){return this.warp(this._currentTimeScale,0,a)},warp:function(g,e,f){var d=this._mixer,c=d.time,a=this._timeScaleInterpolant,h=this.timeScale;if(a===null){a=d._lendControlInterpolant(),this._timeScaleInterpolant=a}var b=a.parameterPositions,i=a.sampleValues;b[0]=c;b[1]=c+f;i[0]=g/h;i[1]=e/h;return this},stopWarping:function(){var a=this._timeScaleInterpolant;if(a!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(a)}return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(f,l,c,d){var b=this._startTime;if(b!==null){var a=(f-b)*c;if(a<0||c===0){return}this._startTime=null;l=c*a}l*=this._updateTimeScale(f);var n=this._updateTime(l);var i=this._updateWeight(f);if(i>0){var k=this._interpolants;var h=this._propertyBindings;for(var g=0,e=k.length;g!==e;++g){k[g].evaluate(n);h[g].accumulate(d,i)}}},_updateWeight:function(c){var b=0;if(this.enabled){b=this.weight;var d=this._weightInterpolant;if(d!==null){var a=d.evaluate(c)[0];b*=a;if(c>d.parameterPositions[1]){this.stopFading();if(a===0){this.enabled=false}}}}this._effectiveWeight=b;return b},_updateTimeScale:function(c){var b=0;if(!this.paused){b=this.timeScale;var d=this._timeScaleInterpolant;if(d!==null){var a=d.evaluate(c)[0];b*=a;if(c>d.parameterPositions[1]){this.stopWarping();if(b===0){this.pause=true}else{this.timeScale=b}}}}this._effectiveTimeScale=b;return b},_updateTime:function(g){var d=this.time+g;if(g===0){return d}var e=this._clip.duration,f=this.loop,h=this._loopCount,b=false;switch(f){case THREE.LoopOnce:if(h===-1){this.loopCount=0;this._setEndings(true,true,false)}if(d>=e){d=e}else{if(d<0){d=0}else{break}}if(this.clampWhenFinished){this.pause=true}else{this.enabled=false}this._mixer.dispatchEvent({type:"finished",action:this,direction:g<0?-1:1});break;case THREE.LoopPingPong:b=true;case THREE.LoopRepeat:if(h===-1){if(g>0){h=0;this._setEndings(true,this.repetitions===0,b)}else{this._setEndings(this.repetitions===0,true,b)}}if(d>=e||d<0){var i=Math.floor(d/e);d-=e*i;h+=Math.abs(i);var c=this.repetitions-h;if(c<0){if(this.clampWhenFinished){this.paused=true}else{this.enabled=false}d=g>0?e:0;this._mixer.dispatchEvent({type:"finished",action:this,direction:g>0?1:-1});break}else{if(c===0){var a=g<0;this._setEndings(a,!a,b)}else{this._setEndings(false,false,b)}}this._loopCount=h;this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}if(f===THREE.LoopPingPong&&(h&1)===1){this.time=d;return e-d}break}this.time=d;return d},_setEndings:function(b,a,d){var c=this._interpolantSettings;if(d){c.endingStart=THREE.ZeroSlopeEnding;c.endingEnd=THREE.ZeroSlopeEnding}else{if(b){c.endingStart=this.zeroSlopeAtStart?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding}else{c.endingStart=THREE.WrapAroundEnding}if(a){c.endingEnd=this.zeroSlopeAtEnd?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding}else{c.endingEnd=THREE.WrapAroundEnding}}},_scheduleFading:function(e,h,a){var b=this._mixer,d=b.time,g=this._weightInterpolant;if(g===null){g=b._lendControlInterpolant(),this._weightInterpolant=g}var f=g.parameterPositions,c=g.sampleValues;f[0]=d;c[0]=h;f[1]=d+e;c[1]=a;return this}};Object.assign(THREE.AnimationMixer.prototype,{_bindAction:function(e,a){var l=e._localRoot||this._root,j=e._clip.tracks,g=j.length,c=e._propertyBindings,h=e._interpolants,p=l.uuid,m=this._bindingsByRootAndName,b=m[p];if(b===undefined){b={};m[p]=b}for(var f=0;f!==g;++f){var d=j[f],n=d.name,k=b[n];if(k!==undefined){c[f]=k}else{k=c[f];if(k!==undefined){if(k._cacheIndex===null){++k.referenceCount;this._addInactiveBinding(k,p,n)}continue}var o=a&&a._propertyBindings[f].binding.parsedPath;k=new THREE.PropertyMixer(THREE.PropertyBinding.create(l,n,o),d.ValueTypeName,d.getValueSize());++k.referenceCount;this._addInactiveBinding(k,p,n);c[f]=k}h[f].resultBuffer=k.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){var b=(e._localRoot||this._root).uuid,a=e._clip.name,d=this._actionsByClip[a];this._bindAction(e,d&&d.knownActions[0]);this._addInactiveAction(e,a,b)}var h=e._propertyBindings;for(var c=0,g=h.length;c!==g;++c){var f=h[c];if(f.useCount++===0){this._lendBinding(f);f.saveOriginalState()}}this._lendAction(e)}},_deactivateAction:function(b){if(this._isActiveAction(b)){var e=b._propertyBindings;for(var a=0,d=e.length;a!==d;++a){var c=e[a];if(--c.useCount===0){c.restoreOriginalState();this._takeBackBinding(c)}}this._takeBackAction(b)}},_initMemoryManager:function(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;var a=this;this.stats={actions:{get total(){return a._actions.length},get inUse(){return a._nActiveActions}},bindings:{get total(){return a._bindings.length},get inUse(){return a._nActiveBindings}},controlInterpolants:{get total(){return a._controlInterpolants.length},get inUse(){return a._nActiveControlInterpolants}}}},_isActiveAction:function(b){var a=b._cacheIndex;return a!==null&&a<this._nActiveActions},_addInactiveAction:function(f,c,b){var g=this._actions,e=this._actionsByClip,d=e[c];if(d===undefined){d={knownActions:[f],actionByRoot:{}};f._byClipCacheIndex=0;e[c]=d}else{var a=d.knownActions;f._byClipCacheIndex=a.length;a.push(f)}f._cacheIndex=g.length;g.push(f);d.actionByRoot[b]=f},_removeInactiveAction:function(f){var h=this._actions,e=h[h.length-1],j=f._cacheIndex;e._cacheIndex=j;h[j]=e;h.pop();f._cacheIndex=null;var k=f._clip.name,g=this._actionsByClip,c=g[k],a=c.knownActions,d=a[a.length-1],b=f._byClipCacheIndex;d._byClipCacheIndex=b;a[b]=d;a.pop();f._byClipCacheIndex=null;var i=c.actionByRoot,l=(h._localRoot||this._root).uuid;delete i[l];if(a.length===0){delete g[k]}this._removeInactiveBindingsForAction(f)},_removeInactiveBindingsForAction:function(b){var e=b._propertyBindings;for(var a=0,d=e.length;a!==d;++a){var c=e[a];if(--c.referenceCount===0){this._removeInactiveBinding(c)}}},_lendAction:function(c){var e=this._actions,a=c._cacheIndex,b=this._nActiveActions++,d=e[b];c._cacheIndex=b;e[b]=c;d._cacheIndex=a;e[a]=d},_takeBackAction:function(d){var e=this._actions,b=d._cacheIndex,a=--this._nActiveActions,c=e[a];d._cacheIndex=a;e[a]=d;c._cacheIndex=b;e[b]=c},_addInactiveBinding:function(e,a,d){var c=this._bindingsByRootAndName,b=c[a],f=this._bindings;if(b===undefined){b={};c[a]=b}b[d]=e;e._cacheIndex=f.length;f.push(e)},_removeInactiveBinding:function(d){var a=this._bindings,i=d.binding,j=i.rootNode.uuid,h=i.path,f=this._bindingsByRootAndName,b=f[j],c=a[a.length-1],e=d._cacheIndex;c._cacheIndex=e;a[e]=c;a.pop();delete b[h];remove_empty_map:{for(var g in b){break remove_empty_map}delete f[j]}},_lendBinding:function(d){var e=this._bindings,a=d._cacheIndex,c=this._nActiveBindings++,b=e[c];d._cacheIndex=c;e[c]=d;b._cacheIndex=a;e[a]=b},_takeBackBinding:function(d){var e=this._bindings,c=d._cacheIndex,b=--this._nActiveBindings,a=e[b];d._cacheIndex=b;e[b]=d;a._cacheIndex=c;e[c]=a},_lendControlInterpolant:function(){var c=this._controlInterpolants,a=this._nActiveControlInterpolants++,b=c[a];if(b===undefined){b=new THREE.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);b.__cacheIndex=a;c[a]=b}return b},_takeBackControlInterpolant:function(e){var d=this._controlInterpolants,b=e.__cacheIndex,a=--this._nActiveControlInterpolants,c=d[a];e.__cacheIndex=a;d[a]=e;c.__cacheIndex=b;d[b]=c},_controlInterpolantsResultBuffer:new Float32Array(1)});THREE.AnimationObjectGroup=function(d){this.uuid=THREE.Math.generateUUID();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;var c={};this._indicesByUUID=c;for(var a=0,e=arguments.length;a!==e;++a){c[arguments[a].uuid]=a}this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};var b=this;this.stats={objects:{get total(){return b._objects.length},get inUse(){return this.total-b.nCachedObjects_}},get bindingsPerObject(){return b._bindings.length}}};THREE.AnimationObjectGroup.prototype={constructor:THREE.AnimationObjectGroup,add:function(g){var a=this._objects,b=a.length,d=this.nCachedObjects_,D=this._indicesByUUID,p=this._paths,k=this._parsedPaths,B=this._bindings,h=B.length;for(var u=0,o=arguments.length;u!==o;++u){var C=arguments[u],v=C.uuid,f=D[v];if(f===undefined){f=b++;D[v]=f;a.push(C);for(var t=0,q=h;t!==q;++t){B[t].push(new THREE.PropertyBinding(C,p[t],k[t]))}}else{if(f<d){var e=a[f];var s=--d,A=a[s];D[A.uuid]=f;a[f]=A;D[v]=s;a[s]=C;for(var t=0,q=h;t!==q;++t){var c=B[t],r=c[s],l=c[f];c[f]=r;if(l===undefined){l=new THREE.PropertyBinding(C,p[t],k[t])}c[s]=l}}else{if(a[f]!==e){console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")}}}}this.nCachedObjects_=d},remove:function(g){var a=this._objects,b=a.length,c=this.nCachedObjects_,A=this._indicesByUUID,u=this._bindings,h=u.length;for(var s=0,p=arguments.length;s!==p;++s){var v=arguments[s],t=v.uuid,f=A[t];if(f!==undefined&&f>=c){var k=c++,l=a[k];A[l.uuid]=f;a[f]=l;A[t]=k;a[k]=v;for(var r=0,q=h;r!==q;++r){var d=u[r],e=d[k],o=d[f];d[f]=e;d[k]=o}}}this.nCachedObjects_=c},uncache:function(g){var a=this._objects,b=a.length,d=this.nCachedObjects_,C=this._indicesByUUID,A=this._bindings,h=A.length;for(var s=0,l=arguments.length;s!==l;++s){var B=arguments[s],t=B.uuid,f=C[t];if(f!==undefined){delete C[t];if(f<d){var q=--d,v=a[q],u=--b,e=a[u];C[v.uuid]=f;a[f]=v;C[e.uuid]=q;a[q]=e;a.pop();for(var r=0,o=h;r!==o;++r){var c=A[r],p=c[q],k=c[u];c[f]=p;c[q]=k;c.pop()}}else{var u=--b,e=a[u];C[e.uuid]=f;a[f]=e;a.pop();for(var r=0,o=h;r!==o;++r){var c=A[r];c[f]=c[u];c.pop()}}}}this.nCachedObjects_=d},subscribe_:function(p,h){var a=this._bindingsIndicesByPath,j=a[p],c=this._bindings;if(j!==undefined){return c[j]}var o=this._paths,f=this._parsedPaths,m=this._objects,k=m.length,l=this.nCachedObjects_,b=new Array(k);j=c.length;a[p]=j;o.push(p);f.push(h);c.push(b);for(var g=l,d=m.length;g!==d;++g){var e=m[g];b[g]=new THREE.PropertyBinding(e,p,h)}return b},unsubscribe_:function(i){var b=this._bindingsIndicesByPath,g=b[i];if(g!==undefined){var h=this._paths,d=this._parsedPaths,c=this._bindings,a=c.length-1,f=c[a],e=i[a];b[e]=g;c[g]=f;c.pop();d[g]=d[a];d.pop();h[g]=h[a];h.pop()}}};THREE.AnimationUtils={arraySlice:function(c,b,a){if(THREE.AnimationUtils.isTypedArray(c)){return new c.constructor(c.subarray(b,a))}return c.slice(b,a)},convertArray:function(c,a,b){if(!c||!b&&c.constructor===a){return c}if(typeof a.BYTES_PER_ELEMENT==="number"){return new a(c)}return Array.prototype.slice.call(c)},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(d){function c(g,f){return d[g]-d[f]}var e=d.length;var a=new Array(e);for(var b=0;b!==e;++b){a[b]=b}a.sort(c);return a},sortedArray:function(h,a,c){var g=h.length;var k=new h.constructor(g);for(var e=0,b=0;b!==g;++e){var f=c[e]*a;for(var d=0;d!==a;++d){k[b++]=h[f+d]}}return k},flattenJSON:function(e,g,b,a){var d=1,c=e[0];while(c!==undefined&&c[a]===undefined){c=e[d++]}if(c===undefined){return}var f=c[a];if(f===undefined){return}if(Array.isArray(f)){do{f=c[a];if(f!==undefined){g.push(c.time);b.push.apply(b,f)}c=e[d++]}while(c!==undefined)}else{if(f.toArray!==undefined){do{f=c[a];if(f!==undefined){g.push(c.time);f.toArray(b,b.length)}c=e[d++]}while(c!==undefined)}else{do{f=c[a];if(f!==undefined){g.push(c.time);b.push(f)}c=e[d++]}while(c!==undefined)}}}};THREE.KeyframeTrack=function(c,d,b,a){if(c===undefined){throw new Error("track name is undefined")}if(d===undefined||d.length===0){throw new Error("no keyframes in track named "+c)}this.name=c;this.times=THREE.AnimationUtils.convertArray(d,this.TimeBufferType);this.values=THREE.AnimationUtils.convertArray(b,this.ValueBufferType);this.setInterpolation(a||this.DefaultInterpolation);this.validate();this.optimize()};THREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(a){return new THREE.DiscreteInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodLinear:function(a){return new THREE.LinearInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:function(a){return new THREE.CubicInterpolant(this.times,this.values,this.getValueSize(),a)},setInterpolation:function(a){var b=undefined;switch(a){case THREE.InterpolateDiscrete:b=this.InterpolantFactoryMethodDiscrete;break;case THREE.InterpolateLinear:b=this.InterpolantFactoryMethodLinear;break;case THREE.InterpolateSmooth:b=this.InterpolantFactoryMethodSmooth;break}if(b===undefined){var c="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===undefined){if(a!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation)}else{throw new Error(c)}}console.warn(c);return}this.createInterpolant=b},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return THREE.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return THREE.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return THREE.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(a){if(a!==0){var c=this.times;for(var b=0,d=c.length;b!==d;++b){c[b]+=a}}return this},scale:function(b){if(b!==1){var c=this.times;for(var a=0,d=c.length;a!==d;++a){c[a]*=b}}return this},trim:function(c,a){var e=this.times,b=e.length,g=0,f=b-1;while(g!==b&&e[g]<c){++g}while(f!==-1&&e[f]>a){--f}++f;if(g!==0||f!==b){if(g>=f){f=Math.max(f,1),g=f-1}var d=this.getValueSize();this.times=THREE.AnimationUtils.arraySlice(e,g,f);this.values=THREE.AnimationUtils.arraySlice(this.values,g*d,f*d)}return this},validate:function(){var a=true;var g=this.getValueSize();if(g-Math.floor(g)!==0){console.error("invalid value size in track",this);a=false}var b=this.times,k=this.values,h=b.length;if(h===0){console.error("track is empty",this);a=false}var c=null;for(var e=0;e!==h;e++){var f=b[e];if(typeof f==="number"&&isNaN(f)){console.error("time is not a valid number",this,e,f);a=false;break}if(c!==null&&c>f){console.error("out of order keys",this,e,f,c);a=false;break}c=f}if(k!==undefined){if(THREE.AnimationUtils.isTypedArray(k)){for(var e=0,d=k.length;e!==d;++e){var j=k[e];if(isNaN(j)){console.error("value is not a valid number",this,e,j);a=false;break}}}}return a},optimize:function(){var b=this.times,r=this.values,c=this.getValueSize(),k=1;for(var h=1,d=b.length-1;h<=d;++h){var a=false;var e=b[h];var m=b[h+1];if(e!==m&&(h!==1||e!==e[0])){var g=h*c,p=g-c,s=g+c;for(var f=0;f!==c;++f){var o=r[g+f];if(o!==r[p+f]||o!==r[s+f]){a=true;break}}}if(a){if(h!==k){b[k]=b[h];var q=h*c,l=k*c;for(var f=0;f!==c;++f){r[l+f]=r[q+f]}}++k}}if(k!==b.length){this.times=THREE.AnimationUtils.arraySlice(b,0,k);this.values=THREE.AnimationUtils.arraySlice(r,0,k*c)}return this}};Object.assign(THREE.KeyframeTrack,{parse:function(b){if(b.type===undefined){throw new Error("track type undefined, can not parse")}var c=THREE.KeyframeTrack._getTrackTypeForValueTypeName(b.type);if(b.times===undefined){console.warn("legacy JSON format detected, converting");var d=[],a=[];THREE.AnimationUtils.flattenJSON(b.keys,d,a,"value");b.times=d;b.values=a}if(c.parse!==undefined){return c.parse(b)}else{return new c(b.name,b.times,b.values,b.interpolation)}},toJSON:function(a){var d=a.constructor;var c;if(d.toJSON!==undefined){c=d.toJSON(a)}else{c={name:a.name,times:THREE.AnimationUtils.convertArray(a.times,Array),values:THREE.AnimationUtils.convertArray(a.values,Array)};var b=a.getInterpolation();if(b!==a.DefaultInterpolation){c.interpolation=b}}c.type=a.ValueTypeName;return c},_getTrackTypeForValueTypeName:function(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return THREE.NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return THREE.VectorKeyframeTrack;case"color":return THREE.ColorKeyframeTrack;case"quaternion":return THREE.QuaternionKeyframeTrack;case"bool":case"boolean":return THREE.BooleanKeyframeTrack;case"string":return THREE.StringKeyframeTrack}throw new Error("Unsupported typeName: "+a)}});THREE.PropertyBinding=function(a,b,c){this.path=b;this.parsedPath=c||THREE.PropertyBinding.parseTrackName(b);this.node=THREE.PropertyBinding.findNode(a,this.parsedPath.nodeName)||a;this.rootNode=a};THREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,getValue:function getValue_unbound(b,a){this.bind();this.getValue(b,a)},setValue:function getValue_unbound(a,b){this.bind();this.setValue(a,b)},bind:function(){var k=this.node,d=this.parsedPath,c=d.objectName,e=d.propertyName,a=d.propertyIndex;if(!k){k=THREE.PropertyBinding.findNode(this.rootNode,d.nodeName)||this.rootNode;this.node=k}this.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;if(!k){console.error("  trying to update node for track: "+this.path+" but it wasn't found.");return}if(c){var f=d.objectIndex;switch(c){case"materials":if(!k.material){console.error("  can not bind to material as node does not have a material",this);return}if(!k.material.materials){console.error("  can not bind to material.materials as node.material does not have a materials array",this);return}k=k.material.materials;break;case"bones":if(!k.skeleton){console.error("  can not bind to bones as node does not have a skeleton",this);return}k=k.skeleton.bones;for(var b=0;b<k.length;b++){if(k[b].name===f){f=b;break}}break;default:if(k[c]===undefined){console.error("  can not bind to objectName of node, undefined",this);return}k=k[c]}if(f!==undefined){if(k[f]===undefined){console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,k);return}k=k[f]}}var j=k[e];if(!j){var g=d.nodeName;console.error("  trying to update property for track: "+g+"."+e+" but it wasn't found.",k);return}var l=this.Versioning.None;if(k.needsUpdate!==undefined){l=this.Versioning.NeedsUpdate;this.targetObject=k}else{if(k.matrixWorldNeedsUpdate!==undefined){l=this.Versioning.MatrixWorldNeedsUpdate;this.targetObject=k}}var h=this.BindingType.Direct;if(a!==undefined){if(e==="morphTargetInfluences"){if(!k.geometry){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);return}if(!k.geometry.morphTargets){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);return}for(var b=0;b<this.node.geometry.morphTargets.length;b++){if(k.geometry.morphTargets[b].name===a){a=b;break}}}h=this.BindingType.ArrayElement;this.resolvedProperty=j;this.propertyIndex=a}else{if(j.fromArray!==undefined&&j.toArray!==undefined){h=this.BindingType.HasFromToArray;this.resolvedProperty=j}else{if(j.length!==undefined){h=this.BindingType.EntireArray;this.resolvedProperty=j}else{this.propertyName=e}}}this.getValue=this.GetterByBindingType[h];this.setValue=this.SetterByBindingTypeAndVersioning[h][l]},unbind:function(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}};Object.assign(THREE.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:THREE.PropertyBinding.prototype.getValue,_setValue_unbound:THREE.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function getValue_direct(a,b){a[b]=this.node[this.propertyName]},function getValue_array(a,d){var c=this.resolvedProperty;for(var b=0,e=c.length;b!==e;++b){a[d++]=c[b]}},function getValue_arrayElement(a,b){a[b]=this.resolvedProperty[this.propertyIndex]},function getValue_toArray(a,b){this.resolvedProperty.toArray(a,b)}],SetterByBindingTypeAndVersioning:[[function setValue_direct(a,b){this.node[this.propertyName]=a[b]},function setValue_direct_setNeedsUpdate(a,b){this.node[this.propertyName]=a[b];this.targetObject.needsUpdate=true},function setValue_direct_setMatrixWorldNeedsUpdate(a,b){this.node[this.propertyName]=a[b];this.targetObject.matrixWorldNeedsUpdate=true}],[function setValue_array(a,d){var b=this.resolvedProperty;for(var c=0,e=b.length;c!==e;++c){b[c]=a[d++]}},function setValue_array_setNeedsUpdate(a,d){var b=this.resolvedProperty;for(var c=0,e=b.length;c!==e;++c){b[c]=a[d++]}this.targetObject.needsUpdate=true},function setValue_array_setMatrixWorldNeedsUpdate(a,d){var b=this.resolvedProperty;for(var c=0,e=b.length;c!==e;++c){b[c]=a[d++]}this.targetObject.matrixWorldNeedsUpdate=true}],[function setValue_arrayElement(a,b){this.resolvedProperty[this.propertyIndex]=a[b]},function setValue_arrayElement_setNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.needsUpdate=true},function setValue_arrayElement_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b];this.targetObject.matrixWorldNeedsUpdate=true}],[function setValue_fromArray(a,b){this.resolvedProperty.fromArray(a,b)},function setValue_fromArray_setNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.needsUpdate=true},function setValue_fromArray_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b);this.targetObject.matrixWorldNeedsUpdate=true}]]});THREE.PropertyBinding.Composite=function(b,c,a){var d=a||THREE.PropertyBinding.parseTrackName(c);this._targetGroup=b;this._bindings=b.subscribe_(c,d)};THREE.PropertyBinding.Composite.prototype={constructor:THREE.PropertyBinding.Composite,getValue:function(d,c){this.bind();var a=this._targetGroup.nCachedObjects_,b=this._bindings[a];if(b!==undefined){b.getValue(d,c)}},setValue:function(e,b){var d=this._bindings;for(var a=this._targetGroup.nCachedObjects_,c=d.length;a!==c;++a){d[a].setValue(e,b)}},bind:function(){var c=this._bindings;for(var a=this._targetGroup.nCachedObjects_,b=c.length;a!==b;++a){c[a].bind()}},unbind:function(){var c=this._bindings;for(var a=this._targetGroup.nCachedObjects_,b=c.length;a!==b;++a){c[a].unbind()}}};THREE.PropertyBinding.create=function(a,b,c){if(!(a instanceof THREE.AnimationObjectGroup)){return new THREE.PropertyBinding(a,b,c)}else{return new THREE.PropertyBinding.Composite(a,b,c)}};THREE.PropertyBinding.parseTrackName=function(b){var c=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_. ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/;var d=c.exec(b);if(!d){throw new Error("cannot parse trackName at all: "+b)}if(d.index===c.lastIndex){c.lastIndex++}var a={nodeName:d[3],objectName:d[5],objectIndex:d[7],propertyName:d[9],propertyIndex:d[11]};if(a.propertyName===null||a.propertyName.length===0){throw new Error("can not parse propertyName from trackName: "+b)}return a};THREE.PropertyBinding.findNode=function(a,f){if(!f||f===""||f==="root"||f==="."||f===-1||f===a.name||f===a.uuid){return a}if(a.skeleton){var c=function(j){for(var g=0;g<j.bones.length;g++){var h=j.bones[g];if(h.name===f){return h}}return null};var e=c(a.skeleton);if(e){return e}}if(a.children){var d=function(k){for(var j=0;j<k.length;j++){var h=k[j];if(h.name===f||h.uuid===f){return h}var g=d(h.children);if(g){return g}}return null};var b=d(a.children);if(b){return b}}return null};THREE.PropertyMixer=function(e,b,d){this.binding=e;this.valueSize=d;var a=Float64Array,c;switch(b){case"quaternion":c=this._slerp;break;case"string":case"bool":a=Array,c=this._select;break;default:c=this._lerp}this.buffer=new a(d*4);this._mixBufferRegion=c;this.cumulativeWeight=0;this.useCount=0;this.referenceCount=0};THREE.PropertyMixer.prototype={constructor:THREE.PropertyMixer,accumulate:function(d,g){var a=this.buffer,f=this.valueSize,h=d*f+f,e=this.cumulativeWeight;if(e===0){for(var b=0;b!==f;++b){a[h+b]=a[b]}e=g}else{e+=g;var c=g/e;this._mixBufferRegion(a,h,0,c,f)}this.cumulativeWeight=e},apply:function(b){var a=this.valueSize,f=this.buffer,d=b*a+a,h=this.cumulativeWeight,k=this.binding;this.cumulativeWeight=0;if(h<1){var c=a*3;this._mixBufferRegion(f,d,c,1-h,a)}for(var g=a,j=a+a;g!==j;++g){if(f[g]!==f[g+a]){k.setValue(f,d);break}}},saveOriginalState:function(){var g=this.binding;var a=this.buffer,c=this.valueSize,f=c*3;g.getValue(a,f);for(var b=c,d=f;b!==d;++b){a[b]=a[f+(b%c)]}this.cumulativeWeight=0},restoreOriginalState:function(){var a=this.valueSize*3;this.binding.setValue(this.buffer,a)},_select:function(b,e,a,d,f){if(d>=0.5){for(var c=0;c!==f;++c){b[e+c]=b[a+c]}}},_slerp:function(b,d,a,c,e){THREE.Quaternion.slerpFlat(b,d,b,d,b,a,c)},_lerp:function(b,f,a,e,h){var g=1-e;for(var d=0;d!==h;++d){var c=f+d;b[c]=b[c]*g+b[a+d]*e}}};THREE.BooleanKeyframeTrack=function(b,c,a){THREE.KeyframeTrack.call(this,b,c,a)};THREE.BooleanKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:THREE.IntepolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});THREE.NumberKeyframeTrack=function(c,d,b,a){THREE.KeyframeTrack.call(this,c,d,b,a)};THREE.NumberKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.NumberKeyframeTrack,ValueTypeName:"number"});THREE.QuaternionKeyframeTrack=function(c,d,b,a){THREE.KeyframeTrack.call(this,c,d,b,a)};THREE.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodLinear:function(a){return new THREE.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),a)},InterpolantFactoryMethodSmooth:undefined});THREE.StringKeyframeTrack=function(c,d,b,a){THREE.KeyframeTrack.call(this,c,d,b,a)};THREE.StringKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:THREE.IntepolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});THREE.VectorKeyframeTrack=function(c,d,b,a){THREE.KeyframeTrack.call(this,c,d,b,a)};THREE.VectorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.VectorKeyframeTrack,ValueTypeName:"vector"});THREE.Audio=function(a){THREE.Object3D.call(this);this.type="Audio";this.context=a.context;this.source=this.context.createBufferSource();this.source.onended=this.onEnded.bind(this);this.gain=this.context.createGain();this.gain.connect(a.getInput());this.autoplay=false;this.startTime=0;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.sourceType="empty";this.filter=null};THREE.Audio.prototype=Object.create(THREE.Object3D.prototype);THREE.Audio.prototype.constructor=THREE.Audio;THREE.Audio.prototype.getOutput=function(){return this.gain};THREE.Audio.prototype.load=function(b){var a=new THREE.AudioBuffer(this.context);a.load(b);this.setBuffer(a);return this};THREE.Audio.prototype.setNodeSource=function(a){this.hasPlaybackControl=false;this.sourceType="audioNode";this.source=a;this.connect();return this};THREE.Audio.prototype.setBuffer=function(b){var a=this;b.onReady(function(c){a.source.buffer=c;a.sourceType="buffer";if(a.autoplay){a.play()}});return this};THREE.Audio.prototype.play=function(){if(this.isPlaying===true){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}var a=this.context.createBufferSource();a.buffer=this.source.buffer;a.loop=this.source.loop;a.onended=this.source.onended;a.start(0,this.startTime);a.playbackRate.value=this.playbackRate;this.isPlaying=true;this.source=a;this.connect()};THREE.Audio.prototype.pause=function(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.source.stop();this.startTime=this.context.currentTime};THREE.Audio.prototype.stop=function(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.source.stop();this.startTime=0};THREE.Audio.prototype.connect=function(){if(this.filter!==null){this.source.connect(this.filter);this.filter.connect(this.getOutput())}else{this.source.connect(this.getOutput())}};THREE.Audio.prototype.disconnect=function(){if(this.filter!==null){this.source.disconnect(this.filter);this.filter.disconnect(this.getOutput())}else{this.source.disconnect(this.getOutput())}};THREE.Audio.prototype.getFilter=function(){return this.filter};THREE.Audio.prototype.setFilter=function(a){if(a===undefined){a=null}if(this.isPlaying===true){this.disconnect();this.filter=a;this.connect()}else{this.filter=a}};THREE.Audio.prototype.setPlaybackRate=function(a){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.playbackRate=a;if(this.isPlaying===true){this.source.playbackRate.value=this.playbackRate}};THREE.Audio.prototype.getPlaybackRate=function(){return this.playbackRate};THREE.Audio.prototype.onEnded=function(){this.isPlaying=false};THREE.Audio.prototype.setLoop=function(a){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return}this.source.loop=a};THREE.Audio.prototype.getLoop=function(){if(this.hasPlaybackControl===false){console.warn("THREE.Audio: this Audio has no playback control.");return false}return this.source.loop};THREE.Audio.prototype.setVolume=function(a){this.gain.gain.value=a};THREE.Audio.prototype.getVolume=function(){return this.gain.gain.value};THREE.AudioAnalyser=function(b,a){this.analyser=b.context.createAnalyser();this.analyser.fftSize=a!==undefined?a:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);b.getOutput().connect(this.analyser)};THREE.AudioAnalyser.prototype={constructor:THREE.AudioAnalyser,getData:function(){this.analyser.getByteFrequencyData(this.data);return this.data}};THREE.AudioBuffer=function(a){this.context=a;this.ready=false;this.readyCallbacks=[]};THREE.AudioBuffer.prototype.load=function(a){var b=this;var c=new XMLHttpRequest();c.open("GET",a,true);c.responseType="arraybuffer";c.onload=function(d){b.context.decodeAudioData(this.response,function(e){b.buffer=e;b.ready=true;for(var f=0;f<b.readyCallbacks.length;f++){b.readyCallbacks[f](b.buffer)}b.readyCallbacks=[]})};c.send();return this};THREE.AudioBuffer.prototype.onReady=function(a){if(this.ready){a(this.buffer)}else{this.readyCallbacks.push(a)}};THREE.PositionalAudio=function(a){THREE.Audio.call(this,a);this.panner=this.context.createPanner();this.panner.connect(this.gain)};THREE.PositionalAudio.prototype=Object.create(THREE.Audio.prototype);THREE.PositionalAudio.prototype.constructor=THREE.PositionalAudio;THREE.PositionalAudio.prototype.getOutput=function(){return this.panner};THREE.PositionalAudio.prototype.setRefDistance=function(a){this.panner.refDistance=a};THREE.PositionalAudio.prototype.getRefDistance=function(){return this.panner.refDistance};THREE.PositionalAudio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a};THREE.PositionalAudio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor};THREE.PositionalAudio.prototype.setDistanceModel=function(a){this.panner.distanceModel=a};THREE.PositionalAudio.prototype.getDistanceModel=function(){return this.panner.distanceModel};THREE.PositionalAudio.prototype.setMaxDistance=function(a){this.panner.maxDistance=a};THREE.PositionalAudio.prototype.getMaxDistance=function(){return this.panner.maxDistance};THREE.PositionalAudio.prototype.updateMatrixWorld=(function(){var a=new THREE.Vector3();return function b(c){THREE.Object3D.prototype.updateMatrixWorld.call(this,c);a.setFromMatrixPosition(this.matrixWorld);this.panner.setPosition(a.x,a.y,a.z)}})();THREE.AudioListener=function(){THREE.Object3D.call(this);this.type="AudioListener";this.context=new (window.AudioContext||window.webkitAudioContext)();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null};THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioListener.prototype.constructor=THREE.AudioListener;THREE.AudioListener.prototype.getInput=function(){return this.gain};THREE.AudioListener.prototype.removeFilter=function(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null}};THREE.AudioListener.prototype.setFilter=function(a){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination)}else{this.gain.disconnect(this.context.destination)}this.filter=a;this.gain.connect(this.filter);this.filter.connect(this.context.destination)};THREE.AudioListener.prototype.getFilter=function(){return this.filter};THREE.AudioListener.prototype.setMasterVolume=function(a){this.gain.gain.value=a};THREE.AudioListener.prototype.getMasterVolume=function(){return this.gain.gain.value};THREE.AudioListener.prototype.updateMatrixWorld=(function(){var a=new THREE.Vector3();var d=new THREE.Quaternion();var e=new THREE.Vector3();var b=new THREE.Vector3();return function c(h){THREE.Object3D.prototype.updateMatrixWorld.call(this,h);var g=this.context.listener;var f=this.up;this.matrixWorld.decompose(a,d,e);b.set(0,0,-1).applyQuaternion(d);g.setPosition(a.x,a.y,a.z);g.setOrientation(b.x,b.y,b.z,f.x,f.y,f.z)}})();THREE.Camera=function(){THREE.Object3D.call(this);this.type="Camera";this.matrixWorldInverse=new THREE.Matrix4();this.projectionMatrix=new THREE.Matrix4()};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion();return function(c){var b=c||new THREE.Vector3();this.getWorldQuaternion(a);return b.set(0,0,-1).applyQuaternion(a)}}();THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4();return function(b){a.lookAt(this.position,b,this.up);this.quaternion.setFromRotationMatrix(a)}}();THREE.Camera.prototype.clone=function(){return new this.constructor().copy(this)};THREE.Camera.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.matrixWorldInverse.copy(a.matrixWorldInverse);this.projectionMatrix.copy(a.projectionMatrix);return this};THREE.CubeCamera=function(f,e,g){THREE.Object3D.call(this);this.type="CubeCamera";var d=90,b=1;var c=new THREE.PerspectiveCamera(d,b,f,e);c.up.set(0,-1,0);c.lookAt(new THREE.Vector3(1,0,0));this.add(c);var j=new THREE.PerspectiveCamera(d,b,f,e);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(-1,0,0));this.add(j);var a=new THREE.PerspectiveCamera(d,b,f,e);a.up.set(0,0,1);a.lookAt(new THREE.Vector3(0,1,0));this.add(a);var i=new THREE.PerspectiveCamera(d,b,f,e);i.up.set(0,0,-1);i.lookAt(new THREE.Vector3(0,-1,0));this.add(i);var l=new THREE.PerspectiveCamera(d,b,f,e);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,1));this.add(l);var h=new THREE.PerspectiveCamera(d,b,f,e);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,-1));this.add(h);var k={format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter};this.renderTarget=new THREE.WebGLRenderTargetCube(g,g,k);this.updateCubeMap=function(o,p){if(this.parent===null){this.updateMatrixWorld()}var n=this.renderTarget;var m=n.texture.generateMipmaps;n.texture.generateMipmaps=false;n.activeCubeFace=0;o.render(p,c,n);n.activeCubeFace=1;o.render(p,j,n);n.activeCubeFace=2;o.render(p,a,n);n.activeCubeFace=3;o.render(p,i,n);n.activeCubeFace=4;o.render(p,l,n);n.texture.generateMipmaps=m;n.activeCubeFace=5;o.render(p,h,n);o.setRenderTarget(null)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CubeCamera.prototype.constructor=THREE.CubeCamera;THREE.OrthographicCamera=function(f,c,e,b,d,a){THREE.Camera.call(this);this.type="OrthographicCamera";this.zoom=1;this.left=f;this.right=c;this.top=e;this.bottom=b;this.near=(d!==undefined)?d:0.1;this.far=(a!==undefined)?a:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var c=(this.right-this.left)/(2*this.zoom);var b=(this.top-this.bottom)/(2*this.zoom);var a=(this.right+this.left)/2;var d=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(a-c,a+c,d+b,d-b,this.near,this.far)};THREE.OrthographicCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.left=a.left;this.right=a.right;this.top=a.top;this.bottom=a.bottom;this.near=a.near;this.far=a.far;this.zoom=a.zoom;return this};THREE.OrthographicCamera.prototype.toJSON=function(b){var a=THREE.Object3D.prototype.toJSON.call(this,b);a.object.zoom=this.zoom;a.object.left=this.left;a.object.right=this.right;a.object.top=this.top;a.object.bottom=this.bottom;a.object.near=this.near;a.object.far=this.far;return a};THREE.PerspectiveCamera=function(c,b,d,a){THREE.Camera.call(this);this.type="PerspectiveCamera";this.focalLength=10;this.zoom=1;this.fov=c!==undefined?c:50;this.aspect=b!==undefined?b:1;this.near=d!==undefined?d:0.1;this.far=a!==undefined?a:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(b,a){if(a===undefined){a=24}this.fov=2*THREE.Math.radToDeg(Math.atan(a/(b*2)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(e,c,b,f,d,a){this.fullWidth=e;this.fullHeight=c;this.x=b;this.y=f;this.width=d;this.height=a;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var d=THREE.Math.radToDeg(2*Math.atan(Math.tan(THREE.Math.degToRad(this.fov)*0.5)/this.zoom));if(this.fullWidth){var c=this.fullWidth/this.fullHeight;var h=Math.tan(THREE.Math.degToRad(d*0.5))*this.near;var b=-h;var g=c*b;var e=c*h;var f=Math.abs(e-g);var a=Math.abs(h-b);this.projectionMatrix.makeFrustum(g+this.x*f/this.fullWidth,g+(this.x+this.width)*f/this.fullWidth,h-(this.y+this.height)*a/this.fullHeight,h-this.y*a/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(d,this.aspect,this.near,this.far)}};THREE.PerspectiveCamera.prototype.copy=function(a){THREE.Camera.prototype.copy.call(this,a);this.focalLength=a.focalLength;this.zoom=a.zoom;this.fov=a.fov;this.aspect=a.aspect;this.near=a.near;this.far=a.far;return this};THREE.PerspectiveCamera.prototype.toJSON=function(b){var a=THREE.Object3D.prototype.toJSON.call(this,b);a.object.focalLength=this.focalLength;a.object.zoom=this.zoom;a.object.fov=this.fov;a.object.aspect=this.aspect;a.object.near=this.near;a.object.far=this.far;return a};THREE.StereoCamera=function(){this.type="StereoCamera";this.aspect=1;this.cameraL=new THREE.PerspectiveCamera();this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new THREE.PerspectiveCamera();this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false};THREE.StereoCamera.prototype={constructor:THREE.StereoCamera,update:(function(){var g,c,b,d,a;var e=new THREE.Matrix4();var f=new THREE.Matrix4();return function h(n){var m=g!==n.focalLength||c!==n.fov||b!==n.aspect*this.aspect||d!==n.near||a!==n.far;if(m){g=n.focalLength;c=n.fov;b=n.aspect*this.aspect;d=n.near;a=n.far;var j=n.projectionMatrix.clone();var l=0.064/2;var p=l*d/g;var i=d*Math.tan(THREE.Math.degToRad(c*0.5));var o,k;f.elements[12]=-l;e.elements[12]=l;o=-i*b+p;k=i*b+p;j.elements[0]=2*d/(k-o);j.elements[8]=(k+o)/(k-o);this.cameraL.projectionMatrix.copy(j);o=-i*b-p;k=i*b-p;j.elements[0]=2*d/(k-o);j.elements[8]=(k+o)/(k-o);this.cameraR.projectionMatrix.copy(j)}this.cameraL.matrixWorld.copy(n.matrixWorld).multiply(f);this.cameraR.matrixWorld.copy(n.matrixWorld).multiply(e)}})()};THREE.Light=function(b,a){THREE.Object3D.call(this);this.type="Light";this.color=new THREE.Color(b);this.intensity=a!==undefined?a:1;this.receiveShadow=undefined};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.color.copy(a.color);this.intensity=a.intensity;return this};THREE.Light.prototype.toJSON=function(b){var a=THREE.Object3D.prototype.toJSON.call(this,b);a.object.color=this.color.getHex();a.object.intensity=this.intensity;if(this.groundColor!==undefined){a.object.groundColor=this.groundColor.getHex()}if(this.distance!==undefined){a.object.distance=this.distance}if(this.angle!==undefined){a.object.angle=this.angle}if(this.decay!==undefined){a.object.decay=this.decay}if(this.penumbra!==undefined){a.object.penumbra=this.penumbra}return a};THREE.LightShadow=function(a){this.camera=a;this.bias=0;this.radius=1;this.mapSize=new THREE.Vector2(512,512);this.map=null;this.matrix=new THREE.Matrix4()};THREE.LightShadow.prototype={constructor:THREE.LightShadow,copy:function(a){this.camera=a.camera.clone();this.bias=a.bias;this.radius=a.radius;this.mapSize.copy(a.mapSize);return this},clone:function(){return new this.constructor().copy(this)}};THREE.AmbientLight=function(b,a){THREE.Light.call(this,b,a);this.type="AmbientLight";this.castShadow=undefined};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(b,a){THREE.Light.call(this,b,a);this.type="DirectionalLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D();this.shadow=new THREE.LightShadow(new THREE.OrthographicCamera(-5,5,5,-5,0.5,500))};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.DirectionalLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.target=a.target.clone();this.shadow=a.shadow.clone();return this};THREE.HemisphereLight=function(b,c,a){THREE.Light.call(this,b,a);this.type="HemisphereLight";this.castShadow=undefined;this.position.set(0,1,0);this.updateMatrix();this.groundColor=new THREE.Color(c)};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight;THREE.HemisphereLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.groundColor.copy(a.groundColor);return this};THREE.PointLight=function(b,a,d,c){THREE.Light.call(this,b,a);this.type="PointLight";this.distance=(d!==undefined)?d:0;this.decay=(c!==undefined)?c:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,0.5,500))};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.PointLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.distance=a.distance;this.decay=a.decay;this.shadow=a.shadow.clone();return this};THREE.SpotLight=function(b,a,f,e,d,c){THREE.Light.call(this,b,a);this.type="SpotLight";this.position.set(0,1,0);this.updateMatrix();this.target=new THREE.Object3D();this.distance=(f!==undefined)?f:0;this.angle=(e!==undefined)?e:Math.PI/3;this.penumbra=(d!==undefined)?d:0;this.decay=(c!==undefined)?c:1;this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(50,1,0.5,500))};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.constructor=THREE.SpotLight;THREE.SpotLight.prototype.copy=function(a){THREE.Light.prototype.copy.call(this,a);this.distance=a.distance;this.angle=a.angle;this.penumbra=a.penumbra;this.decay=a.decay;this.target=a.target.clone();this.shadow=a.shadow.clone();return this};THREE.Cache={enabled:false,files:{},add:function(b,a){if(this.enabled===false){return}this.files[b]=a},get:function(a){if(this.enabled===false){return}return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};THREE.Loader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:undefined,extractUrlBase:function(a){var b=a.split("/");if(b.length===1){return"./"}b.pop();return b.join("/")+"/"},initMaterials:function(a,d,b){var e=[];for(var c=0;c<a.length;++c){e[c]=this.createMaterial(a[c],d,b)}return e},createMaterial:(function(){var a,b,c;return function(e,i,f){if(a===undefined){a=new THREE.Color()}if(b===undefined){b=new THREE.TextureLoader()}if(c===undefined){c=new THREE.MaterialLoader()}var d={};function k(t,n,q,o,m){var p=i+t;var s=THREE.Loader.Handlers.get(p);var r;if(s!==null){r=s.load(p)}else{b.setCrossOrigin(f);r=b.load(p)}if(n!==undefined){r.repeat.fromArray(n);if(n[0]!==1){r.wrapS=THREE.RepeatWrapping}if(n[1]!==1){r.wrapT=THREE.RepeatWrapping}}if(q!==undefined){r.offset.fromArray(q)}if(o!==undefined){if(o[0]==="repeat"){r.wrapS=THREE.RepeatWrapping}if(o[0]==="mirror"){r.wrapS=THREE.MirroredRepeatWrapping}if(o[1]==="repeat"){r.wrapT=THREE.RepeatWrapping}if(o[1]==="mirror"){r.wrapT=THREE.MirroredRepeatWrapping}}if(m!==undefined){r.anisotropy=m}var l=THREE.Math.generateUUID();d[l]=r;return l}var h={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"};for(var g in e){var j=e[g];switch(g){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":h.name=j;break;case"blending":h.blending=THREE[j];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",g,"is no longer supported.");break;case"colorDiffuse":h.color=a.fromArray(j).getHex();break;case"colorSpecular":h.specular=a.fromArray(j).getHex();break;case"colorEmissive":h.emissive=a.fromArray(j).getHex();break;case"specularCoef":h.shininess=j;break;case"shading":if(j.toLowerCase()==="basic"){h.type="MeshBasicMaterial"}if(j.toLowerCase()==="phong"){h.type="MeshPhongMaterial"}break;case"mapDiffuse":h.map=k(j,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapLight":h.lightMap=k(j,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":h.aoMap=k(j,e.mapAORepeat,e.mapAOOffset,e.mapAOWrap,e.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":h.bumpMap=k(j,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=j;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":h.normalMap=k(j,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[j,j];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":h.specularMap=k(j,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapAlpha":h.alphaMap=k(j,e.mapAlphaRepeat,e.mapAlphaOffset,e.mapAlphaWrap,e.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":h.side=THREE.BackSide;break;case"doubleSided":h.side=THREE.DoubleSide;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity");h.opacity=j;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":h[g]=j;break;case"vertexColors":if(j===true){h.vertexColors=THREE.VertexColors}if(j==="face"){h.vertexColors=THREE.FaceColors}break;default:console.error("THREE.Loader.createMaterial: Unsupported",g,j);break}}if(h.type==="MeshBasicMaterial"){delete h.emissive}if(h.type!=="MeshPhongMaterial"){delete h.specular}if(h.opacity<1){h.transparent=true}c.setTextures(d);return c.parse(h)}})()};THREE.Loader.Handlers={handlers:[],add:function(b,a){this.handlers.push(b,a)},get:function(e){var c=this.handlers;for(var d=0,b=c.length;d<b;d+=2){var f=c[d];var a=c[d+1];if(f.test(e)){return a}}return null}};THREE.XHRLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,d,g,f){if(this.path!==undefined){a=this.path+a}var c=this;var b=THREE.Cache.get(a);if(b!==undefined){if(d){setTimeout(function(){d(b)},0)}return b}var e=new XMLHttpRequest();if(this.overrideMimeTyp!==undefined){e.overrideMimeType(this.overrideMimeTyp)}else{e.overrideMimeType("text/plain")}e.open("GET",a,true);e.addEventListener("load",function(i){var h=i.target.response;THREE.Cache.add(a,h);if(this.status===200){if(d){d(h)}c.manager.itemEnd(a)}else{if(this.status===0){console.warn("THREE.XHRLoader: HTTP Status 0 received.");if(d){d(h)}c.manager.itemEnd(a)}else{if(f){f(i)}c.manager.itemError(a)}}},false);if(g!==undefined){e.addEventListener("progress",function(h){g(h)},false)}e.addEventListener("error",function(h){if(f){f(h)}c.manager.itemError(a)},false);if(this.responseType!==undefined){e.responseType=this.responseType}if(this.withCredentials!==undefined){e.withCredentials=this.withCredentials}e.send(null);c.manager.itemStart(a);return e},setPath:function(a){this.path=a},setOverrideMimeTyp:function(a){this.overrideMimeTyp=a},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a},setWithCredentials:function(a){this.withCredentials=a}};THREE.FontLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.FontLoader.prototype={constructor:THREE.FontLoader,load:function(b,c,e,d){var a=new THREE.XHRLoader(this.manager);a.load(b,function(f){c(new THREE.Font(JSON.parse(f.substring(65,f.length-2))))},e,d)}};THREE.ImageLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,d,g,e){if(this.path!==undefined){a=this.path+a}var c=this;var b=THREE.Cache.get(a);if(b!==undefined){c.manager.itemStart(a);if(d){setTimeout(function(){d(b);c.manager.itemEnd(a)},0)}else{c.manager.itemEnd(a)}return b}var f=document.createElement("img");f.addEventListener("load",function(h){THREE.Cache.add(a,this);if(d){d(this)}c.manager.itemEnd(a)},false);if(g!==undefined){f.addEventListener("progress",function(h){g(h)},false)}f.addEventListener("error",function(h){if(e){e(h)}c.manager.itemError(a)},false);if(this.crossOrigin!==undefined){f.crossOrigin=this.crossOrigin}c.manager.itemStart(a);f.src=a;return f},setCrossOrigin:function(a){this.crossOrigin=a},setPath:function(a){this.path=a}};THREE.JSONLoader=function(a){if(typeof a==="boolean"){console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor.");a=undefined}this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this.withCredentials=false};THREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){if(this._statusDomElement===undefined){this._statusDomElement=document.createElement("div")}console.warn("THREE.JSONLoader: .statusDomElement has been removed.");return this._statusDomElement},load:function(b,d,g,f){var c=this;var e=this.texturePath&&(typeof this.texturePath==="string")?this.texturePath:THREE.Loader.prototype.extractUrlBase(b);var a=new THREE.XHRLoader(this.manager);a.setWithCredentials(this.withCredentials);a.load(b,function(l){var j=JSON.parse(l);var i=j.metadata;if(i!==undefined){var k=i.type;if(k!==undefined){if(k.toLowerCase()==="object"){console.error("THREE.JSONLoader: "+b+" should be loaded with THREE.ObjectLoader instead.");return}if(k.toLowerCase()==="scene"){console.error("THREE.JSONLoader: "+b+" should be loaded with THREE.SceneLoader instead.");return}}}var h=c.parse(j,e);d(h.geometry,h.materials)},g,f)},setTexturePath:function(a){this.texturePath=a},parse:function(i,c){var f=new THREE.Geometry(),d=(i.scale!==undefined)?1/i.scale:1;a(d);g();b(d);e();f.computeFaceNormals();f.computeBoundingSphere();function a(W){function B(u,j){return u&(1<<j)}var R,Q,H,s,r,q,U,K,D,o,I,L,k,T,P,O,M,S,E,n,m,C,V,p,A,J,G,l=i.faces,t=i.vertices,N=i.normals,F=i.colors,X=0;if(i.uvs!==undefined){for(R=0;R<i.uvs.length;R++){if(i.uvs[R].length){X++}}for(R=0;R<X;R++){f.faceVertexUvs[R]=[]}}s=0;r=t.length;while(s<r){S=new THREE.Vector3();S.x=t[s++]*W;S.y=t[s++]*W;S.z=t[s++]*W;f.vertices.push(S)}s=0;r=l.length;while(s<r){o=l[s++];I=B(o,0);L=B(o,1);k=B(o,3);T=B(o,4);P=B(o,5);O=B(o,6);M=B(o,7);if(I){n=new THREE.Face3();n.a=l[s];n.b=l[s+1];n.c=l[s+3];m=new THREE.Face3();m.a=l[s+1];m.b=l[s+2];m.c=l[s+3];s+=4;if(L){D=l[s++];n.materialIndex=D;m.materialIndex=D}H=f.faces.length;if(k){for(R=0;R<X;R++){p=i.uvs[R];f.faceVertexUvs[R][H]=[];f.faceVertexUvs[R][H+1]=[];for(Q=0;Q<4;Q++){K=l[s++];J=p[K*2];G=p[K*2+1];A=new THREE.Vector2(J,G);if(Q!==2){f.faceVertexUvs[R][H].push(A)}if(Q!==0){f.faceVertexUvs[R][H+1].push(A)}}}}if(T){U=l[s++]*3;n.normal.set(N[U++],N[U++],N[U]);m.normal.copy(n.normal)}if(P){for(R=0;R<4;R++){U=l[s++]*3;V=new THREE.Vector3(N[U++],N[U++],N[U]);if(R!==2){n.vertexNormals.push(V)}if(R!==0){m.vertexNormals.push(V)}}}if(O){q=l[s++];C=F[q];n.color.setHex(C);m.color.setHex(C)}if(M){for(R=0;R<4;R++){q=l[s++];C=F[q];if(R!==2){n.vertexColors.push(new THREE.Color(C))}if(R!==0){m.vertexColors.push(new THREE.Color(C))}}}f.faces.push(n);f.faces.push(m)}else{E=new THREE.Face3();E.a=l[s++];E.b=l[s++];E.c=l[s++];if(L){D=l[s++];E.materialIndex=D}H=f.faces.length;if(k){for(R=0;R<X;R++){p=i.uvs[R];f.faceVertexUvs[R][H]=[];for(Q=0;Q<3;Q++){K=l[s++];J=p[K*2];G=p[K*2+1];A=new THREE.Vector2(J,G);f.faceVertexUvs[R][H].push(A)}}}if(T){U=l[s++]*3;E.normal.set(N[U++],N[U++],N[U])}if(P){for(R=0;R<3;R++){U=l[s++]*3;V=new THREE.Vector3(N[U++],N[U++],N[U]);E.vertexNormals.push(V)}}if(O){q=l[s++];E.color.setHex(F[q])}if(M){for(R=0;R<3;R++){q=l[s++];E.vertexColors.push(new THREE.Color(F[q]))}}f.faces.push(E)}}}function g(){var j=(i.influencesPerVertex!==undefined)?i.influencesPerVertex:2;if(i.skinWeights){for(var m=0,k=i.skinWeights.length;m<k;m+=j){var t=i.skinWeights[m];var r=(j>1)?i.skinWeights[m+1]:0;var p=(j>2)?i.skinWeights[m+2]:0;var u=(j>3)?i.skinWeights[m+3]:0;f.skinWeights.push(new THREE.Vector4(t,r,p,u))}}if(i.skinIndices){for(var m=0,k=i.skinIndices.length;m<k;m+=j){var s=i.skinIndices[m];var q=(j>1)?i.skinIndices[m+1]:0;var o=(j>2)?i.skinIndices[m+2]:0;var n=(j>3)?i.skinIndices[m+3]:0;f.skinIndices.push(new THREE.Vector4(s,q,o,n))}}f.bones=i.bones;if(f.bones&&f.bones.length>0&&(f.skinWeights.length!==f.skinIndices.length||f.skinIndices.length!==f.vertices.length)){console.warn("When skinning, number of vertices ("+f.vertices.length+"), skinIndices ("+f.skinIndices.length+"), and skinWeights ("+f.skinWeights.length+") should match.")}}function b(m){if(i.morphTargets!==undefined){for(var o=0,n=i.morphTargets.length;o<n;o++){f.morphTargets[o]={};f.morphTargets[o].name=i.morphTargets[o].name;f.morphTargets[o].vertices=[];var q=f.morphTargets[o].vertices;var t=i.morphTargets[o].vertices;for(var s=0,k=t.length;s<k;s+=3){var p=new THREE.Vector3();p.x=t[s]*m;p.y=t[s+1]*m;p.z=t[s+2]*m;q.push(p)}}}if(i.morphColors!==undefined&&i.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');var j=f.faces;var r=i.morphColors[0].colors;for(var o=0,n=j.length;o<n;o++){j[o].color.fromArray(r,o*3)}}}function e(){var m=[];var n=[];if(i.animation!==undefined){n.push(i.animation)}if(i.animations!==undefined){if(i.animations.length){n=n.concat(i.animations)}else{n.push(i.animations)}}for(var j=0;j<n.length;j++){var l=THREE.AnimationClip.parseAnimation(n[j],f.bones);if(l){m.push(l)}}if(f.morphTargets){var k=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(f.morphTargets,10);m=m.concat(k)}if(m.length>0){f.animations=m}}if(i.materials===undefined||i.materials.length===0){return{geometry:f}}else{var h=THREE.Loader.prototype.initMaterials(i.materials,c,this.crossOrigin);return{geometry:f,materials:h}}}};THREE.LoadingManager=function(e,g,f){var d=this;var c=false,b=0,a=0;this.onStart=undefined;this.onLoad=e;this.onProgress=g;this.onError=f;this.itemStart=function(h){a++;if(c===false){if(d.onStart!==undefined){d.onStart(h,b,a)}}c=true};this.itemEnd=function(h){b++;if(d.onProgress!==undefined){d.onProgress(h,b,a)}if(b===a){c=false;if(d.onLoad!==undefined){d.onLoad()}}};this.itemError=function(h){if(d.onError!==undefined){d.onError(h)}}};THREE.DefaultLoadingManager=new THREE.LoadingManager();THREE.BufferGeometryLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(b,d,f,e){var c=this;var a=new THREE.XHRLoader(c.manager);a.load(b,function(g){d(c.parse(JSON.parse(g)))},f,e)},parse:function(p){var j=new THREE.BufferGeometry();var h=p.data.index;var b={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};if(h!==undefined){var k=h.array.buffer instanceof ArrayBuffer?h.array:new b[h.type](h.array);j.setIndex(new THREE.BufferAttribute(k,1))}var f=p.data.attributes;for(var o in f){var c=f[o];var k=c.array.buffer instanceof ArrayBuffer?c.array:new b[c.type](c.array);j.addAttribute(o,new THREE.BufferAttribute(k,c.itemSize))}var e=p.data.groups||p.data.drawcalls||p.data.offsets;if(e!==undefined){for(var g=0,d=e.length;g!==d;++g){var m=e[g];j.addGroup(m.start,m.count,m.materialIndex)}}var l=p.data.boundingSphere;if(l!==undefined){var a=new THREE.Vector3();if(l.center!==undefined){a.fromArray(l.center)}j.boundingSphere=new THREE.Sphere(a,l.radius)}return j}};THREE.MaterialLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this.textures={}};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(b,d,f,e){var c=this;var a=new THREE.XHRLoader(c.manager);a.load(b,function(g){d(c.parse(JSON.parse(g)))},f,e)},setTextures:function(a){this.textures=a},getTexture:function(b){var a=this.textures;if(a[b]===undefined){console.warn("THREE.MaterialLoader: Undefined texture",b)}return a[b]},parse:function(d){var e=new THREE[d.type];if(d.uuid!==undefined){e.uuid=d.uuid}if(d.name!==undefined){e.name=d.name}if(d.color!==undefined){e.color.setHex(d.color)}if(d.roughness!==undefined){e.roughness=d.roughness}if(d.metalness!==undefined){e.metalness=d.metalness}if(d.emissive!==undefined){e.emissive.setHex(d.emissive)}if(d.specular!==undefined){e.specular.setHex(d.specular)}if(d.shininess!==undefined){e.shininess=d.shininess}if(d.uniforms!==undefined){e.uniforms=d.uniforms}if(d.vertexShader!==undefined){e.vertexShader=d.vertexShader}if(d.fragmentShader!==undefined){e.fragmentShader=d.fragmentShader}if(d.vertexColors!==undefined){e.vertexColors=d.vertexColors}if(d.shading!==undefined){e.shading=d.shading}if(d.blending!==undefined){e.blending=d.blending}if(d.side!==undefined){e.side=d.side}if(d.opacity!==undefined){e.opacity=d.opacity}if(d.transparent!==undefined){e.transparent=d.transparent}if(d.alphaTest!==undefined){e.alphaTest=d.alphaTest}if(d.depthTest!==undefined){e.depthTest=d.depthTest}if(d.depthWrite!==undefined){e.depthWrite=d.depthWrite}if(d.colorWrite!==undefined){e.colorWrite=d.colorWrite}if(d.wireframe!==undefined){e.wireframe=d.wireframe}if(d.wireframeLinewidth!==undefined){e.wireframeLinewidth=d.wireframeLinewidth}if(d.size!==undefined){e.size=d.size}if(d.sizeAttenuation!==undefined){e.sizeAttenuation=d.sizeAttenuation}if(d.map!==undefined){e.map=this.getTexture(d.map)}if(d.alphaMap!==undefined){e.alphaMap=this.getTexture(d.alphaMap);e.transparent=true}if(d.bumpMap!==undefined){e.bumpMap=this.getTexture(d.bumpMap)}if(d.bumpScale!==undefined){e.bumpScale=d.bumpScale}if(d.normalMap!==undefined){e.normalMap=this.getTexture(d.normalMap)}if(d.normalScale!==undefined){var b=d.normalScale;if(Array.isArray(b)===false){b=[b,b]}e.normalScale=new THREE.Vector2().fromArray(b)}if(d.displacementMap!==undefined){e.displacementMap=this.getTexture(d.displacementMap)}if(d.displacementScale!==undefined){e.displacementScale=d.displacementScale}if(d.displacementBias!==undefined){e.displacementBias=d.displacementBias}if(d.roughnessMap!==undefined){e.roughnessMap=this.getTexture(d.roughnessMap)}if(d.metalnessMap!==undefined){e.metalnessMap=this.getTexture(d.metalnessMap)}if(d.emissiveMap!==undefined){e.emissiveMap=this.getTexture(d.emissiveMap)}if(d.emissiveIntensity!==undefined){e.emissiveIntensity=d.emissiveIntensity}if(d.specularMap!==undefined){e.specularMap=this.getTexture(d.specularMap)}if(d.envMap!==undefined){e.envMap=this.getTexture(d.envMap);e.combine=THREE.MultiplyOperation}if(d.reflectivity){e.reflectivity=d.reflectivity}if(d.lightMap!==undefined){e.lightMap=this.getTexture(d.lightMap)}if(d.lightMapIntensity!==undefined){e.lightMapIntensity=d.lightMapIntensity}if(d.aoMap!==undefined){e.aoMap=this.getTexture(d.aoMap)}if(d.aoMapIntensity!==undefined){e.aoMapIntensity=d.aoMapIntensity}if(d.materials!==undefined){for(var c=0,a=d.materials.length;c<a;c++){e.materials.push(this.parse(d.materials[c]))}}return e}};THREE.ObjectLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this.texturePath=""};THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(b,d,f,e){if(this.texturePath===""){this.texturePath=b.substring(0,b.lastIndexOf("/")+1)}var c=this;var a=new THREE.XHRLoader(c.manager);a.load(b,function(g){c.parse(JSON.parse(g),d)},f,e)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(c,e){var d=this.parseGeometries(c.geometries);var a=this.parseMaterials(c.materials,{});var b=this.parseObject(c.object,d,a);if(e!==undefined){e(b)}return b},parseGeometries:function(d){var e={};if(d!==undefined){var b=new THREE.JSONLoader();var g=new THREE.BufferGeometryLoader();for(var c=0,a=d.length;c<a;c++){var h;var f=d[c];if(f.type==="BufferGeometry"){h=g.parse(f)}else{h=b.parse(f.data,this.texturePath).geometry}h.uuid=f.uuid;if(f.name!==undefined){h.name=f.name}e[f.uuid]=h}}return e},parseMaterials:function(f,b){var d={};if(f!==undefined){var a=new THREE.MaterialLoader();a.setTextures(b);var g;for(var e=0,c=f.length;e<c;e++){g=a.parse(f[e]);d[g.uuid]=g}}return d},parseAnimations:function(b){var d=[];for(var a=0;a<b.length;a++){var c=THREE.AnimationClip.parse(b[a]);d.push(c)}return d},parseImages:function(k,f){var j=this;var g={};function a(i){j.manager.itemStart(i);return h.load(i,function(){j.manager.itemEnd(i)})}if(k!==undefined&&k.length>0){var d=new THREE.LoadingManager(f);var h=new THREE.ImageLoader(d);h.setCrossOrigin(this.crossOrigin);for(var e=0,c=k.length;e<c;e++){var b=k[e];var m=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(b.url)?b.url:j.texturePath+b.url;g[b.uuid]=a(m)}}return g},parseTextures:function(f,b){function d(i){if(typeof(i)==="number"){return i}console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",i);return THREE[i]}var a={};if(f!==undefined){for(var e=0,c=f.length;e<c;e++){var h=f[e];if(h.image===undefined){console.warn('THREE.ObjectLoader: No "image" specified for',h.uuid)}if(b[h.image]===undefined){console.warn("THREE.ObjectLoader: Undefined image",h.image)}var g=new THREE.Texture(b[h.image]);g.needsUpdate=true;g.uuid=h.uuid;if(h.name!==undefined){g.name=h.name}if(h.mapping!==undefined){g.mapping=d(h.mapping)}if(h.offset!==undefined){g.offset=new THREE.Vector2(h.offset[0],h.offset[1])}if(h.repeat!==undefined){g.repeat=new THREE.Vector2(h.repeat[0],h.repeat[1])}if(h.minFilter!==undefined){g.minFilter=d(h.minFilter)}if(h.magFilter!==undefined){g.magFilter=d(h.magFilter)}if(h.anisotropy!==undefined){g.anisotropy=h.anisotropy}if(Array.isArray(h.wrap)){g.wrapS=d(h.wrap[0]);g.wrapT=d(h.wrap[1])}a[h.uuid]=g}}return a},parseObject:function(){var a=new THREE.Matrix4();return function(g,f,c){var d;function e(i){return f[i]}function b(i){if(i===undefined){return undefined}return c[i]}if(g.type==="Scene"){d=new THREE.Scene()}else{if(g.type==="Mesh"){d=new THREE.Mesh(e(g.geometry),b(g.material))}else{d=new THREE.Object3D()}}d.uuid=g.uuid;if(g.name!==undefined){d.name=g.name}if(g.matrix!==undefined){a.fromArray(g.matrix);a.decompose(d.position,d.quaternion,d.scale)}else{if(g.position!==undefined){d.position.fromArray(g.position)}if(g.rotation!==undefined){d.rotation.fromArray(g.rotation)}if(g.scale!==undefined){d.scale.fromArray(g.scale)}}if(g.castShadow!==undefined){d.castShadow=g.castShadow}if(g.receiveShadow!==undefined){d.receiveShadow=g.receiveShadow}if(g.visible!==undefined){d.visible=g.visible}if(g.userData!==undefined){d.userData=g.userData}if(g.children!==undefined){for(var h in g.children){d.add(this.parseObject(g.children[h],f,c))}}return d}}()};THREE.TextureLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(b,c,f,e){var d=new THREE.Texture();var a=new THREE.ImageLoader(this.manager);a.setCrossOrigin(this.crossOrigin);a.setPath(this.path);a.load(b,function(g){d.image=g;d.needsUpdate=true;if(c!==undefined){c(d)}},f,e);return d},setCrossOrigin:function(a){this.crossOrigin=a},setPath:function(a){this.path=a}};THREE.CubeTextureLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager};THREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(f,g,j,c){var d=new THREE.CubeTexture([]);var h=new THREE.ImageLoader(this.manager);h.setCrossOrigin(this.crossOrigin);h.setPath(this.path);var b=0;function e(k){h.load(f[k],function(i){d.images[k]=i;b++;if(b===6){d.needsUpdate=true;if(g){g(d)}}},undefined,c)}for(var a=0;a<f.length;++a){e(a)}return d},setCrossOrigin:function(a){this.crossOrigin=a},setPath:function(a){this.path=a}};THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this._parser=null};THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(b,d,g,f){var c=this;var e=new THREE.DataTexture();var a=new THREE.XHRLoader(this.manager);a.setResponseType("arraybuffer");a.load(b,function(h){var i=c._parser(h);if(!i){return}if(undefined!==i.image){e.image=i.image}else{if(undefined!==i.data){e.image.width=i.width;e.image.height=i.height;e.image.data=i.data}}e.wrapS=undefined!==i.wrapS?i.wrapS:THREE.ClampToEdgeWrapping;e.wrapT=undefined!==i.wrapT?i.wrapT:THREE.ClampToEdgeWrapping;e.magFilter=undefined!==i.magFilter?i.magFilter:THREE.LinearFilter;e.minFilter=undefined!==i.minFilter?i.minFilter:THREE.LinearMipMapLinearFilter;e.anisotropy=undefined!==i.anisotropy?i.anisotropy:1;if(undefined!==i.format){e.format=i.format}if(undefined!==i.type){e.type=i.type}if(undefined!==i.mipmaps){e.mipmaps=i.mipmaps}if(1===i.mipmapCount){e.minFilter=THREE.LinearFilter}e.needsUpdate=true;if(d){d(e,i)}},g,f);return e}};THREE.CompressedTextureLoader=function(a){this.manager=(a!==undefined)?a:THREE.DefaultLoadingManager;this._parser=null};THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(a,g,l,d){var m=this;var h=[];var e=new THREE.CompressedTexture();e.image=h;var k=new THREE.XHRLoader(this.manager);k.setPath(this.path);k.setResponseType("arraybuffer");function f(n){k.load(a[n],function(i){var o=m._parser(i,true);h[n]={width:o.width,height:o.height,format:o.format,mipmaps:o.mipmaps};c+=1;if(c===6){if(o.mipmapCount===1){e.minFilter=THREE.LinearFilter}e.format=o.format;e.needsUpdate=true;if(g){g(e)}}},l,d)}if(Array.isArray(a)){var c=0;for(var b=0,j=a.length;b<j;++b){f(b)}}else{k.load(a,function(o){var r=m._parser(o,true);if(r.isCubemap){var n=r.mipmaps.length/r.mipmapCount;for(var q=0;q<n;q++){h[q]={mipmaps:[]};for(var p=0;p<r.mipmapCount;p++){h[q].mipmaps.push(r.mipmaps[q*r.mipmapCount+p]);h[q].format=r.format;h[q].width=r.width;h[q].height=r.height}}}else{e.image.width=r.width;e.image.height=r.height;e.mipmaps=r.mipmaps}if(r.mipmapCount===1){e.minFilter=THREE.LinearFilter}e.format=r.format;e.needsUpdate=true;if(g){g(e)}},l,d)}return e},setPath:function(a){this.path=a}};THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.type="Material";this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=THREE.LessEqualDepth;this.depthTest=true;this.depthWrite=true;this.colorWrite=true;this.precision=null;this.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.alphaTest=0;this.overdraw=0;this.visible=true;this._needsUpdate=true};THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){if(a===true){this.update()}this._needsUpdate=a},setValues:function(a){if(a===undefined){return}var d,c;for(var b in a){d=a[b];if(d===undefined){continue}c=this[b];if(c===undefined){continue}if(c instanceof THREE.Color){c.set(d)}else{if(c instanceof THREE.Vector3&&d instanceof THREE.Vector3){c.copy(d)}else{if(b==="overdraw"){this[b]=Number(d)}else{this[b]=d}}}}},toJSON:function(f){var d=f===undefined;if(d){f={textures:{},images:{}}}var e={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};e.uuid=this.uuid;e.type=this.type;if(this.name!==""){e.name=this.name}if(this.color instanceof THREE.Color){e.color=this.color.getHex()}if(this.roughness!==0.5){e.roughness=this.roughness}if(this.metalness!==0.5){e.metalness=this.metalness}if(this.emissive instanceof THREE.Color){e.emissive=this.emissive.getHex()}if(this.specular instanceof THREE.Color){e.specular=this.specular.getHex()}if(this.shininess!==undefined){e.shininess=this.shininess}if(this.map instanceof THREE.Texture){e.map=this.map.toJSON(f).uuid}if(this.alphaMap instanceof THREE.Texture){e.alphaMap=this.alphaMap.toJSON(f).uuid}if(this.lightMap instanceof THREE.Texture){e.lightMap=this.lightMap.toJSON(f).uuid}if(this.bumpMap instanceof THREE.Texture){e.bumpMap=this.bumpMap.toJSON(f).uuid;e.bumpScale=this.bumpScale}if(this.normalMap instanceof THREE.Texture){e.normalMap=this.normalMap.toJSON(f).uuid;e.normalScale=this.normalScale.toArray()}if(this.displacementMap instanceof THREE.Texture){e.displacementMap=this.displacementMap.toJSON(f).uuid;e.displacementScale=this.displacementScale;e.displacementBias=this.displacementBias}if(this.roughnessMap instanceof THREE.Texture){e.roughnessMap=this.roughnessMap.toJSON(f).uuid}if(this.metalnessMap instanceof THREE.Texture){e.metalnessMap=this.metalnessMap.toJSON(f).uuid}if(this.emissiveMap instanceof THREE.Texture){e.emissiveMap=this.emissiveMap.toJSON(f).uuid}if(this.specularMap instanceof THREE.Texture){e.specularMap=this.specularMap.toJSON(f).uuid}if(this.envMap instanceof THREE.Texture){e.envMap=this.envMap.toJSON(f).uuid;e.reflectivity=this.reflectivity}if(this.size!==undefined){e.size=this.size}if(this.sizeAttenuation!==undefined){e.sizeAttenuation=this.sizeAttenuation}if(this.vertexColors!==undefined&&this.vertexColors!==THREE.NoColors){e.vertexColors=this.vertexColors}if(this.shading!==undefined&&this.shading!==THREE.SmoothShading){e.shading=this.shading}if(this.blending!==undefined&&this.blending!==THREE.NormalBlending){e.blending=this.blending}if(this.side!==undefined&&this.side!==THREE.FrontSide){e.side=this.side}if(this.opacity<1){e.opacity=this.opacity}if(this.transparent===true){e.transparent=this.transparent}if(this.alphaTest>0){e.alphaTest=this.alphaTest}if(this.wireframe===true){e.wireframe=this.wireframe}if(this.wireframeLinewidth>1){e.wireframeLinewidth=this.wireframeLinewidth}function c(h){var g=[];for(var i in h){var j=h[i];delete j.metadata;g.push(j)}return g}if(d){var b=c(f.textures);var a=c(f.images);if(b.length>0){e.textures=b}if(a.length>0){e.images=a}}return e},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.name=a.name;this.side=a.side;this.opacity=a.opacity;this.transparent=a.transparent;this.blending=a.blending;this.blendSrc=a.blendSrc;this.blendDst=a.blendDst;this.blendEquation=a.blendEquation;this.blendSrcAlpha=a.blendSrcAlpha;this.blendDstAlpha=a.blendDstAlpha;this.blendEquationAlpha=a.blendEquationAlpha;this.depthFunc=a.depthFunc;this.depthTest=a.depthTest;this.depthWrite=a.depthWrite;this.colorWrite=a.colorWrite;this.precision=a.precision;this.polygonOffset=a.polygonOffset;this.polygonOffsetFactor=a.polygonOffsetFactor;this.polygonOffsetUnits=a.polygonOffsetUnits;this.alphaTest=a.alphaTest;this.overdraw=a.overdraw;this.visible=a.visible;return this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.type="LineBasicMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.linecap="round";this.linejoin="round";this.vertexColors=THREE.NoColors;this.fog=true;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;THREE.LineBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.linecap=a.linecap;this.linejoin=a.linejoin;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.type="LineDashedMaterial";this.color=new THREE.Color(16777215);this.linewidth=1;this.scale=1;this.dashSize=3;this.gapSize=1;this.vertexColors=THREE.NoColors;this.fog=true;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial;THREE.LineDashedMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.linewidth=a.linewidth;this.scale=a.scale;this.dashSize=a.dashSize;this.gapSize=a.gapSize;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.type="MeshBasicMaterial";this.color=new THREE.Color(16777215);this.map=null;this.aoMap=null;this.aoMapIntensity=1;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.setValues(a)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;THREE.MeshBasicMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;return this};THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.type="MeshLambertMaterial";this.color=new THREE.Color(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;THREE.MeshLambertMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.type="MeshPhongMaterial";this.color=new THREE.Color(16777215);this.specular=new THREE.Color(1118481);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;THREE.MeshPhongMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.specular.copy(a.specular);this.shininess=a.shininess;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.specularMap=a.specularMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.combine=a.combine;this.reflectivity=a.reflectivity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshStandardMaterial=function(a){THREE.Material.call(this);this.type="MeshStandardMaterial";this.color=new THREE.Color(16777215);this.roughness=0.5;this.metalness=0.5;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new THREE.Color(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(a)};THREE.MeshStandardMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshStandardMaterial.prototype.constructor=THREE.MeshStandardMaterial;THREE.MeshStandardMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.roughness=a.roughness;this.metalness=a.metalness;this.map=a.map;this.lightMap=a.lightMap;this.lightMapIntensity=a.lightMapIntensity;this.aoMap=a.aoMap;this.aoMapIntensity=a.aoMapIntensity;this.emissive.copy(a.emissive);this.emissiveMap=a.emissiveMap;this.emissiveIntensity=a.emissiveIntensity;this.bumpMap=a.bumpMap;this.bumpScale=a.bumpScale;this.normalMap=a.normalMap;this.normalScale.copy(a.normalScale);this.displacementMap=a.displacementMap;this.displacementScale=a.displacementScale;this.displacementBias=a.displacementBias;this.roughnessMap=a.roughnessMap;this.metalnessMap=a.metalnessMap;this.alphaMap=a.alphaMap;this.envMap=a.envMap;this.envMapIntensity=a.envMapIntensity;this.refractionRatio=a.refractionRatio;this.fog=a.fog;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.wireframeLinecap=a.wireframeLinecap;this.wireframeLinejoin=a.wireframeLinejoin;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;return this};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.type="MeshDepthMaterial";this.morphTargets=false;this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;THREE.MeshDepthMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.type="MeshNormalMaterial";this.wireframe=false;this.wireframeLinewidth=1;this.morphTargets=false;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshNormalMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;return this};THREE.MultiMaterial=function(a){this.uuid=THREE.Math.generateUUID();this.type="MultiMaterial";this.materials=a instanceof Array?a:[];this.visible=true};THREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(f){var c={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]};var b=this.materials;for(var d=0,a=b.length;d<a;d++){var e=b[d].toJSON(f);delete e.metadata;c.materials.push(e)}c.visible=this.visible;return c},clone:function(){var b=new this.constructor();for(var a=0;a<this.materials.length;a++){b.materials.push(this.materials[a].clone())}b.visible=this.visible;return b}};THREE.PointsMaterial=function(a){THREE.Material.call(this);this.type="PointsMaterial";this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=THREE.NoColors;this.fog=true;this.setValues(a)};THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype);THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial;THREE.PointsMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.size=a.size;this.sizeAttenuation=a.sizeAttenuation;this.vertexColors=a.vertexColors;this.fog=a.fog;return this};THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.type="ShaderMaterial";this.defines={};this.uniforms={};this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.vertexColors=THREE.NoColors;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.extensions={derivatives:false,fragDepth:false,drawBuffers:false,shaderTextureLOD:false};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName=undefined;if(a!==undefined){if(a.attributes!==undefined){console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.")}this.setValues(a)}};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;THREE.ShaderMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.fragmentShader=a.fragmentShader;this.vertexShader=a.vertexShader;this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.defines=a.defines;this.shading=a.shading;this.wireframe=a.wireframe;this.wireframeLinewidth=a.wireframeLinewidth;this.fog=a.fog;this.lights=a.lights;this.vertexColors=a.vertexColors;this.skinning=a.skinning;this.morphTargets=a.morphTargets;this.morphNormals=a.morphNormals;this.extensions=a.extensions;return this};THREE.ShaderMaterial.prototype.toJSON=function(b){var a=THREE.Material.prototype.toJSON.call(this,b);a.uniforms=this.uniforms;a.vertexShader=this.vertexShader;a.fragmentShader=this.fragmentShader;return a};THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a);this.type="RawShaderMaterial"};THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial;THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.type="SpriteMaterial";this.color=new THREE.Color(16777215);this.map=null;this.rotation=0;this.fog=false;this.setValues(a)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial;THREE.SpriteMaterial.prototype.copy=function(a){THREE.Material.prototype.copy.call(this,a);this.color.copy(a.color);this.map=a.map;this.rotation=a.rotation;this.fog=a.fog;return this};THREE.Texture=function(d,b,f,e,i,c,h,g,a){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++});this.uuid=THREE.Math.generateUUID();this.name="";this.sourceFile="";this.image=d!==undefined?d:THREE.Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=b!==undefined?b:THREE.Texture.DEFAULT_MAPPING;this.wrapS=f!==undefined?f:THREE.ClampToEdgeWrapping;this.wrapT=e!==undefined?e:THREE.ClampToEdgeWrapping;this.magFilter=i!==undefined?i:THREE.LinearFilter;this.minFilter=c!==undefined?c:THREE.LinearMipMapLinearFilter;this.anisotropy=a!==undefined?a:1;this.format=h!==undefined?h:THREE.RGBAFormat;this.type=g!==undefined?g:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;this.version=0;this.onUpdate=null};THREE.Texture.DEFAULT_IMAGE=undefined;THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping;THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(a){if(a===true){this.version++}},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.image=a.image;this.mipmaps=a.mipmaps.slice(0);this.mapping=a.mapping;this.wrapS=a.wrapS;this.wrapT=a.wrapT;this.magFilter=a.magFilter;this.minFilter=a.minFilter;this.anisotropy=a.anisotropy;this.format=a.format;this.type=a.type;this.offset.copy(a.offset);this.repeat.copy(a.repeat);this.generateMipmaps=a.generateMipmaps;this.premultiplyAlpha=a.premultiplyAlpha;this.flipY=a.flipY;this.unpackAlignment=a.unpackAlignment;return this},toJSON:function(d){if(d.textures[this.uuid]!==undefined){return d.textures[this.uuid]}function a(f){var e;if(f.toDataURL!==undefined){e=f}else{e=document.createElement("canvas");e.width=f.width;e.height=f.height;e.getContext("2d").drawImage(f,0,0,f.width,f.height)}if(e.width>2048||e.height>2048){return e.toDataURL("image/jpeg",0.6)}else{return e.toDataURL("image/png")}}var b={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(this.image!==undefined){var c=this.image;if(c.uuid===undefined){c.uuid=THREE.Math.generateUUID()}if(d.images[c.uuid]===undefined){d.images[c.uuid]={uuid:c.uuid,url:a(c)}}b.image=c.uuid}d.textures[this.uuid]=b;return b},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(a){if(this.mapping!==THREE.UVMapping){return}a.multiply(this.repeat);a.add(this.offset);if(a.x<0||a.x>1){switch(this.wrapS){case THREE.RepeatWrapping:a.x=a.x-Math.floor(a.x);break;case THREE.ClampToEdgeWrapping:a.x=a.x<0?0:1;break;case THREE.MirroredRepeatWrapping:if(Math.abs(Math.floor(a.x)%2)===1){a.x=Math.ceil(a.x)-a.x}else{a.x=a.x-Math.floor(a.x)}break}}if(a.y<0||a.y>1){switch(this.wrapT){case THREE.RepeatWrapping:a.y=a.y-Math.floor(a.y);break;case THREE.ClampToEdgeWrapping:a.y=a.y<0?0:1;break;case THREE.MirroredRepeatWrapping:if(Math.abs(Math.floor(a.y)%2)===1){a.y=Math.ceil(a.y)-a.y}else{a.y=a.y-Math.floor(a.y)}break}}if(this.flipY){a.y=1-a.y}}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CanvasTexture=function(d,b,f,e,i,c,h,g,a){THREE.Texture.call(this,d,b,f,e,i,c,h,g,a);this.needsUpdate=true};THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture;THREE.CubeTexture=function(g,b,e,d,i,c,h,f,a){b=b!==undefined?b:THREE.CubeReflectionMapping;THREE.Texture.call(this,g,b,e,d,i,c,h,f,a);this.images=g;this.flipY=false};THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CubeTexture.prototype.constructor=THREE.CubeTexture;THREE.CubeTexture.prototype.copy=function(a){THREE.Texture.prototype.copy.call(this,a);this.images=a.images;return this};THREE.CompressedTexture=function(e,d,k,i,h,b,g,f,j,c,a){THREE.Texture.call(this,null,b,g,f,j,c,i,h,a);this.image={width:d,height:k};this.mipmaps=e;this.flipY=false;this.generateMipmaps=false};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture;THREE.DataTexture=function(f,d,k,i,h,b,g,e,j,c,a){THREE.Texture.call(this,null,b,g,e,j,c,i,h,a);this.image={data:f,width:d,height:k};this.magFilter=j!==undefined?j:THREE.NearestFilter;this.minFilter=c!==undefined?c:THREE.NearestFilter;this.flipY=false;this.generateMipmaps=false};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.constructor=THREE.DataTexture;THREE.VideoTexture=function(c,b,g,f,j,d,i,h,a){THREE.Texture.call(this,c,b,g,f,j,d,i,h,a);this.generateMipmaps=false;var k=this;function e(){requestAnimationFrame(e);if(c.readyState===c.HAVE_ENOUGH_DATA){k.needsUpdate=true}}e()};THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype);THREE.VideoTexture.prototype.constructor=THREE.VideoTexture;THREE.Group=function(){THREE.Object3D.call(this);this.type="Group"};THREE.Group.prototype=Object.create(THREE.Object3D.prototype);THREE.Group.prototype.constructor=THREE.Group;THREE.Points=function(b,a){THREE.Object3D.call(this);this.type="Points";this.geometry=b!==undefined?b:new THREE.Geometry();this.material=a!==undefined?a:new THREE.PointsMaterial({color:Math.random()*16777215})};THREE.Points.prototype=Object.create(THREE.Object3D.prototype);THREE.Points.prototype.constructor=THREE.Points;THREE.Points.prototype.raycast=(function(){var c=new THREE.Matrix4();var a=new THREE.Ray();var b=new THREE.Sphere();return function d(s,e){var C=this;var j=this.geometry;var u=this.matrixWorld;var h=s.params.Points.threshold;if(j.boundingSphere===null){j.computeBoundingSphere()}b.copy(j.boundingSphere);b.applyMatrix4(u);if(s.ray.intersectsSphere(b)===false){return}c.getInverse(u);a.copy(s.ray).applyMatrix4(c);var g=h/((this.scale.x+this.scale.y+this.scale.z)/3);var f=g*g;var B=new THREE.Vector3();function r(i,D){var E=a.distanceSqToPoint(i);if(E<f){var l=a.closestPointToPoint(i);l.applyMatrix4(u);var F=s.ray.origin.distanceTo(l);if(F<s.near||F>s.far){return}e.push({distance:F,distanceToRay:Math.sqrt(E),point:l.clone(),index:D,face:null,object:C})}}if(j instanceof THREE.BufferGeometry){var n=j.index;var p=j.attributes;var o=p.position.array;if(n!==null){var k=n.array;for(var v=0,q=k.length;v<q;v++){var A=k[v];B.fromArray(o,A*3);r(B,A)}}else{for(var v=0,t=o.length/3;v<t;v++){B.fromArray(o,v*3);r(B,v)}}}else{var m=j.vertices;for(var v=0,t=m.length;v<t;v++){r(m[v],v)}}}}());THREE.Points.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)};THREE.Line=function(c,a,b){if(b===1){console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.");return new THREE.LineSegments(c,a)}THREE.Object3D.call(this);this.type="Line";this.geometry=c!==undefined?c:new THREE.Geometry();this.material=a!==undefined?a:new THREE.LineBasicMaterial({color:Math.random()*16777215})};THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.constructor=THREE.Line;THREE.Line.prototype.raycast=(function(){var c=new THREE.Matrix4();var a=new THREE.Ray();var b=new THREE.Sphere();return function d(s,f){var B=s.linePrecision;var F=B*B;var j=this.geometry;var v=this.matrixWorld;if(j.boundingSphere===null){j.computeBoundingSphere()}b.copy(j.boundingSphere);b.applyMatrix4(v);if(s.ray.intersectsSphere(b)===false){return}c.getInverse(v);a.copy(s.ray).applyMatrix4(c);var G=new THREE.Vector3();var e=new THREE.Vector3();var k=new THREE.Vector3();var t=new THREE.Vector3();var o=this instanceof THREE.LineSegments?2:1;if(j instanceof THREE.BufferGeometry){var p=j.index;var r=j.attributes;var q=r.position.array;if(p!==null){var m=p.array;for(var A=0,u=m.length-1;A<u;A+=o){var D=m[A];var C=m[A+1];G.fromArray(q,D*3);e.fromArray(q,C*3);var g=a.distanceSqToSegment(G,e,t,k);if(g>F){continue}t.applyMatrix4(this.matrixWorld);var h=s.ray.origin.distanceTo(t);if(h<s.near||h>s.far){continue}f.push({distance:h,point:k.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}else{for(var A=0,u=q.length/3-1;A<u;A+=o){G.fromArray(q,3*A);e.fromArray(q,3*A+3);var g=a.distanceSqToSegment(G,e,t,k);if(g>F){continue}t.applyMatrix4(this.matrixWorld);var h=s.ray.origin.distanceTo(t);if(h<s.near||h>s.far){continue}f.push({distance:h,point:k.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}else{if(j instanceof THREE.Geometry){var n=j.vertices;var E=n.length;for(var A=0;A<E-1;A+=o){var g=a.distanceSqToSegment(n[A],n[A+1],t,k);if(g>F){continue}t.applyMatrix4(this.matrixWorld);var h=s.ray.origin.distanceTo(t);if(h<s.near||h>s.far){continue}f.push({distance:h,point:k.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}}}());THREE.Line.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)};THREE.LineStrip=0;THREE.LinePieces=1;THREE.LineSegments=function(b,a){THREE.Line.call(this,b,a);this.type="LineSegments"};THREE.LineSegments.prototype=Object.create(THREE.Line.prototype);THREE.LineSegments.prototype.constructor=THREE.LineSegments;THREE.Mesh=function(b,a){THREE.Object3D.call(this);this.type="Mesh";this.geometry=b!==undefined?b:new THREE.Geometry();this.material=a!==undefined?a:new THREE.MeshBasicMaterial({color:Math.random()*16777215});this.drawMode=THREE.TrianglesDrawMode;this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.setDrawMode=function(a){this.drawMode=a};THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets!==undefined&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1;this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++){this.morphTargetInfluences.push(0);this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==undefined){return this.morphTargetDictionary[a]}console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.raycast=(function(){var c=new THREE.Matrix4();var h=new THREE.Ray();var a=new THREE.Sphere();var r=new THREE.Vector3();var q=new THREE.Vector3();var o=new THREE.Vector3();var l=new THREE.Vector3();var k=new THREE.Vector3();var j=new THREE.Vector3();var i=new THREE.Vector2();var g=new THREE.Vector2();var f=new THREE.Vector2();var b=new THREE.Vector3();var p=new THREE.Vector3();var d=new THREE.Vector3();function n(t,D,C,B,A,v,u){THREE.Triangle.barycoordFromPoint(t,D,C,B,b);A.multiplyScalar(b.x);v.multiplyScalar(b.y);u.multiplyScalar(b.z);A.add(v).add(u);return A.clone()}function e(C,E,F,A,v,u,G){var B;var D=C.material;if(D.side===THREE.BackSide){B=F.intersectTriangle(u,v,A,true,G)}else{B=F.intersectTriangle(A,v,u,D.side!==THREE.DoubleSide,G)}if(B===null){return null}d.copy(G);d.applyMatrix4(C.matrixWorld);var t=E.ray.origin.distanceTo(d);if(t<E.near||t>E.far){return null}return{distance:t,point:d.clone(),object:C}}function s(u,C,E,A,v,F,D,B){r.fromArray(A,F*3);q.fromArray(A,D*3);o.fromArray(A,B*3);var t=e(u,C,E,r,q,o,p);if(t){if(v){i.fromArray(v,F*2);g.fromArray(v,D*2);f.fromArray(v,B*2);t.uv=n(p,r,q,o,i,g,f)}t.face=new THREE.Face3(F,D,B,THREE.Triangle.normal(r,q,o));t.faceIndex=F}return t}return function m(V,u){var G=this.geometry;var R=this.material;var Y=this.matrixWorld;if(R===undefined){return}if(G.boundingSphere===null){G.computeBoundingSphere()}a.copy(G.boundingSphere);a.applyMatrix4(Y);if(V.ray.intersectsSphere(a)===false){return}c.getInverse(Y);h.copy(V.ray).applyMatrix4(c);if(G.boundingBox!==null){if(h.intersectsBox(G.boundingBox)===false){return}}var Q,N;if(G instanceof THREE.BufferGeometry){var ag,ae,ad;var J=G.index;var L=G.attributes;var K=L.position.array;if(L.uv!==undefined){Q=L.uv.array}if(J!==null){var H=J.array;for(var Z=0,W=H.length;Z<W;Z+=3){ag=H[Z];ae=H[Z+1];ad=H[Z+2];N=s(this,V,h,K,Q,ag,ae,ad);if(N){N.faceIndex=Math.floor(Z/3);u.push(N)}}}else{for(var Z=0,W=K.length;Z<W;Z+=9){ag=Z/3;ae=ag+1;ad=ag+2;N=s(this,V,h,K,Q,ag,ae,ad);if(N){N.index=ag;u.push(N)}}}}else{if(G instanceof THREE.Geometry){var F,E,C;var B=R instanceof THREE.MultiMaterial;var A=B===true?R.materials:null;var I=G.vertices;var v=G.faces;var ab=G.faceVertexUvs[0];if(ab.length>0){Q=ab}for(var aa=0,O=v.length;aa<O;aa++){var M=v[aa];var ac=B===true?A[M.materialIndex]:R;if(ac===undefined){continue}F=I[M.a];E=I[M.b];C=I[M.c];if(ac.morphTargets===true){var P=G.morphTargets;var T=this.morphTargetInfluences;r.set(0,0,0);q.set(0,0,0);o.set(0,0,0);for(var S=0,D=P.length;S<D;S++){var X=T[S];if(X===0){continue}var af=P[S].vertices;r.addScaledVector(l.subVectors(af[M.a],F),X);q.addScaledVector(k.subVectors(af[M.b],E),X);o.addScaledVector(j.subVectors(af[M.c],C),X)}r.add(F);q.add(E);o.add(C);F=r;E=q;C=o}N=e(this,V,h,F,E,C,p);if(N){if(Q){var U=Q[aa];i.copy(U[0]);g.copy(U[1]);f.copy(U[2]);N.uv=n(p,F,E,C,i,g,f)}N.face=M;N.faceIndex=aa;u.push(N)}}}}}}());THREE.Mesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)};THREE.Bone=function(a){THREE.Object3D.call(this);this.type="Bone";this.skin=a};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.copy=function(a){THREE.Object3D.prototype.copy.call(this,a);this.skin=a.skin;return this};THREE.Skeleton=function(c,e,f){this.useVertexTexture=f!==undefined?f:true;this.identityMatrix=new THREE.Matrix4();c=c||[];this.bones=c.slice(0);if(this.useVertexTexture){var d=Math.sqrt(this.bones.length*4);d=THREE.Math.nextPowerOfTwo(Math.ceil(d));d=Math.max(d,4);this.boneTextureWidth=d;this.boneTextureHeight=d;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)}else{this.boneMatrices=new Float32Array(16*this.bones.length)}if(e===undefined){this.calculateInverses()}else{if(this.bones.length===e.length){this.boneInverses=e.slice(0)}else{console.warn("THREE.Skeleton bonInverses is the wrong length.");this.boneInverses=[];for(var a=0,g=this.bones.length;a<g;a++){this.boneInverses.push(new THREE.Matrix4())}}}};THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,d=this.bones.length;a<d;a++){var c=new THREE.Matrix4();if(this.bones[a]){c.getInverse(this.bones[a].matrixWorld)}this.boneInverses.push(c)}};THREE.Skeleton.prototype.pose=function(){var c;for(var a=0,d=this.bones.length;a<d;a++){c=this.bones[a];if(c){c.matrixWorld.getInverse(this.boneInverses[a])}}for(var a=0,d=this.bones.length;a<d;a++){c=this.bones[a];if(c){if(c.parent){c.matrix.getInverse(c.parent.matrixWorld);c.matrix.multiply(c.matrixWorld)}else{c.matrix.copy(c.matrixWorld)}c.matrix.decompose(c.position,c.quaternion,c.scale)}}};THREE.Skeleton.prototype.update=(function(){var a=new THREE.Matrix4();return function b(){for(var c=0,e=this.bones.length;c<e;c++){var d=this.bones[c]?this.bones[c].matrixWorld:this.identityMatrix;a.multiplyMatrices(d,this.boneInverses[c]);a.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.useVertexTexture){this.boneTexture.needsUpdate=true}}})();THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)};THREE.SkinnedMesh=function(h,d,f){THREE.Mesh.call(this,h,d);this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new THREE.Matrix4();this.bindMatrixInverse=new THREE.Matrix4();var c=[];if(this.geometry&&this.geometry.bones!==undefined){var e,g;for(var a=0,i=this.geometry.bones.length;a<i;++a){g=this.geometry.bones[a];e=new THREE.Bone(this);c.push(e);e.name=g.name;e.position.fromArray(g.pos);e.quaternion.fromArray(g.rotq);if(g.scl!==undefined){e.scale.fromArray(g.scl)}}for(var a=0,i=this.geometry.bones.length;a<i;++a){g=this.geometry.bones[a];if(g.parent!==-1&&g.parent!==null){c[g.parent].add(c[a])}else{this.add(c[a])}}}this.normalizeSkinWeights();this.updateMatrixWorld(true);this.bind(new THREE.Skeleton(c,undefined,f),this.matrixWorld)};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.bind=function(b,a){this.skeleton=b;if(a===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();a=this.matrixWorld}this.bindMatrix.copy(a);this.bindMatrixInverse.getInverse(a)};THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()};THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry){for(var d=0;d<this.geometry.skinWeights.length;d++){var a=this.geometry.skinWeights[d];var e=1/a.lengthManhattan();if(e!==Infinity){a.multiplyScalar(e)}else{a.set(1,0,0,0)}}}else{if(this.geometry instanceof THREE.BufferGeometry){var c=new THREE.Vector4();var b=this.geometry.attributes.skinWeight;for(var d=0;d<b.count;d++){c.x=b.getX(d);c.y=b.getY(d);c.z=b.getZ(d);c.w=b.getW(d);var e=1/c.lengthManhattan();if(e!==Infinity){c.multiplyScalar(e)}else{c.set(1,0,0,0)}b.setXYZW(d,c.x,c.y,c.z,c.w)}}}};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,true);if(this.bindMode==="attached"){this.bindMatrixInverse.getInverse(this.matrixWorld)}else{if(this.bindMode==="detached"){this.bindMatrixInverse.getInverse(this.bindMatrix)}else{console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)}}};THREE.SkinnedMesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)};THREE.LOD=function(){THREE.Object3D.call(this);this.type="LOD";Object.defineProperties(this,{levels:{enumerable:true,value:[]},objects:{get:function(){console.warn("THREE.LOD: .objects has been renamed to .levels.");return this.levels}}})};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.addLevel=function(b,d){if(d===undefined){d=0}d=Math.abs(d);var c=this.levels;for(var a=0;a<c.length;a++){if(d<c[a].distance){break}}c.splice(a,0,{distance:d,object:b});this.add(b)};THREE.LOD.prototype.getObjectForDistance=function(d){var c=this.levels;for(var b=1,a=c.length;b<a;b++){if(d<c[b].distance){break}}return c[b-1].object};THREE.LOD.prototype.raycast=(function(){var a=new THREE.Vector3();return function b(c,d){a.setFromMatrixPosition(this.matrixWorld);var e=c.ray.origin.distanceTo(a);this.getObjectForDistance(e).raycast(c,d)}}());THREE.LOD.prototype.update=function(){var c=new THREE.Vector3();var a=new THREE.Vector3();return function b(f){var g=this.levels;if(g.length>1){c.setFromMatrixPosition(f.matrixWorld);a.setFromMatrixPosition(this.matrixWorld);var h=c.distanceTo(a);g[0].object.visible=true;for(var e=1,d=g.length;e<d;e++){if(h>=g[e].distance){g[e-1].object.visible=false;g[e].object.visible=true}else{break}}for(;e<d;e++){g[e].object.visible=false}}}}();THREE.LOD.prototype.copy=function(d){THREE.Object3D.prototype.copy.call(this,d,false);var c=d.levels;for(var b=0,a=c.length;b<a;b++){var e=c[b];this.addLevel(e.object.clone(),e.distance)}return this};THREE.LOD.prototype.toJSON=function(e){var d=THREE.Object3D.prototype.toJSON.call(this,e);d.object.levels=[];var c=this.levels;for(var b=0,a=c.length;b<a;b++){var f=c[b];d.object.levels.push({object:f.object.uuid,distance:f.distance})}return d};THREE.Sprite=(function(){var e=new Uint16Array([0,1,2,0,2,3]);var b=new Float32Array([-0.5,-0.5,0,0.5,-0.5,0,0.5,0.5,0,-0.5,0.5,0]);var c=new Float32Array([0,0,1,0,1,1,0,1]);var d=new THREE.BufferGeometry();d.setIndex(new THREE.BufferAttribute(e,1));d.addAttribute("position",new THREE.BufferAttribute(b,3));d.addAttribute("uv",new THREE.BufferAttribute(c,2));return function a(f){THREE.Object3D.call(this);this.type="Sprite";this.geometry=d;this.material=(f!==undefined)?f:new THREE.SpriteMaterial()}})();THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.constructor=THREE.Sprite;THREE.Sprite.prototype.raycast=(function(){var a=new THREE.Vector3();return function b(d,e){a.setFromMatrixPosition(this.matrixWorld);var c=d.ray.distanceSqToPoint(a);var f=this.scale.x*this.scale.y;if(c>f){return}e.push({distance:Math.sqrt(c),point:this.position,face:null,object:this})}}());THREE.Sprite.prototype.clone=function(){return new this.constructor(this.material).copy(this)};THREE.Particle=THREE.Sprite;THREE.LensFlare=function(d,b,e,c,a){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3();this.customUpdateCallback=undefined;if(d!==undefined){this.add(d,b,e,c,a)}};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.constructor=THREE.LensFlare;THREE.LensFlare.prototype.add=function(e,c,f,d,a,b){if(c===undefined){c=-1}if(f===undefined){f=0}if(b===undefined){b=1}if(a===undefined){a=new THREE.Color(16777215)}if(d===undefined){d=THREE.NormalBlending}f=Math.min(f,Math.max(0,f));this.lensFlares.push({texture:e,size:c,distance:f,x:0,y:0,z:0,scale:1,rotation:0,opacity:b,color:a,blending:d})};THREE.LensFlare.prototype.updateLensFlares=function(){var d,c=this.lensFlares.length;var b;var a=-this.positionScreen.x*2;var e=-this.positionScreen.y*2;for(d=0;d<c;d++){b=this.lensFlares[d];b.x=this.positionScreen.x+a*b.distance;b.y=this.positionScreen.y+e*b.distance;b.wantedRotation=b.x*Math.PI*0.25;b.rotation+=(b.wantedRotation-b.rotation)*0.25}};THREE.LensFlare.prototype.copy=function(c){THREE.Object3D.prototype.copy.call(this,c);this.positionScreen.copy(c.positionScreen);this.customUpdateCallback=c.customUpdateCallback;for(var b=0,a=c.lensFlares.length;b<a;b++){this.lensFlares.push(c.lensFlares[b])}return this};THREE.Scene=function(){THREE.Object3D.call(this);this.type="Scene";this.fog=null;this.overrideMaterial=null;this.autoUpdate=true};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.constructor=THREE.Scene;THREE.Scene.prototype.copy=function(b,a){THREE.Object3D.prototype.copy.call(this,b,a);if(b.fog!==null){this.fog=b.fog.clone()}if(b.overrideMaterial!==null){this.overrideMaterial=b.overrideMaterial.clone()}this.autoUpdate=b.autoUpdate;this.matrixAutoUpdate=b.matrixAutoUpdate;return this};THREE.Fog=function(b,c,a){this.name="";this.color=new THREE.Color(b);this.near=(c!==undefined)?c:1;this.far=(a!==undefined)?a:1000};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(b,a){this.name="";this.color=new THREE.Color(b);this.density=(a!==undefined)?a:0.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.ShaderChunk={};THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n";THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n";THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n";THREE.ShaderChunk.ambient_pars="uniform vec3 ambientLightColor;\n\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\n\treturn PI * ambientLightColor;\n\n}\n";THREE.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\n\treflectedLight.indirectDiffuse *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n#endif\n";THREE.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif";THREE.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n";THREE.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n";THREE.ShaderChunk.bsdfs='bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n\n}\n\nfloat calcLightAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\n\tif ( decayExponent > 0.0 ) {\n\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n}\n\n\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\n\treturn RECIPROCAL_PI * diffuseColor;\n\n} // validated\n\n\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\n\t// Original approximation by Christophe Schlick \'94\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\n\n\t// Optimized variant (presented by Epic at SIGGRAPH \'13)\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n} // validated\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (34)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\n\t// geometry term = G(l)⋅G(v) / 4(n⋅l)(n⋅v)\n\n\tfloat a2 = alpha * alpha;\n\n\tfloat gl = dotNL + pow( a2 + ( 1.0 - a2 ) * dotNL * dotNL, 0.5 );\n\n\tfloat gv = dotNV + pow( a2 + ( 1.0 - a2 ) * dotNV * dotNV, 0.5 );\n\n\treturn 1.0 / ( gl * gv );\n\n} // validated\n\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is "roughness squared" in Disney’s reparameterization\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\n\tfloat a2 = alpha * alpha;\n\n\tfloat denom = dotNH * dotNH * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1\n\n\treturn RECIPROCAL_PI * a2 / ( denom * denom );\n\n}\n\n\n// GGX Distribution, Schlick Fresnel, GGX-Smith Visibility\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat alpha = roughness * roughness; // UE4\'s roughness\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_GGX_Smith( alpha, dotNL, dotNV );\n\n\tfloat D = D_GGX( alpha, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n\n// ref: https://www.unrealengine.com/blog/physically-based-shading-on-mobile - environmentBRDF for GGX on mobile\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\n\tvec4 r = roughness * c0 + c1;\n\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\n\treturn specularColor * AB.x + AB.y;\n\n} // validated\n\n\nfloat G_BlinnPhong_Implicit(  ) {\n\n\t// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\n\t//float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\t//float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit(  );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * ( G * D );\n\n} // validated\n\n// source: http://simonstechblog.blogspot.ca/2011/12/microfacet-brdf.html\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / square( ggxRoughness + 0.0001 ) - 2.0 );\n}\n';THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n";THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif";THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n";THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif";THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif";THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nfloat square( const in float x ) { return x*x; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\n\n\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\n\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\n\n\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n}\n\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nvec3 inputToLinear( in vec3 a ) {\n\n\t#ifdef GAMMA_INPUT\n\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n\nvec3 linearToOutput( in vec3 a ) {\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n";THREE.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n";THREE.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n";THREE.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n";THREE.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\n\n\ttotalEmissiveLight *= emissiveColor.rgb;\n\n#endif\n";THREE.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n";THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\tenvColor.xyz = inputToLinear( envColor.xyz );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( STANDARD )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n\n#ifdef USE_ENVMAP\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n";THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif";THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif";THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n#endif\n";THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif";THREE.ShaderChunk.lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\n\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\n\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\n\nvLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\n\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n\n#if NUM_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tdirectLight = getPointDirectLight( pointLights[ i ], geometry );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tdirectLight = getSpotDirectLight( spotLights[ i ], geometry );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\t}\n\n#endif\n\n#if NUM_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectLight = getDirectionalDirectLight( directionalLights[ i ], geometry );\n\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\n\t\t#endif\n\n\t}\n\n#endif\n";THREE.ShaderChunk.lights_pars="#if NUM_DIR_LIGHTS > 0\n\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\n\tIncidentLight getDirectionalDirectLight( const in DirectionalLight directionalLight, const in GeometricContext geometry ) {\n\n\t\tIncidentLight directLight;\n\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\n\t\treturn directLight;\n\n\t}\n\n#endif\n\n\n#if NUM_POINT_LIGHTS > 0\n\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\n\tIncidentLight getPointDirectLight( const in PointLight pointLight, const in GeometricContext geometry ) {\n\n\t\tIncidentLight directLight;\n\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= calcLightAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\n\t\treturn directLight;\n\n\t}\n\n#endif\n\n\n#if NUM_SPOT_LIGHTS > 0\n\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat angleCos;\n\t\tfloat penumbra;\n\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\n\tIncidentLight getSpotDirectLight( const in SpotLight spotLight, const in GeometricContext geometry ) {\n\n\t\tIncidentLight directLight;\n\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat spotEffect = dot( directLight.direction, spotLight.direction );\n\n\t\tif ( all( bvec2( spotEffect > spotLight.angleCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\n\t\t\tfloat spotEffect = dot( spotLight.direction, directLight.direction );\n\t\t\tspotEffect *= clamp( ( spotEffect - spotLight.angleCos ) / spotLight.penumbra, 0.0, 1.0 );\n\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= ( spotEffect * calcLightAttenuation( lightDistance, spotLight.distance, spotLight.decay ) );\n\t\t\tdirectLight.visible = true;\n\n\t\t} else {\n\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\n\t\t}\n\n\t\treturn directLight;\n\n\t}\n\n#endif\n\n\n#if NUM_HEMI_LIGHTS > 0\n\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\n\t\treturn PI * mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\n\t}\n\n#endif\n\n\n#if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\tvec3 getLightProbeIndirectIrradiance(  const in GeometricContext geometry, const in int maxMIPLevel ) {\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#else\n\n\t\t\tfloat flipNormal = 1.0;\n\n\t\t#endif\n\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\n\t\t\t// TODO: replace with properly filtered cubemaps and access the irradiance LOD level, be it the last LOD level\n\t\t\t// of a specular cubemap, or just the default level of a specially created irradiance cubemap.\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#else\n\n\t\t\t\t// force the bias high to get the last LOD level as it is the most blurred.\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvec3 envMapColor = vec3( 0.0 );\n\n\t\t#endif\n\n\t\tenvMapColor.rgb = inputToLinear( envMapColor.rgb );\n\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\n\t}\n\n\t// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t//float envMapWidth = pow( 2.0, maxMIPLevelScalar );\n\t\t//float desiredMIPLevel = log2( envMapWidth * sqrt( 3.0 ) ) - 0.5 * log2( square( blinnShininessExponent ) + 1.0 );\n\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( square( blinnShininessExponent ) + 1.0 );\n\n\t\t// clamp to allowable LOD ranges.\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n\t}\n\n\tvec3 getLightProbeIndirectRadiance(  const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\n\t\t#endif\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#else\n\n\t\t\tfloat flipNormal = 1.0;\n\n\t\t#endif\n\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#else\n\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tenvMapColor.rgb = inputToLinear( envMapColor.rgb );\n\n\t\treturn envMapColor.rgb * envMapIntensity;\n\n\t}\n\n#endif\n";THREE.ShaderChunk.lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n";THREE.ShaderChunk.lights_phong_pars_fragment="#ifdef USE_ENVMAP\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n\n\nstruct BlinnPhongMaterial {\n\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n\n};\n\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * PI * directLight.color; // punctual light\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n\n}\n\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n\n#define Material_LightProbeLOD( material )\t(0)\n";THREE.ShaderChunk.lights_phong_pars_vertex="#ifdef USE_ENVMAP\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n";THREE.ShaderChunk.lights_phong_vertex="#ifdef USE_ENVMAP\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif\n";THREE.ShaderChunk.lights_standard_fragment="StandardMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n";THREE.ShaderChunk.lights_standard_pars_fragment="struct StandardMaterial {\n\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\n};\n\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\n\tvec3 irradiance = dotNL * PI * directLight.color; // punctual light\n\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\n}\n\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\n}\n\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\n}\n\n#define RE_Direct\t\t\t\tRE_Direct_Standard\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Standard\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Standard\n\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n";THREE.ShaderChunk.lights_template="//\n// This is a template that can be used to light a material, it uses pluggable RenderEquations (RE)\n//   for specific lighting scenarios.\n//\n// Instructions for use:\n//  - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined\n//  - If you have defined an RE_IndirectSpecular, you need to also provide a Material_LightProbeLOD. <---- ???\n//  - Create a material parameter that is to be passed as the third parameter to your lighting functions.\n//\n// TODO:\n//  - Add area light support.\n//  - Add sphere light support.\n//  - Add diffuse light probe (irradiance cubemap) support.\n//\n\nGeometricContext geometry;\n\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\n\nIncidentLight directLight;\n\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tPointLight pointLight;\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\n\t\tdirectLight = getPointDirectLight( pointLight, geometry );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tSpotLight spotLight;\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\n\t\tdirectLight = getSpotDirectLight( spotLight, geometry );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\n\tDirectionalLight directionalLight;\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\n\t\tdirectLight = getDirectionalDirectLight( directionalLight, geometry );\n\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\n\t}\n\n#endif\n\n#if defined( RE_IndirectDiffuse )\n\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\n\t#ifdef USE_LIGHTMAP\n\n\t\tirradiance += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity; // factor of PI should not be present; included here to prevent breakage\n\n\t#endif\n\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\n\t\t}\n\n\t#endif\n\n\t// #if defined( USE_ENVMAP ) && defined( STANDARD )\n\n\t\t// TODO, replace 8 with the real maxMIPLevel\n\t\t// irradiance += getLightProbeIndirectIrradiance(  geometry, 8 ); // comment out until seams are fixed\n\n\t// #endif\n\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n\n#endif\n\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\n\t// TODO, replace 8 with the real maxMIPLevel\n\tvec3 radiance = getLightProbeIndirectRadiance(  geometry, Material_BlinnShininessExponent( material ), 8 );\n\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\n\n#endif\n";THREE.ShaderChunk.linear_to_gamma_fragment="\n\toutgoingLight = linearToOutput( outgoingLight );\n";THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif";THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif";THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n\t#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\n\n\tdiffuseColor *= texelColor;\n\n#endif\n";THREE.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif";THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n";THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n\n#endif\n";THREE.ShaderChunk.metalnessmap_fragment="float metalnessFactor = metalness;\n\n#ifdef USE_METALNESSMAP\n\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n\n#endif\n";THREE.ShaderChunk.metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\n\tuniform sampler2D metalnessMap;\n\n#endif";THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n";THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif";THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.normal_fragment="#ifdef FLAT_SHADED\n\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#else\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n\t#endif\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n";THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t// Per-Pixel Tangent Space Normal Mapping\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n";THREE.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n";THREE.ShaderChunk.roughnessmap_fragment="float roughnessFactor = roughness;\n\n#ifdef USE_ROUGHNESSMAP\n\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n\n#endif\n";THREE.ShaderChunk.roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\n\tuniform sampler2D roughnessMap;\n\n#endif";THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\treturn dot( rgba_depth, bit_shift );\n\n\t}\n\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\n\t\treturn step( compare, unpackDepth( texture2D( depths, uv ) ) );\n\n\t}\n\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\n\t\tvec2 f = fract( uv * size + 0.5 );\n\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\n\t\treturn c;\n\n\t}\n\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\n\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering:\n\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\n\t\t#endif\n\n\t\t}\n\n\t\treturn 1.0;\n\n\t}\n\n\t// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D\n\t// vector suitable for 2D texture mapping. This code uses the following layout for the\n\t// 2D texture:\n\t//\n\t// xzXZ\n\t//  y Y\n\t//\n\t// Y - Positive y direction\n\t// y - Negative y direction\n\t// X - Positive x direction\n\t// x - Negative x direction\n\t// Z - Positive z direction\n\t// z - Negative z direction\n\t//\n\t// Source and test bed:\n\t// https://gist.github.com/tschw/da10c43c467ce8afd0c4\n\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\t\t// Number of texels to avoid at the edge of each square\n\n\t\tvec3 absV = abs( v );\n\n\t\t// Intersect unit cube\n\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\n\t\t// Apply scale to avoid seams\n\n\t\t// two texels less per square (one texel will do for NEAREST)\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\t\t// Unwrap\n\n\t\t// space: -1 ... 1 range for each square\n\t\t//\n\t\t// #X##\t\tdim    := ( 4 , 2 )\n\t\t//  # #\t\tcenter := ( 1 , 1 )\n\n\t\tvec2 planar = v.xy;\n\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\tif ( absV.z >= almostOne ) {\n\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t}\n\n\t\t// Transform to UV space\n\n\t\t// scale := 0.5 / dim\n\t\t// translate := ( center + 0.5 ) / dim\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t}\n\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\n\t\t// for point lights, the uniform @vShadowCoord is re-purposed to hold\n\t\t// the distance from the light to the world-space position of the fragment.\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\n\t\t// bd3D = base direction 3D\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t// dp = distance from light to fragment position\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\n\t\t#else // no percentage-closer filtering\n\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\n\t\t#endif\n\n\t}\n\n#endif\n";THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\n\t}\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.shadowmask_pars_fragment="float getShadowMask() {\n\n\tfloat shadow = 1.0;\n\n\t#ifdef USE_SHADOWMAP\n\n\t#if NUM_DIR_LIGHTS > 0\n\n\tDirectionalLight directionalLight;\n\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_SPOT_LIGHTS > 0\n\n\tSpotLight spotLight;\n\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#if NUM_POINT_LIGHTS > 0\n\n\tPointLight pointLight;\n\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\n\t}\n\n\t#endif\n\n\t#endif\n\n\treturn shadow;\n\n}\n";THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif";THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n";THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n";THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n";THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif";THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif";THREE.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n#endif";THREE.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = uv2;\n\n#endif";THREE.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\n#endif";THREE.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n";THREE.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif";THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n\t#endif\n\n#endif\n";THREE.UniformsUtils={merge:function(b){var a={};for(var c=0;c<b.length;c++){var d=this.clone(b[c]);for(var e in d){a[e]=d[e]}}return a},clone:function(a){var c={};for(var d in a){c[d]={};for(var e in a[d]){var b=a[d][e];if(b instanceof THREE.Color||b instanceof THREE.Vector2||b instanceof THREE.Vector3||b instanceof THREE.Vector4||b instanceof THREE.Matrix3||b instanceof THREE.Matrix4||b instanceof THREE.Texture){c[d][e]=b.clone()}else{if(Array.isArray(b)){c[d][e]=b.slice()}else{c[d][e]=b}}}}return c}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},roughnessmap:{roughnessMap:{type:"t",value:null}},metalnessmap:{metalnessMap:{type:"t",value:null}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},ambient:{ambientLightColor:{type:"fv",value:[]}},lights:{directionalLights:{type:"sa",value:[],properties:{direction:{type:"v3"},color:{type:"c"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},directionalShadowMap:{type:"tv",value:[]},directionalShadowMatrix:{type:"m4v",value:[]},spotLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},direction:{type:"v3"},distance:{type:"f"},angleCos:{type:"f"},penumbra:{type:"f"},decay:{type:"f"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},spotShadowMap:{type:"tv",value:[]},spotShadowMatrix:{type:"m4v",value:[]},pointLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},decay:{type:"f"},distance:{type:"f"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},pointShadowMap:{type:"tv",value:[]},pointShadowMatrix:{type:"m4v",value:[]},hemisphereLights:{type:"sa",value:[],properties:{direction:{type:"v3"},skyColor:{type:"c"},groundColor:{type:"c"}}}},points:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","#ifndef FLAT_SHADED","	varying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	ReflectedLight reflectedLight;","	reflectedLight.directDiffuse = vec3( 0.0 );","	reflectedLight.directSpecular = vec3( 0.0 );","	reflectedLight.indirectDiffuse = diffuseColor.rgb;","	reflectedLight.indirectSpecular = vec3( 0.0 );",THREE.ShaderChunk.aomap_fragment,"	vec3 outgoingLight = reflectedLight.indirectDiffuse;",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.fog,THREE.UniformsLib.ambient,THREE.UniformsLib.lights,{emissive:{type:"c",value:new THREE.Color(0)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.bsdfs,THREE.ShaderChunk.lights_pars,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.emissivemap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.bsdfs,THREE.ShaderChunk.ambient_pars,THREE.ShaderChunk.lights_pars,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.shadowmask_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec4 diffuseColor = vec4( diffuse, opacity );","	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","	vec3 totalEmissiveLight = emissive;",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.emissivemap_fragment,"	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );",THREE.ShaderChunk.lightmap_fragment,"	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );","	#ifdef DOUBLE_SIDED","		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;","	#else","		reflectedLight.directDiffuse = vLightFront;","	#endif","	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();",THREE.ShaderChunk.aomap_fragment,"	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveLight;",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.ambient,THREE.UniformsLib.lights,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","	varying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.displacementmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","	vNormal = normalize( transformedNormal );","#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.displacementmap_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = - mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.emissivemap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.bsdfs,THREE.ShaderChunk.ambient_pars,THREE.ShaderChunk.lights_pars,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec4 diffuseColor = vec4( diffuse, opacity );","	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","	vec3 totalEmissiveLight = emissive;",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.normal_fragment,THREE.ShaderChunk.emissivemap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lights_template,THREE.ShaderChunk.aomap_fragment,"vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},standard:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.roughnessmap,THREE.UniformsLib.metalnessmap,THREE.UniformsLib.fog,THREE.UniformsLib.ambient,THREE.UniformsLib.lights,{emissive:{type:"c",value:new THREE.Color(0)},roughness:{type:"f",value:0.5},metalness:{type:"f",value:0},envMapIntensity:{type:"f",value:1}}]),vertexShader:["#define STANDARD","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","	varying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.displacementmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","	vNormal = normalize( transformedNormal );","#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.displacementmap_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = - mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define STANDARD","uniform vec3 diffuse;","uniform vec3 emissive;","uniform float roughness;","uniform float metalness;","uniform float opacity;","uniform float envMapIntensity;","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","	varying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.emissivemap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.bsdfs,THREE.ShaderChunk.ambient_pars,THREE.ShaderChunk.lights_pars,THREE.ShaderChunk.lights_standard_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.roughnessmap_pars_fragment,THREE.ShaderChunk.metalnessmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec4 diffuseColor = vec4( diffuse, opacity );","	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","	vec3 totalEmissiveLight = emissive;",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.roughnessmap_fragment,THREE.ShaderChunk.metalnessmap_fragment,THREE.ShaderChunk.normal_fragment,THREE.ShaderChunk.emissivemap_fragment,THREE.ShaderChunk.lights_standard_fragment,THREE.ShaderChunk.lights_template,THREE.ShaderChunk.aomap_fragment,"vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;",THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.fog]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.project_vertex,"	#ifdef USE_SIZEATTENUATION","		gl_PointSize = size * ( scale / - mvPosition.z );","	#else","		gl_PointSize = size;","	#endif",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	if ( mod( vLineDistance, totalSize ) > dashSize ) {","		discard;","	}","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	float color = 1.0 - smoothstep( mNear, mFar, depth );","	gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vWorldPosition = transformDirection( position, modelMatrix );","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vWorldPosition = transformDirection( position, modelMatrix );","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );","sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bit_mask;","	return res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","	#else","		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","	#endif","}"].join("\n")},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new THREE.Vector3(0,0,0)}},vertexShader:["varying vec4 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.worldpos_vertex,"vWorldPosition = worldPosition;","}"].join("\n"),fragmentShader:["uniform vec3 lightPos;","varying vec4 vWorldPosition;",THREE.ShaderChunk.common,"vec4 pack1K ( float depth ) {","	depth /= 1000.0;","	const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bitSh * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bitMsk;","	return res; ","}","float unpack1K ( vec4 color ) {","	const vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","	return dot( color, bitSh ) * 1000.0;","}","void main () {","	gl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );","}"].join("\n")}};THREE.WebGLRenderer=function(J){J=J||{};var f=J.canvas!==undefined?J.canvas:document.createElement("canvas"),d=J.context!==undefined?J.context:null,Z=J.alpha!==undefined?J.alpha:false,aE=J.depth!==undefined?J.depth:true,a9=J.stencil!==undefined?J.stencil:true,aw=J.antialias!==undefined?J.antialias:false,a5=J.premultipliedAlpha!==undefined?J.premultipliedAlpha:true,az=J.preserveDrawingBuffer!==undefined?J.preserveDrawingBuffer:false;var i=[];var h=[];var aQ=-1;var aq=[];var ap=-1;var ac=new Float32Array(8);var ah=[];var aW=[];this.domElement=f;this.context=null;this.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;this.sortObjects=true;this.gammaFactor=2;this.gammaInput=false;this.gammaOutput=false;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;var H=this,D=null,aC=null,aX=null,ak=-1,L="",I=null,X=new THREE.Vector4(),a4=null,a2=new THREE.Vector4(),aY=0,O=new THREE.Color(0),aG=0,ay=f.width,K=f.height,au=1,N=new THREE.Vector4(0,0,ay,K),W=false,aj=new THREE.Vector4(0,0,ay,K),aD=new THREE.Frustum(),at=new THREE.Matrix4(),s=new THREE.Vector3(),t={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[],shadowsPointLight:0},an={geometries:0,textures:0},aV={calls:0,vertices:0,faces:0,points:0};this.info={render:aV,memory:an,programs:null};var aH;try{var aK={alpha:Z,depth:aE,stencil:a9,antialias:aw,premultipliedAlpha:a5,preserveDrawingBuffer:az};aH=d||f.getContext("webgl",aK)||f.getContext("experimental-webgl",aK);if(aH===null){if(f.getContext("webgl")!==null){throw"Error creating WebGL context with your selected attributes."}else{throw"Error creating WebGL context."}}f.addEventListener("webglcontextlost",n,false)}catch(aJ){console.error("THREE.WebGLRenderer: "+aJ)}var b=new THREE.WebGLExtensions(aH);b.get("OES_texture_float");b.get("OES_texture_float_linear");b.get("OES_texture_half_float");b.get("OES_texture_half_float_linear");b.get("OES_standard_derivatives");b.get("ANGLE_instanced_arrays");if(b.get("OES_element_index_uint")){THREE.BufferGeometry.MaxIndex=4294967296}var aa=new THREE.WebGLCapabilities(aH,b,J);var a6=new THREE.WebGLState(aH,b,al);var af=new THREE.WebGLProperties();var ar=new THREE.WebGLObjects(aH,af,this.info);var k=new THREE.WebGLPrograms(this,aa);var V=new THREE.WebGLLights();this.info.programs=k.programs;var A=new THREE.WebGLBufferRenderer(aH,b,aV);var o=new THREE.WebGLIndexedBufferRenderer(aH,b,aV);function aT(){return aC===null?au:1}function F(bd,bc,ba,bb){if(a5===true){bd*=bb;bc*=bb;ba*=bb}a6.clearColor(bd,bc,ba,bb)}function aL(){a6.init();a6.scissor(X.copy(N).multiplyScalar(au));a6.viewport(a2.copy(aj).multiplyScalar(au));F(O.r,O.g,O.b,aG)}function ax(){D=null;I=null;L="";ak=-1;a6.reset()}aL();this.context=aH;this.capabilities=aa;this.extensions=b;this.properties=af;this.state=a6;var r=new THREE.WebGLShadowMap(this,t,ar);this.shadowMap=r;var aB=new THREE.SpritePlugin(this,ah);var a8=new THREE.LensFlarePlugin(this,aW);this.getContext=function(){return aH};this.getContextAttributes=function(){return aH.getContextAttributes()};this.forceContextLoss=function(){b.get("WEBGL_lose_context").loseContext()};this.getMaxAnisotropy=(function(){var bb;return function ba(){if(bb!==undefined){return bb}var bc=b.get("EXT_texture_filter_anisotropic");if(bc!==null){bb=aH.getParameter(bc.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else{bb=0}return bb}})();this.getPrecision=function(){return aa.precision};this.getPixelRatio=function(){return au};this.setPixelRatio=function(ba){if(ba===undefined){return}au=ba;this.setSize(aj.z,aj.w,false)};this.getSize=function(){return{width:ay,height:K}};this.setSize=function(bb,ba,bc){ay=bb;K=ba;f.width=bb*au;f.height=ba*au;if(bc!==false){f.style.width=bb+"px";f.style.height=ba+"px"}this.setViewport(0,0,bb,ba)};this.setViewport=function(bb,bd,bc,ba){a6.viewport(aj.set(bb,bd,bc,ba))};this.setScissor=function(bb,bd,bc,ba){a6.scissor(N.set(bb,bd,bc,ba))};this.setScissorTest=function(ba){W=ba;a6.setScissorTest(W)};this.getClearColor=function(){return O};this.setClearColor=function(ba,bb){O.set(ba);aG=bb!==undefined?bb:1;F(O.r,O.g,O.b,aG)};this.getClearAlpha=function(){return aG};this.setClearAlpha=function(ba){aG=ba;F(O.r,O.g,O.b,aG)};this.clear=function(ba,bd,bb){var bc=0;if(ba===undefined||ba){bc|=aH.COLOR_BUFFER_BIT}if(bd===undefined||bd){bc|=aH.DEPTH_BUFFER_BIT}if(bb===undefined||bb){bc|=aH.STENCIL_BUFFER_BIT}aH.clear(bc)};this.clearColor=function(){this.clear(true,false,false)};this.clearDepth=function(){this.clear(false,true,false)};this.clearStencil=function(){this.clear(false,false,true)};this.clearTarget=function(bc,ba,bd,bb){this.setRenderTarget(bc);this.clear(ba,bd,bb)};this.resetGLState=ax;this.dispose=function(){f.removeEventListener("webglcontextlost",n,false)};function n(ba){ba.preventDefault();ax();aL();af.clear()}function U(bb){var ba=bb.target;ba.removeEventListener("dispose",U);ao(ba);an.textures--}function a1(ba){var bb=ba.target;bb.removeEventListener("dispose",a1);M(bb);an.textures--}function a3(bb){var ba=bb.target;ba.removeEventListener("dispose",a3);j(ba)}function ao(ba){var bb=af.get(ba);if(ba.image&&bb.__image__webglTextureCube){aH.deleteTexture(bb.__image__webglTextureCube)}else{if(bb.__webglInit===undefined){return}aH.deleteTexture(bb.__webglTexture)}af.remove(ba)}function M(bd){var ba=af.get(bd);var bc=af.get(bd.texture);if(!bd||bc.__webglTexture===undefined){return}aH.deleteTexture(bc.__webglTexture);if(bd instanceof THREE.WebGLRenderTargetCube){for(var bb=0;bb<6;bb++){aH.deleteFramebuffer(ba.__webglFramebuffer[bb]);aH.deleteRenderbuffer(ba.__webglDepthbuffer[bb])}}else{aH.deleteFramebuffer(ba.__webglFramebuffer);aH.deleteRenderbuffer(ba.__webglDepthbuffer)}af.remove(bd.texture);af.remove(bd)}function j(ba){B(ba);af.remove(ba)}function B(bb){var ba=af.get(bb).program;bb.program=undefined;if(ba!==undefined){k.releaseProgram(ba)}}this.renderBufferImmediate=function(bb,bf,bj){a6.initAttributes();var bk=af.get(bb);if(bb.hasPositions&&!bk.position){bk.position=aH.createBuffer()}if(bb.hasNormals&&!bk.normal){bk.normal=aH.createBuffer()}if(bb.hasUvs&&!bk.uv){bk.uv=aH.createBuffer()}if(bb.hasColors&&!bk.color){bk.color=aH.createBuffer()}var bc=bf.getAttributes();if(bb.hasPositions){aH.bindBuffer(aH.ARRAY_BUFFER,bk.position);aH.bufferData(aH.ARRAY_BUFFER,bb.positionArray,aH.DYNAMIC_DRAW);a6.enableAttribute(bc.position);aH.vertexAttribPointer(bc.position,3,aH.FLOAT,false,0,0)}if(bb.hasNormals){aH.bindBuffer(aH.ARRAY_BUFFER,bk.normal);if(bj.type!=="MeshPhongMaterial"&&bj.type!=="MeshStandardMaterial"&&bj.shading===THREE.FlatShading){for(var be=0,ba=bb.count*3;be<ba;be+=9){var bi=bb.normalArray;var bh=(bi[be+0]+bi[be+3]+bi[be+6])/3;var bg=(bi[be+1]+bi[be+4]+bi[be+7])/3;var bd=(bi[be+2]+bi[be+5]+bi[be+8])/3;bi[be+0]=bh;bi[be+1]=bg;bi[be+2]=bd;bi[be+3]=bh;bi[be+4]=bg;bi[be+5]=bd;bi[be+6]=bh;bi[be+7]=bg;bi[be+8]=bd}}aH.bufferData(aH.ARRAY_BUFFER,bb.normalArray,aH.DYNAMIC_DRAW);a6.enableAttribute(bc.normal);aH.vertexAttribPointer(bc.normal,3,aH.FLOAT,false,0,0)}if(bb.hasUvs&&bj.map){aH.bindBuffer(aH.ARRAY_BUFFER,bk.uv);aH.bufferData(aH.ARRAY_BUFFER,bb.uvArray,aH.DYNAMIC_DRAW);a6.enableAttribute(bc.uv);aH.vertexAttribPointer(bc.uv,2,aH.FLOAT,false,0,0)}if(bb.hasColors&&bj.vertexColors!==THREE.NoColors){aH.bindBuffer(aH.ARRAY_BUFFER,bk.color);aH.bufferData(aH.ARRAY_BUFFER,bb.colorArray,aH.DYNAMIC_DRAW);a6.enableAttribute(bc.color);aH.vertexAttribPointer(bc.color,3,aH.FLOAT,false,0,0)}a6.disableUnusedAttributes();aH.drawArrays(aH.TRIANGLES,0,bb.count);bb.count=0};this.renderBufferDirect=function(bu,bb,bf,bn,bC,bj){E(bn);var bk=aA(bu,bb,bn,bC);var bo=false;var bs=bf.id+"_"+bk.id+"_"+bn.wireframe;if(bs!==L){L=bs;bo=true}var bv=bC.morphTargetInfluences;if(bv!==undefined){var bl=[];for(var bt=0,bq=bv.length;bt<bq;bt++){var br=bv[bt];bl.push([br,bt])}bl.sort(P);if(bl.length>8){bl.length=8}var bh=bf.morphAttributes;for(var bt=0,bq=bl.length;bt<bq;bt++){var br=bl[bt];ac[bt]=br[0];if(br[0]!==0){var bg=br[1];if(bn.morphTargets===true&&bh.position){bf.addAttribute("morphTarget"+bt,bh.position[bg])}if(bn.morphNormals===true&&bh.normal){bf.addAttribute("morphNormal"+bt,bh.normal[bg])}}else{if(bn.morphTargets===true){bf.removeAttribute("morphTarget"+bt)}if(bn.morphNormals===true){bf.removeAttribute("morphNormal"+bt)}}}var by=bk.getUniforms();if(by.morphTargetInfluences!==null){aH.uniform1fv(by.morphTargetInfluences,ac)}bo=true}var bg=bf.index;var bB=bf.attributes.position;if(bn.wireframe===true){bg=ar.getWireframeAttribute(bf)}var bp;if(bg!==null){bp=o;bp.setIndex(bg)}else{bp=A}if(bo){p(bn,bk,bf);if(bg!==null){aH.bindBuffer(aH.ELEMENT_ARRAY_BUFFER,ar.getAttributeBuffer(bg))}}var bx=0;var bA=Infinity;if(bg!==null){bA=bg.count}else{if(bB!==undefined){bA=bB.count}}var bw=bf.drawRange.start;var bz=bf.drawRange.count;var bc=bj!==null?bj.start:0;var be=bj!==null?bj.count:Infinity;var bi=Math.max(bx,bw,bc);var bd=Math.min(bx+bA,bw+bz,bc+be)-1;var bm=Math.max(0,bd-bi+1);if(bC instanceof THREE.Mesh){if(bn.wireframe===true){a6.setLineWidth(bn.wireframeLinewidth*aT());bp.setMode(aH.LINES)}else{switch(bC.drawMode){case THREE.TrianglesDrawMode:bp.setMode(aH.TRIANGLES);break;case THREE.TriangleStripDrawMode:bp.setMode(aH.TRIANGLE_STRIP);break;case THREE.TriangleFanDrawMode:bp.setMode(aH.TRIANGLE_FAN);break}}}else{if(bC instanceof THREE.Line){var ba=bn.linewidth;if(ba===undefined){ba=1}a6.setLineWidth(ba*aT());if(bC instanceof THREE.LineSegments){bp.setMode(aH.LINES)}else{bp.setMode(aH.LINE_STRIP)}}else{if(bC instanceof THREE.Points){bp.setMode(aH.POINTS)}}}if(bf instanceof THREE.InstancedBufferGeometry&&bf.maxInstancedCount>0){bp.renderInstances(bf,bi,bm)}else{bp.render(bi,bm)}};function p(bk,bi,bl,bo){var bn;if(bl instanceof THREE.InstancedBufferGeometry){bn=b.get("ANGLE_instanced_arrays");if(bn===null){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}if(bo===undefined){bo=0}a6.initAttributes();var bj=bl.attributes;var bd=bi.getAttributes();var bc=bk.defaultAttributeValues;for(var bb in bd){var bh=bd[bb];if(bh>=0){var bq=bj[bb];if(bq!==undefined){var bp=bq.itemSize;var bf=ar.getAttributeBuffer(bq);if(bq instanceof THREE.InterleavedBufferAttribute){var bg=bq.data;var ba=bg.stride;var be=bq.offset;if(bg instanceof THREE.InstancedInterleavedBuffer){a6.enableAttributeAndDivisor(bh,bg.meshPerAttribute,bn);if(bl.maxInstancedCount===undefined){bl.maxInstancedCount=bg.meshPerAttribute*bg.count}}else{a6.enableAttribute(bh)}aH.bindBuffer(aH.ARRAY_BUFFER,bf);aH.vertexAttribPointer(bh,bp,aH.FLOAT,false,ba*bg.array.BYTES_PER_ELEMENT,(bo*ba+be)*bg.array.BYTES_PER_ELEMENT)}else{if(bq instanceof THREE.InstancedBufferAttribute){a6.enableAttributeAndDivisor(bh,bq.meshPerAttribute,bn);if(bl.maxInstancedCount===undefined){bl.maxInstancedCount=bq.meshPerAttribute*bq.count}}else{a6.enableAttribute(bh)}aH.bindBuffer(aH.ARRAY_BUFFER,bf);aH.vertexAttribPointer(bh,bp,aH.FLOAT,false,0,bo*bp*4)}}else{if(bc!==undefined){var bm=bc[bb];if(bm!==undefined){switch(bm.length){case 2:aH.vertexAttrib2fv(bh,bm);break;case 3:aH.vertexAttrib3fv(bh,bm);break;case 4:aH.vertexAttrib4fv(bh,bm);break;default:aH.vertexAttrib1fv(bh,bm)}}}}}}a6.disableUnusedAttributes()}function P(bb,ba){return Math.abs(ba[0])-Math.abs(bb[0])}function av(bb,ba){if(bb.object.renderOrder!==ba.object.renderOrder){return bb.object.renderOrder-ba.object.renderOrder}else{if(bb.material.id!==ba.material.id){return bb.material.id-ba.material.id}else{if(bb.z!==ba.z){return bb.z-ba.z}else{return bb.id-ba.id}}}}function g(bb,ba){if(bb.object.renderOrder!==ba.object.renderOrder){return bb.object.renderOrder-ba.object.renderOrder}if(bb.z!==ba.z){return ba.z-bb.z}else{return bb.id-ba.id}}this.render=function(bf,bb,be,bg){if(bb instanceof THREE.Camera===false){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var bd=bf.fog;L="";ak=-1;I=null;if(bf.autoUpdate===true){bf.updateMatrixWorld()}if(bb.parent===null){bb.updateMatrixWorld()}bb.matrixWorldInverse.getInverse(bb.matrixWorld);at.multiplyMatrices(bb.projectionMatrix,bb.matrixWorldInverse);aD.setFromMatrix(at);i.length=0;aQ=-1;ap=-1;ah.length=0;aW.length=0;m(bf,bb);h.length=aQ+1;aq.length=ap+1;if(H.sortObjects===true){h.sort(av);aq.sort(g)}aR(i,bb);r.render(bf,bb);aV.calls=0;aV.vertices=0;aV.faces=0;aV.points=0;if(be===undefined){be=null}this.setRenderTarget(be);if(this.autoClear||bg){this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil)}if(bf.overrideMaterial){var ba=bf.overrideMaterial;ai(h,bb,bd,ba);ai(aq,bb,bd,ba)}else{a6.setBlending(THREE.NoBlending);ai(h,bb,bd);ai(aq,bb,bd)}aB.render(bf,bb);a8.render(bf,bb,a2);if(be){var bc=be.texture;if(bc.generateMipmaps&&T(be)&&bc.minFilter!==THREE.NearestFilter&&bc.minFilter!==THREE.LinearFilter){c(be)}}a6.setDepthTest(true);a6.setDepthWrite(true);a6.setColorWrite(true)};function aP(bb,bg,bc,bf,be){var bh,ba;if(bc.transparent){bh=aq;ba=++ap}else{bh=h;ba=++aQ}var bd=bh[ba];if(bd!==undefined){bd.id=bb.id;bd.object=bb;bd.geometry=bg;bd.material=bc;bd.z=s.z;bd.group=be}else{bd={id:bb.id,object:bb,geometry:bg,material:bc,z:s.z,group:be};bh.push(bd)}}function m(be,bg){if(be.visible===false){return}if(be.layers.test(bg.layers)){if(be instanceof THREE.Light){i.push(be)}else{if(be instanceof THREE.Sprite){if(be.frustumCulled===false||aD.intersectsObject(be)===true){ah.push(be)}}else{if(be instanceof THREE.LensFlare){aW.push(be)}else{if(be instanceof THREE.ImmediateRenderObject){if(H.sortObjects===true){s.setFromMatrixPosition(be.matrixWorld);s.applyProjection(at)}aP(be,null,be.material,s.z,null)}else{if(be instanceof THREE.Mesh||be instanceof THREE.Line||be instanceof THREE.Points){if(be instanceof THREE.SkinnedMesh){be.skeleton.update()}if(be.frustumCulled===false||aD.intersectsObject(be)===true){var bh=be.material;if(bh.visible===true){if(H.sortObjects===true){s.setFromMatrixPosition(be.matrixWorld);s.applyProjection(at)}var bi=ar.update(be);if(bh instanceof THREE.MultiMaterial){var bb=bi.groups;var bk=bh.materials;for(var bf=0,bc=bb.length;bf<bc;bf++){var bj=bb[bf];var bd=bk[bj.materialIndex];if(bd.visible===true){aP(be,bi,bd,s.z,bj)}}}else{aP(be,bi,bh,s.z,null)}}}}}}}}}var ba=be.children;for(var bf=0,bc=ba.length;bf<bc;bf++){m(ba[bf],bg)}}function ai(ba,bi,bb,bj){for(var bg=0,bc=ba.length;bg<bc;bg++){var be=ba[bg];var bd=be.object;var bk=be.geometry;var bh=bj===undefined?be.material:bj;var bl=be.group;bd.modelViewMatrix.multiplyMatrices(bi.matrixWorldInverse,bd.matrixWorld);bd.normalMatrix.getNormalMatrix(bd.modelViewMatrix);if(bd instanceof THREE.ImmediateRenderObject){E(bh);var bf=aA(bi,bb,bh,bd);L="";bd.render(function(bm){H.renderBufferImmediate(bm,bf,bh)})}else{H.renderBufferDirect(bi,bb,bk,bh,bd,bl)}}}function ab(bk,bb,br){var be=af.get(bk);var bf=k.getParameters(bk,t,bb,br);var bd=k.getProgramCode(bk,bf);var bg=be.program;var bi=true;if(bg===undefined){bk.addEventListener("dispose",a3)}else{if(bg.code!==bd){B(bk)}else{if(bf.shaderID!==undefined){return}else{bi=false}}}if(bi){if(bf.shaderID){var ba=THREE.ShaderLib[bf.shaderID];be.__webglShader={name:bk.type,uniforms:THREE.UniformsUtils.clone(ba.uniforms),vertexShader:ba.vertexShader,fragmentShader:ba.fragmentShader}}else{be.__webglShader={name:bk.type,uniforms:bk.uniforms,vertexShader:bk.vertexShader,fragmentShader:bk.fragmentShader}}bk.__webglShader=be.__webglShader;bg=k.acquireProgram(bk,bf,bd);be.program=bg;bk.program=bg}var bh=bg.getAttributes();if(bk.morphTargets){bk.numSupportedMorphTargets=0;for(var bn=0;bn<H.maxMorphTargets;bn++){if(bh["morphTarget"+bn]>=0){bk.numSupportedMorphTargets++}}}if(bk.morphNormals){bk.numSupportedMorphNormals=0;for(var bn=0;bn<H.maxMorphNormals;bn++){if(bh["morphNormal"+bn]>=0){bk.numSupportedMorphNormals++}}}be.uniformsList=[];var bq=be.__webglShader.uniforms,bl=be.program.getUniforms();for(var bj in bq){var bc=bl[bj];if(bc){be.uniformsList.push([be.__webglShader.uniforms[bj],bc])}}if(bk instanceof THREE.MeshPhongMaterial||bk instanceof THREE.MeshLambertMaterial||bk instanceof THREE.MeshStandardMaterial||bk.lights){be.lightsHash=t.hash;bq.ambientLightColor.value=t.ambient;bq.directionalLights.value=t.directional;bq.spotLights.value=t.spot;bq.pointLights.value=t.point;bq.hemisphereLights.value=t.hemi;bq.directionalShadowMap.value=t.directionalShadowMap;bq.directionalShadowMatrix.value=t.directionalShadowMatrix;bq.spotShadowMap.value=t.spotShadowMap;bq.spotShadowMatrix.value=t.spotShadowMatrix;bq.pointShadowMap.value=t.pointShadowMap;bq.pointShadowMatrix.value=t.pointShadowMatrix}be.hasDynamicUniforms=false;for(var bm=0,bo=be.uniformsList.length;bm<bo;bm++){var bp=be.uniformsList[bm][0];if(bp.dynamic===true){be.hasDynamicUniforms=true;break}}}function E(ba){R(ba);if(ba.transparent===true){a6.setBlending(ba.blending,ba.blendEquation,ba.blendSrc,ba.blendDst,ba.blendEquationAlpha,ba.blendSrcAlpha,ba.blendDstAlpha)}else{a6.setBlending(THREE.NoBlending)}a6.setDepthFunc(ba.depthFunc);a6.setDepthTest(ba.depthTest);a6.setDepthWrite(ba.depthWrite);a6.setColorWrite(ba.colorWrite);a6.setPolygonOffset(ba.polygonOffset,ba.polygonOffsetFactor,ba.polygonOffsetUnits)}function R(ba){ba.side!==THREE.DoubleSide?a6.enable(aH.CULL_FACE):a6.disable(aH.CULL_FACE);a6.setFlipSided(ba.side===THREE.BackSide)}function aA(bh,ba,bi,be){aY=0;var bb=af.get(bi);if(bb.program===undefined){bi.needsUpdate=true}if(bb.lightsHash!==undefined&&bb.lightsHash!==t.hash){bi.needsUpdate=true}if(bi.needsUpdate){ab(bi,ba,be);bi.needsUpdate=false}var bd=false;var bg=false;var bc=false;var bf=bb.program,bl=bf.getUniforms(),bj=bb.__webglShader.uniforms;if(bf.id!==D){aH.useProgram(bf.program);D=bf.id;bd=true;bg=true;bc=true}if(bi.id!==ak){ak=bi.id;bg=true}if(bd||bh!==I){aH.uniformMatrix4fv(bl.projectionMatrix,false,bh.projectionMatrix.elements);if(aa.logarithmicDepthBuffer){aH.uniform1f(bl.logDepthBufFC,2/(Math.log(bh.far+1)/Math.LN2))}if(bh!==I){I=bh;bg=true;bc=true}if(bi instanceof THREE.ShaderMaterial||bi instanceof THREE.MeshPhongMaterial||bi instanceof THREE.MeshStandardMaterial||bi.envMap){if(bl.cameraPosition!==undefined){s.setFromMatrixPosition(bh.matrixWorld);aH.uniform3f(bl.cameraPosition,s.x,s.y,s.z)}}if(bi instanceof THREE.MeshPhongMaterial||bi instanceof THREE.MeshLambertMaterial||bi instanceof THREE.MeshBasicMaterial||bi instanceof THREE.MeshStandardMaterial||bi instanceof THREE.ShaderMaterial||bi.skinning){if(bl.viewMatrix!==undefined){aH.uniformMatrix4fv(bl.viewMatrix,false,bh.matrixWorldInverse.elements)}}}if(bi.skinning){if(be.bindMatrix&&bl.bindMatrix!==undefined){aH.uniformMatrix4fv(bl.bindMatrix,false,be.bindMatrix.elements)}if(be.bindMatrixInverse&&bl.bindMatrixInverse!==undefined){aH.uniformMatrix4fv(bl.bindMatrixInverse,false,be.bindMatrixInverse.elements)}if(aa.floatVertexTextures&&be.skeleton&&be.skeleton.useVertexTexture){if(bl.boneTexture!==undefined){var bk=G();aH.uniform1i(bl.boneTexture,bk);H.setTexture(be.skeleton.boneTexture,bk)}if(bl.boneTextureWidth!==undefined){aH.uniform1i(bl.boneTextureWidth,be.skeleton.boneTextureWidth)}if(bl.boneTextureHeight!==undefined){aH.uniform1i(bl.boneTextureHeight,be.skeleton.boneTextureHeight)}}else{if(be.skeleton&&be.skeleton.boneMatrices){if(bl.boneGlobalMatrices!==undefined){aH.uniformMatrix4fv(bl.boneGlobalMatrices,false,be.skeleton.boneMatrices)}}}}if(bg){if(bi instanceof THREE.MeshPhongMaterial||bi instanceof THREE.MeshLambertMaterial||bi instanceof THREE.MeshStandardMaterial||bi.lights){aS(bj,bc)}if(ba&&bi.fog){aI(bj,ba)}if(bi instanceof THREE.MeshBasicMaterial||bi instanceof THREE.MeshLambertMaterial||bi instanceof THREE.MeshPhongMaterial||bi instanceof THREE.MeshStandardMaterial){Y(bj,bi)}if(bi instanceof THREE.LineBasicMaterial){ae(bj,bi)}else{if(bi instanceof THREE.LineDashedMaterial){ae(bj,bi);aF(bj,bi)}else{if(bi instanceof THREE.PointsMaterial){ag(bj,bi)}else{if(bi instanceof THREE.MeshLambertMaterial){aO(bj,bi)}else{if(bi instanceof THREE.MeshPhongMaterial){ad(bj,bi)}else{if(bi instanceof THREE.MeshStandardMaterial){a0(bj,bi)}else{if(bi instanceof THREE.MeshDepthMaterial){bj.mNear.value=bh.near;bj.mFar.value=bh.far;bj.opacity.value=bi.opacity}else{if(bi instanceof THREE.MeshNormalMaterial){bj.opacity.value=bi.opacity}}}}}}}}aM(bb.uniformsList)}v(bl,be);if(bl.modelMatrix!==undefined){aH.uniformMatrix4fv(bl.modelMatrix,false,be.matrixWorld.elements)}if(bb.hasDynamicUniforms===true){aN(bb.uniformsList,be,bh)}return bf}function aN(bb,be,bg){var bh=[];for(var bd=0,bf=bb.length;bd<bf;bd++){var ba=bb[bd][0];var bc=ba.onUpdateCallback;if(bc!==undefined){bc.bind(ba)(be,bg);bh.push(bb[bd])}}aM(bh)}function Y(bb,bc){bb.opacity.value=bc.opacity;bb.diffuse.value=bc.color;if(bc.emissive){bb.emissive.value.copy(bc.emissive).multiplyScalar(bc.emissiveIntensity)}bb.map.value=bc.map;bb.specularMap.value=bc.specularMap;bb.alphaMap.value=bc.alphaMap;if(bc.aoMap){bb.aoMap.value=bc.aoMap;bb.aoMapIntensity.value=bc.aoMapIntensity}var ba;if(bc.map){ba=bc.map}else{if(bc.specularMap){ba=bc.specularMap}else{if(bc.displacementMap){ba=bc.displacementMap}else{if(bc.normalMap){ba=bc.normalMap}else{if(bc.bumpMap){ba=bc.bumpMap}else{if(bc.roughnessMap){ba=bc.roughnessMap}else{if(bc.metalnessMap){ba=bc.metalnessMap}else{if(bc.alphaMap){ba=bc.alphaMap}else{if(bc.emissiveMap){ba=bc.emissiveMap}}}}}}}}}if(ba!==undefined){if(ba instanceof THREE.WebGLRenderTarget){ba=ba.texture}var be=ba.offset;var bd=ba.repeat;bb.offsetRepeat.value.set(be.x,be.y,bd.x,bd.y)}bb.envMap.value=bc.envMap;bb.flipEnvMap.value=(bc.envMap instanceof THREE.WebGLRenderTargetCube)?1:-1;bb.reflectivity.value=bc.reflectivity;bb.refractionRatio.value=bc.refractionRatio}function ae(ba,bb){ba.diffuse.value=bb.color;ba.opacity.value=bb.opacity}function aF(ba,bb){ba.dashSize.value=bb.dashSize;ba.totalSize.value=bb.dashSize+bb.gapSize;ba.scale.value=bb.scale}function ag(ba,bb){ba.diffuse.value=bb.color;ba.opacity.value=bb.opacity;ba.size.value=bb.size*au;ba.scale.value=f.clientHeight/2;ba.map.value=bb.map;if(bb.map!==null){var bd=bb.map.offset;var bc=bb.map.repeat;ba.offsetRepeat.value.set(bd.x,bd.y,bc.x,bc.y)}}function aI(ba,bb){ba.fogColor.value=bb.color;if(bb instanceof THREE.Fog){ba.fogNear.value=bb.near;ba.fogFar.value=bb.far}else{if(bb instanceof THREE.FogExp2){ba.fogDensity.value=bb.density}}}function aO(ba,bb){if(bb.lightMap){ba.lightMap.value=bb.lightMap;ba.lightMapIntensity.value=bb.lightMapIntensity}if(bb.emissiveMap){ba.emissiveMap.value=bb.emissiveMap}}function ad(ba,bb){ba.specular.value=bb.specular;ba.shininess.value=Math.max(bb.shininess,0.0001);if(bb.lightMap){ba.lightMap.value=bb.lightMap;ba.lightMapIntensity.value=bb.lightMapIntensity}if(bb.emissiveMap){ba.emissiveMap.value=bb.emissiveMap}if(bb.bumpMap){ba.bumpMap.value=bb.bumpMap;ba.bumpScale.value=bb.bumpScale}if(bb.normalMap){ba.normalMap.value=bb.normalMap;ba.normalScale.value.copy(bb.normalScale)}if(bb.displacementMap){ba.displacementMap.value=bb.displacementMap;ba.displacementScale.value=bb.displacementScale;ba.displacementBias.value=bb.displacementBias}}function a0(ba,bb){ba.roughness.value=bb.roughness;ba.metalness.value=bb.metalness;if(bb.roughnessMap){ba.roughnessMap.value=bb.roughnessMap}if(bb.metalnessMap){ba.metalnessMap.value=bb.metalnessMap}if(bb.lightMap){ba.lightMap.value=bb.lightMap;ba.lightMapIntensity.value=bb.lightMapIntensity}if(bb.emissiveMap){ba.emissiveMap.value=bb.emissiveMap}if(bb.bumpMap){ba.bumpMap.value=bb.bumpMap;ba.bumpScale.value=bb.bumpScale}if(bb.normalMap){ba.normalMap.value=bb.normalMap;ba.normalScale.value.copy(bb.normalScale)}if(bb.displacementMap){ba.displacementMap.value=bb.displacementMap;ba.displacementScale.value=bb.displacementScale;ba.displacementBias.value=bb.displacementBias}if(bb.envMap){ba.envMapIntensity.value=bb.envMapIntensity}}function aS(ba,bb){ba.ambientLightColor.needsUpdate=bb;ba.directionalLights.needsUpdate=bb;ba.pointLights.needsUpdate=bb;ba.spotLights.needsUpdate=bb;ba.hemisphereLights.needsUpdate=bb}function v(ba,bb){aH.uniformMatrix4fv(ba.modelViewMatrix,false,bb.modelViewMatrix.elements);if(ba.normalMatrix){aH.uniformMatrix3fv(ba.normalMatrix,false,bb.normalMatrix.elements)}}function G(){var ba=aY;if(ba>=aa.maxTextures){console.warn("WebGLRenderer: trying to use "+ba+" texture units while this GPU supports only "+aa.maxTextures)}aY+=1;return ba}function aM(br){var bh,be;for(var bn=0,bp=br.length;bn<bp;bn++){var bq=br[bn][0];if(bq.needsUpdate===false){continue}var bd=bq.type;var bl=bq.value;var ba=br[bn][1];switch(bd){case"1i":aH.uniform1i(ba,bl);break;case"1f":aH.uniform1f(ba,bl);break;case"2f":aH.uniform2f(ba,bl[0],bl[1]);break;case"3f":aH.uniform3f(ba,bl[0],bl[1],bl[2]);break;case"4f":aH.uniform4f(ba,bl[0],bl[1],bl[2],bl[3]);break;case"1iv":aH.uniform1iv(ba,bl);break;case"3iv":aH.uniform3iv(ba,bl);break;case"1fv":aH.uniform1fv(ba,bl);break;case"2fv":aH.uniform2fv(ba,bl);break;case"3fv":aH.uniform3fv(ba,bl);break;case"4fv":aH.uniform4fv(ba,bl);break;case"Matrix2fv":aH.uniformMatrix2fv(ba,false,bl);break;case"Matrix3fv":aH.uniformMatrix3fv(ba,false,bl);break;case"Matrix4fv":aH.uniformMatrix4fv(ba,false,bl);break;case"i":aH.uniform1i(ba,bl);break;case"f":aH.uniform1f(ba,bl);break;case"v2":aH.uniform2f(ba,bl.x,bl.y);break;case"v3":aH.uniform3f(ba,bl.x,bl.y,bl.z);break;case"v4":aH.uniform4f(ba,bl.x,bl.y,bl.z,bl.w);break;case"c":aH.uniform3f(ba,bl.r,bl.g,bl.b);break;case"sa":for(var bo=0;bo<bl.length;bo++){for(var bi in bq.properties){var bf=bq.properties[bi];var bb=ba[bo][bi];var bc=bl[bo][bi];switch(bf.type){case"i":aH.uniform1i(bb,bc);break;case"f":aH.uniform1f(bb,bc);break;case"v2":aH.uniform2f(bb,bc.x,bc.y);break;case"v3":aH.uniform3f(bb,bc.x,bc.y,bc.z);break;case"v4":aH.uniform4f(bb,bc.x,bc.y,bc.z,bc.w);break;case"c":aH.uniform3f(bb,bc.r,bc.g,bc.b);break;case"m4":aH.uniformMatrix4fv(bb,false,bc.elements);break}}}break;case"iv1":aH.uniform1iv(ba,bl);break;case"iv":aH.uniform3iv(ba,bl);break;case"fv1":aH.uniform1fv(ba,bl);break;case"fv":aH.uniform3fv(ba,bl);break;case"v2v":if(bq._array===undefined){bq._array=new Float32Array(2*bl.length)}for(var bo=0,bm=0,bg=bl.length;bo<bg;bo++,bm+=2){bq._array[bm+0]=bl[bo].x;bq._array[bm+1]=bl[bo].y}aH.uniform2fv(ba,bq._array);break;case"v3v":if(bq._array===undefined){bq._array=new Float32Array(3*bl.length)}for(var bo=0,bk=0,bg=bl.length;bo<bg;bo++,bk+=3){bq._array[bk+0]=bl[bo].x;bq._array[bk+1]=bl[bo].y;bq._array[bk+2]=bl[bo].z}aH.uniform3fv(ba,bq._array);break;case"v4v":if(bq._array===undefined){bq._array=new Float32Array(4*bl.length)}for(var bo=0,bj=0,bg=bl.length;bo<bg;bo++,bj+=4){bq._array[bj+0]=bl[bo].x;bq._array[bj+1]=bl[bo].y;bq._array[bj+2]=bl[bo].z;bq._array[bj+3]=bl[bo].w}aH.uniform4fv(ba,bq._array);break;case"m2":aH.uniformMatrix2fv(ba,false,bl.elements);break;case"m3":aH.uniformMatrix3fv(ba,false,bl.elements);break;case"m3v":if(bq._array===undefined){bq._array=new Float32Array(9*bl.length)}for(var bo=0,bg=bl.length;bo<bg;bo++){bl[bo].flattenToArrayOffset(bq._array,bo*9)}aH.uniformMatrix3fv(ba,false,bq._array);break;case"m4":aH.uniformMatrix4fv(ba,false,bl.elements);break;case"m4v":if(bq._array===undefined){bq._array=new Float32Array(16*bl.length)}for(var bo=0,bg=bl.length;bo<bg;bo++){bl[bo].flattenToArrayOffset(bq._array,bo*16)}aH.uniformMatrix4fv(ba,false,bq._array);break;case"t":bh=bl;be=G();aH.uniform1i(ba,be);if(!bh){continue}if(bh instanceof THREE.CubeTexture||(Array.isArray(bh.image)&&bh.image.length===6)){l(bh,be)}else{if(bh instanceof THREE.WebGLRenderTargetCube){aZ(bh.texture,be)}else{if(bh instanceof THREE.WebGLRenderTarget){H.setTexture(bh.texture,be)}else{H.setTexture(bh,be)}}}break;case"tv":if(bq._array===undefined){bq._array=[]}for(var bo=0,bg=bq.value.length;bo<bg;bo++){bq._array[bo]=G()}aH.uniform1iv(ba,bq._array);for(var bo=0,bg=bq.value.length;bo<bg;bo++){bh=bq.value[bo];be=bq._array[bo];if(!bh){continue}if(bh instanceof THREE.CubeTexture||(bh.image instanceof Array&&bh.image.length===6)){l(bh,be)}else{if(bh instanceof THREE.WebGLRenderTarget){H.setTexture(bh.texture,be)}else{if(bh instanceof THREE.WebGLRenderTargetCube){aZ(bh.texture,be)}else{H.setTexture(bh,be)}}}}break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+bd)}}}function aR(bp,bl){var bj,bg,ba,bh=0,bm=0,bo=0,bk,bd,bc,bb=bl.matrixWorldInverse,bi=0,bq=0,br=0,be=0,bf=0;t.shadowsPointLight=0;for(bj=0,bg=bp.length;bj<bg;bj++){ba=bp[bj];bk=ba.color;bd=ba.intensity;bc=ba.distance;if(ba instanceof THREE.AmbientLight){bh+=bk.r*bd;bm+=bk.g*bd;bo+=bk.b*bd}else{if(ba instanceof THREE.DirectionalLight){var bn=V.get(ba);bn.color.copy(ba.color).multiplyScalar(ba.intensity);bn.direction.setFromMatrixPosition(ba.matrixWorld);s.setFromMatrixPosition(ba.target.matrixWorld);bn.direction.sub(s);bn.direction.transformDirection(bb);bn.shadow=ba.castShadow;if(ba.castShadow){bn.shadowBias=ba.shadow.bias;bn.shadowRadius=ba.shadow.radius;bn.shadowMapSize=ba.shadow.mapSize;t.shadows[bf++]=ba}t.directionalShadowMap[bi]=ba.shadow.map;t.directionalShadowMatrix[bi]=ba.shadow.matrix;t.directional[bi++]=bn}else{if(ba instanceof THREE.SpotLight){var bn=V.get(ba);bn.position.setFromMatrixPosition(ba.matrixWorld);bn.position.applyMatrix4(bb);bn.color.copy(bk).multiplyScalar(bd);bn.distance=bc;bn.direction.setFromMatrixPosition(ba.matrixWorld);s.setFromMatrixPosition(ba.target.matrixWorld);bn.direction.sub(s);bn.direction.transformDirection(bb);bn.angleCos=Math.cos(ba.angle);bn.penumbra=Math.cos(ba.angle)*ba.penumbra;bn.decay=(ba.distance===0)?0:ba.decay;bn.shadow=ba.castShadow;if(ba.castShadow){bn.shadowBias=ba.shadow.bias;bn.shadowRadius=ba.shadow.radius;bn.shadowMapSize=ba.shadow.mapSize;t.shadows[bf++]=ba}t.spotShadowMap[br]=ba.shadow.map;t.spotShadowMatrix[br]=ba.shadow.matrix;t.spot[br++]=bn}else{if(ba instanceof THREE.PointLight){var bn=V.get(ba);bn.position.setFromMatrixPosition(ba.matrixWorld);bn.position.applyMatrix4(bb);bn.color.copy(ba.color).multiplyScalar(ba.intensity);bn.distance=ba.distance;bn.decay=(ba.distance===0)?0:ba.decay;bn.shadow=ba.castShadow;if(ba.castShadow){bn.shadowBias=ba.shadow.bias;bn.shadowRadius=ba.shadow.radius;bn.shadowMapSize=ba.shadow.mapSize;t.shadows[bf++]=ba}t.pointShadowMap[bq]=ba.shadow.map;if(t.pointShadowMatrix[bq]===undefined){t.pointShadowMatrix[bq]=new THREE.Matrix4()}s.setFromMatrixPosition(ba.matrixWorld).negate();t.pointShadowMatrix[bq].identity().setPosition(s);t.point[bq++]=bn}else{if(ba instanceof THREE.HemisphereLight){var bn=V.get(ba);bn.direction.setFromMatrixPosition(ba.matrixWorld);bn.direction.transformDirection(bb);bn.direction.normalize();bn.skyColor.copy(ba.color).multiplyScalar(bd);bn.groundColor.copy(ba.groundColor).multiplyScalar(bd);t.hemi[be++]=bn}}}}}}t.ambient[0]=bh;t.ambient[1]=bm;t.ambient[2]=bo;t.directional.length=bi;t.spot.length=br;t.point.length=bq;t.hemi.length=be;t.shadows.length=bf;t.hash=bi+","+bq+","+br+","+be+","+bf}this.setFaceCulling=function(bb,ba){if(bb===THREE.CullFaceNone){a6.disable(aH.CULL_FACE)}else{if(ba===THREE.FrontFaceDirectionCW){aH.frontFace(aH.CW)}else{aH.frontFace(aH.CCW)}if(bb===THREE.CullFaceBack){aH.cullFace(aH.BACK)}else{if(bb===THREE.CullFaceFront){aH.cullFace(aH.FRONT)}else{aH.cullFace(aH.FRONT_AND_BACK)}}a6.enable(aH.CULL_FACE)}};function Q(ba,bb,bc){var bd;if(bc){aH.texParameteri(ba,aH.TEXTURE_WRAP_S,al(bb.wrapS));aH.texParameteri(ba,aH.TEXTURE_WRAP_T,al(bb.wrapT));aH.texParameteri(ba,aH.TEXTURE_MAG_FILTER,al(bb.magFilter));aH.texParameteri(ba,aH.TEXTURE_MIN_FILTER,al(bb.minFilter))}else{aH.texParameteri(ba,aH.TEXTURE_WRAP_S,aH.CLAMP_TO_EDGE);aH.texParameteri(ba,aH.TEXTURE_WRAP_T,aH.CLAMP_TO_EDGE);if(bb.wrapS!==THREE.ClampToEdgeWrapping||bb.wrapT!==THREE.ClampToEdgeWrapping){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",bb)}aH.texParameteri(ba,aH.TEXTURE_MAG_FILTER,am(bb.magFilter));aH.texParameteri(ba,aH.TEXTURE_MIN_FILTER,am(bb.minFilter));if(bb.minFilter!==THREE.NearestFilter&&bb.minFilter!==THREE.LinearFilter){console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",bb)}}bd=b.get("EXT_texture_filter_anisotropic");if(bd){if(bb.type===THREE.FloatType&&b.get("OES_texture_float_linear")===null){return}if(bb.type===THREE.HalfFloatType&&b.get("OES_texture_half_float_linear")===null){return}if(bb.anisotropy>1||af.get(bb).__currentAnisotropy){aH.texParameterf(ba,bd.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(bb.anisotropy,H.getMaxAnisotropy()));af.get(bb).__currentAnisotropy=bb.anisotropy}}}function C(bb,bh,bk){if(bb.__webglInit===undefined){bb.__webglInit=true;bh.addEventListener("dispose",U);bb.__webglTexture=aH.createTexture();an.textures++}a6.activeTexture(aH.TEXTURE0+bk);a6.bindTexture(aH.TEXTURE_2D,bb.__webglTexture);aH.pixelStorei(aH.UNPACK_FLIP_Y_WEBGL,bh.flipY);aH.pixelStorei(aH.UNPACK_PREMULTIPLY_ALPHA_WEBGL,bh.premultiplyAlpha);aH.pixelStorei(aH.UNPACK_ALIGNMENT,bh.unpackAlignment);var bf=u(bh.image,aa.maxTextureSize);if(a(bh)&&T(bf)===false){bf=q(bf)}var bi=T(bf),ba=al(bh.format),bd=al(bh.type);Q(aH.TEXTURE_2D,bh,bi);var bc,be=bh.mipmaps;if(bh instanceof THREE.DataTexture){if(be.length>0&&bi){for(var bg=0,bj=be.length;bg<bj;bg++){bc=be[bg];a6.texImage2D(aH.TEXTURE_2D,bg,ba,bc.width,bc.height,0,ba,bd,bc.data)}bh.generateMipmaps=false}else{a6.texImage2D(aH.TEXTURE_2D,0,ba,bf.width,bf.height,0,ba,bd,bf.data)}}else{if(bh instanceof THREE.CompressedTexture){for(var bg=0,bj=be.length;bg<bj;bg++){bc=be[bg];if(bh.format!==THREE.RGBAFormat&&bh.format!==THREE.RGBFormat){if(a6.getCompressedTextureFormats().indexOf(ba)>-1){a6.compressedTexImage2D(aH.TEXTURE_2D,bg,ba,bc.width,bc.height,0,bc.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()")}}else{a6.texImage2D(aH.TEXTURE_2D,bg,ba,bc.width,bc.height,0,ba,bd,bc.data)}}}else{if(be.length>0&&bi){for(var bg=0,bj=be.length;bg<bj;bg++){bc=be[bg];a6.texImage2D(aH.TEXTURE_2D,bg,ba,ba,bd,bc)}bh.generateMipmaps=false}else{a6.texImage2D(aH.TEXTURE_2D,0,ba,ba,bd,bf)}}}if(bh.generateMipmaps&&bi){aH.generateMipmap(aH.TEXTURE_2D)}bb.__version=bh.version;if(bh.onUpdate){bh.onUpdate(bh)}}this.setTexture=function(ba,bd){var bb=af.get(ba);if(ba.version>0&&bb.__version!==ba.version){var bc=ba.image;if(bc===undefined){console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",ba);return}if(bc.complete===false){console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",ba);return}C(bb,ba,bd);return}a6.activeTexture(aH.TEXTURE0+bd);a6.bindTexture(aH.TEXTURE_2D,bb.__webglTexture)};function u(bc,be){if(bc.width>be||bc.height>be){var bd=be/Math.max(bc.width,bc.height);var ba=document.createElement("canvas");ba.width=Math.floor(bc.width*bd);ba.height=Math.floor(bc.height*bd);var bb=ba.getContext("2d");bb.drawImage(bc,0,0,bc.width,bc.height,0,0,ba.width,ba.height);console.warn("THREE.WebGLRenderer: image is too big ("+bc.width+"x"+bc.height+"). Resized to "+ba.width+"x"+ba.height,bc);return ba}return bc}function T(ba){return THREE.Math.isPowerOfTwo(ba.width)&&THREE.Math.isPowerOfTwo(ba.height)}function a(ba){if(ba.wrapS!==THREE.ClampToEdgeWrapping||ba.wrapT!==THREE.ClampToEdgeWrapping){return true}if(ba.minFilter!==THREE.NearestFilter&&ba.minFilter!==THREE.LinearFilter){return true}return false}function q(bc){if(bc instanceof HTMLImageElement||bc instanceof HTMLCanvasElement){var ba=document.createElement("canvas");ba.width=THREE.Math.nearestPowerOfTwo(bc.width);ba.height=THREE.Math.nearestPowerOfTwo(bc.height);var bb=ba.getContext("2d");bb.drawImage(bc,0,0,ba.width,ba.height);console.warn("THREE.WebGLRenderer: image is not power of two ("+bc.width+"x"+bc.height+"). Resized to "+ba.width+"x"+ba.height,bc);return ba}return bc}function l(bm,bo){var bc=af.get(bm);if(bm.image.length===6){if(bm.version>0&&bc.__version!==bm.version){if(!bc.__image__webglTextureCube){bm.addEventListener("dispose",U);bc.__image__webglTextureCube=aH.createTexture();an.textures++}a6.activeTexture(aH.TEXTURE0+bo);a6.bindTexture(aH.TEXTURE_CUBE_MAP,bc.__image__webglTextureCube);aH.pixelStorei(aH.UNPACK_FLIP_Y_WEBGL,bm.flipY);var bf=bm instanceof THREE.CompressedTexture;var be=bm.image[0] instanceof THREE.DataTexture;var ba=[];for(var bl=0;bl<6;bl++){if(H.autoScaleCubemaps&&!bf&&!be){ba[bl]=u(bm.image[bl],aa.maxCubemapSize)}else{ba[bl]=be?bm.image[bl].image:bm.image[bl]}}var bi=ba[0],bn=T(bi),bb=al(bm.format),bg=al(bm.type);Q(aH.TEXTURE_CUBE_MAP,bm,bn);for(var bl=0;bl<6;bl++){if(!bf){if(be){a6.texImage2D(aH.TEXTURE_CUBE_MAP_POSITIVE_X+bl,0,bb,ba[bl].width,ba[bl].height,0,bb,bg,ba[bl].data)}else{a6.texImage2D(aH.TEXTURE_CUBE_MAP_POSITIVE_X+bl,0,bb,bb,bg,ba[bl])}}else{var bd,bh=ba[bl].mipmaps;for(var bj=0,bk=bh.length;bj<bk;bj++){bd=bh[bj];if(bm.format!==THREE.RGBAFormat&&bm.format!==THREE.RGBFormat){if(a6.getCompressedTextureFormats().indexOf(bb)>-1){a6.compressedTexImage2D(aH.TEXTURE_CUBE_MAP_POSITIVE_X+bl,bj,bb,bd.width,bd.height,0,bd.data)}else{console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()")}}else{a6.texImage2D(aH.TEXTURE_CUBE_MAP_POSITIVE_X+bl,bj,bb,bd.width,bd.height,0,bb,bg,bd.data)}}}}if(bm.generateMipmaps&&bn){aH.generateMipmap(aH.TEXTURE_CUBE_MAP)}bc.__version=bm.version;if(bm.onUpdate){bm.onUpdate(bm)}}else{a6.activeTexture(aH.TEXTURE0+bo);a6.bindTexture(aH.TEXTURE_CUBE_MAP,bc.__image__webglTextureCube)}}}function aZ(ba,bb){a6.activeTexture(aH.TEXTURE0+bb);a6.bindTexture(aH.TEXTURE_CUBE_MAP,af.get(ba).__webglTexture)}function S(bc,bb,be,ba){var bd=al(bb.texture.format);var bf=al(bb.texture.type);a6.texImage2D(ba,0,bd,bb.width,bb.height,0,bd,bf,null);aH.bindFramebuffer(aH.FRAMEBUFFER,bc);aH.framebufferTexture2D(aH.FRAMEBUFFER,be,ba,af.get(bb.texture).__webglTexture,0);aH.bindFramebuffer(aH.FRAMEBUFFER,null)}function aU(ba,bb){aH.bindRenderbuffer(aH.RENDERBUFFER,ba);if(bb.depthBuffer&&!bb.stencilBuffer){aH.renderbufferStorage(aH.RENDERBUFFER,aH.DEPTH_COMPONENT16,bb.width,bb.height);aH.framebufferRenderbuffer(aH.FRAMEBUFFER,aH.DEPTH_ATTACHMENT,aH.RENDERBUFFER,ba)}else{if(bb.depthBuffer&&bb.stencilBuffer){aH.renderbufferStorage(aH.RENDERBUFFER,aH.DEPTH_STENCIL,bb.width,bb.height);aH.framebufferRenderbuffer(aH.FRAMEBUFFER,aH.DEPTH_STENCIL_ATTACHMENT,aH.RENDERBUFFER,ba)}else{aH.renderbufferStorage(aH.RENDERBUFFER,aH.RGBA4,bb.width,bb.height)}}aH.bindRenderbuffer(aH.RENDERBUFFER,null)}function e(bd){var bb=af.get(bd);var ba=(bd instanceof THREE.WebGLRenderTargetCube);if(ba){bb.__webglDepthbuffer=[];for(var bc=0;bc<6;bc++){aH.bindFramebuffer(aH.FRAMEBUFFER,bb.__webglFramebuffer[bc]);bb.__webglDepthbuffer[bc]=aH.createRenderbuffer();aU(bb.__webglDepthbuffer[bc],bd)}}else{aH.bindFramebuffer(aH.FRAMEBUFFER,bb.__webglFramebuffer);bb.__webglDepthbuffer=aH.createRenderbuffer();aU(bb.__webglDepthbuffer,bd)}aH.bindFramebuffer(aH.FRAMEBUFFER,null)}function a7(bf){var bc=af.get(bf);var be=af.get(bf.texture);bf.addEventListener("dispose",a1);be.__webglTexture=aH.createTexture();an.textures++;var bb=(bf instanceof THREE.WebGLRenderTargetCube);var ba=THREE.Math.isPowerOfTwo(bf.width)&&THREE.Math.isPowerOfTwo(bf.height);if(bb){bc.__webglFramebuffer=[];for(var bd=0;bd<6;bd++){bc.__webglFramebuffer[bd]=aH.createFramebuffer()}}else{bc.__webglFramebuffer=aH.createFramebuffer()}if(bb){a6.bindTexture(aH.TEXTURE_CUBE_MAP,be.__webglTexture);Q(aH.TEXTURE_CUBE_MAP,bf.texture,ba);for(var bd=0;bd<6;bd++){S(bc.__webglFramebuffer[bd],bf,aH.COLOR_ATTACHMENT0,aH.TEXTURE_CUBE_MAP_POSITIVE_X+bd)}if(bf.texture.generateMipmaps&&ba){aH.generateMipmap(aH.TEXTURE_CUBE_MAP)}a6.bindTexture(aH.TEXTURE_CUBE_MAP,null)}else{a6.bindTexture(aH.TEXTURE_2D,be.__webglTexture);Q(aH.TEXTURE_2D,bf.texture,ba);S(bc.__webglFramebuffer,bf,aH.COLOR_ATTACHMENT0,aH.TEXTURE_2D);if(bf.texture.generateMipmaps&&ba){aH.generateMipmap(aH.TEXTURE_2D)}a6.bindTexture(aH.TEXTURE_2D,null)}if(bf.depthBuffer){e(bf)}}this.setRenderTarget=function(be){aC=be;if(be&&af.get(be).__webglFramebuffer===undefined){a7(be)}var ba=(be instanceof THREE.WebGLRenderTargetCube);var bd;if(be){var bb=af.get(be);if(ba){bd=bb.__webglFramebuffer[be.activeCubeFace]}else{bd=bb.__webglFramebuffer}X.copy(be.scissor);a4=be.scissorTest;a2.copy(be.viewport)}else{bd=null;X.copy(N).multiplyScalar(au);a4=W;a2.copy(aj).multiplyScalar(au)}if(aX!==bd){aH.bindFramebuffer(aH.FRAMEBUFFER,bd);aX=bd}a6.scissor(X);a6.setScissorTest(a4);a6.viewport(a2);if(ba){var bc=af.get(be.texture);aH.framebufferTexture2D(aH.FRAMEBUFFER,aH.COLOR_ATTACHMENT0,aH.TEXTURE_CUBE_MAP_POSITIVE_X+be.activeCubeFace,bc.__webglTexture,0)}};this.readRenderTargetPixels=function(bc,bh,bf,ba,bi,bb){if(bc instanceof THREE.WebGLRenderTarget===false){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var bg=af.get(bc).__webglFramebuffer;if(bg){var be=false;if(bg!==aX){aH.bindFramebuffer(aH.FRAMEBUFFER,bg);be=true}try{var bd=bc.texture;if(bd.format!==THREE.RGBAFormat&&al(bd.format)!==aH.getParameter(aH.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(bd.type!==THREE.UnsignedByteType&&al(bd.type)!==aH.getParameter(aH.IMPLEMENTATION_COLOR_READ_TYPE)&&!(bd.type===THREE.FloatType&&b.get("WEBGL_color_buffer_float"))&&!(bd.type===THREE.HalfFloatType&&b.get("EXT_color_buffer_half_float"))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}if(aH.checkFramebufferStatus(aH.FRAMEBUFFER)===aH.FRAMEBUFFER_COMPLETE){aH.readPixels(bh,bf,ba,bi,al(bd.format),al(bd.type),bb)}else{console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}}finally{if(be){aH.bindFramebuffer(aH.FRAMEBUFFER,aX)}}}};function c(bb){var bc=bb instanceof THREE.WebGLRenderTargetCube?aH.TEXTURE_CUBE_MAP:aH.TEXTURE_2D;var ba=af.get(bb.texture).__webglTexture;a6.bindTexture(bc,ba);aH.generateMipmap(bc);a6.bindTexture(bc,null)}function am(ba){if(ba===THREE.NearestFilter||ba===THREE.NearestMipMapNearestFilter||ba===THREE.NearestMipMapLinearFilter){return aH.NEAREST}return aH.LINEAR}function al(ba){var bb;if(ba===THREE.RepeatWrapping){return aH.REPEAT}if(ba===THREE.ClampToEdgeWrapping){return aH.CLAMP_TO_EDGE}if(ba===THREE.MirroredRepeatWrapping){return aH.MIRRORED_REPEAT}if(ba===THREE.NearestFilter){return aH.NEAREST}if(ba===THREE.NearestMipMapNearestFilter){return aH.NEAREST_MIPMAP_NEAREST}if(ba===THREE.NearestMipMapLinearFilter){return aH.NEAREST_MIPMAP_LINEAR}if(ba===THREE.LinearFilter){return aH.LINEAR}if(ba===THREE.LinearMipMapNearestFilter){return aH.LINEAR_MIPMAP_NEAREST}if(ba===THREE.LinearMipMapLinearFilter){return aH.LINEAR_MIPMAP_LINEAR}if(ba===THREE.UnsignedByteType){return aH.UNSIGNED_BYTE}if(ba===THREE.UnsignedShort4444Type){return aH.UNSIGNED_SHORT_4_4_4_4}if(ba===THREE.UnsignedShort5551Type){return aH.UNSIGNED_SHORT_5_5_5_1}if(ba===THREE.UnsignedShort565Type){return aH.UNSIGNED_SHORT_5_6_5}if(ba===THREE.ByteType){return aH.BYTE}if(ba===THREE.ShortType){return aH.SHORT}if(ba===THREE.UnsignedShortType){return aH.UNSIGNED_SHORT}if(ba===THREE.IntType){return aH.INT}if(ba===THREE.UnsignedIntType){return aH.UNSIGNED_INT}if(ba===THREE.FloatType){return aH.FLOAT}bb=b.get("OES_texture_half_float");if(bb!==null){if(ba===THREE.HalfFloatType){return bb.HALF_FLOAT_OES}}if(ba===THREE.AlphaFormat){return aH.ALPHA}if(ba===THREE.RGBFormat){return aH.RGB}if(ba===THREE.RGBAFormat){return aH.RGBA}if(ba===THREE.LuminanceFormat){return aH.LUMINANCE}if(ba===THREE.LuminanceAlphaFormat){return aH.LUMINANCE_ALPHA}if(ba===THREE.AddEquation){return aH.FUNC_ADD}if(ba===THREE.SubtractEquation){return aH.FUNC_SUBTRACT}if(ba===THREE.ReverseSubtractEquation){return aH.FUNC_REVERSE_SUBTRACT}if(ba===THREE.ZeroFactor){return aH.ZERO}if(ba===THREE.OneFactor){return aH.ONE}if(ba===THREE.SrcColorFactor){return aH.SRC_COLOR}if(ba===THREE.OneMinusSrcColorFactor){return aH.ONE_MINUS_SRC_COLOR}if(ba===THREE.SrcAlphaFactor){return aH.SRC_ALPHA}if(ba===THREE.OneMinusSrcAlphaFactor){return aH.ONE_MINUS_SRC_ALPHA}if(ba===THREE.DstAlphaFactor){return aH.DST_ALPHA}if(ba===THREE.OneMinusDstAlphaFactor){return aH.ONE_MINUS_DST_ALPHA}if(ba===THREE.DstColorFactor){return aH.DST_COLOR}if(ba===THREE.OneMinusDstColorFactor){return aH.ONE_MINUS_DST_COLOR}if(ba===THREE.SrcAlphaSaturateFactor){return aH.SRC_ALPHA_SATURATE}bb=b.get("WEBGL_compressed_texture_s3tc");if(bb!==null){if(ba===THREE.RGB_S3TC_DXT1_Format){return bb.COMPRESSED_RGB_S3TC_DXT1_EXT}if(ba===THREE.RGBA_S3TC_DXT1_Format){return bb.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(ba===THREE.RGBA_S3TC_DXT3_Format){return bb.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(ba===THREE.RGBA_S3TC_DXT5_Format){return bb.COMPRESSED_RGBA_S3TC_DXT5_EXT}}bb=b.get("WEBGL_compressed_texture_pvrtc");if(bb!==null){if(ba===THREE.RGB_PVRTC_4BPPV1_Format){return bb.COMPRESSED_RGB_PVRTC_4BPPV1_IMG}if(ba===THREE.RGB_PVRTC_2BPPV1_Format){return bb.COMPRESSED_RGB_PVRTC_2BPPV1_IMG}if(ba===THREE.RGBA_PVRTC_4BPPV1_Format){return bb.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG}if(ba===THREE.RGBA_PVRTC_2BPPV1_Format){return bb.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}}bb=b.get("WEBGL_compressed_texture_etc1");if(bb!==null){if(ba===THREE.RGB_ETC1_Format){return bb.COMPRESSED_RGB_ETC1_WEBGL}}bb=b.get("EXT_blend_minmax");if(bb!==null){if(ba===THREE.MinEquation){return bb.MIN_EXT}if(ba===THREE.MaxEquation){return bb.MAX_EXT}}return 0}};THREE.WebGLRenderTarget=function(c,a,b){this.uuid=THREE.Math.generateUUID();this.width=c;this.height=a;this.scissor=new THREE.Vector4(0,0,c,a);this.scissorTest=false;this.viewport=new THREE.Vector4(0,0,c,a);b=b||{};if(b.minFilter===undefined){b.minFilter=THREE.LinearFilter}this.texture=new THREE.Texture(undefined,undefined,b.wrapS,b.wrapT,b.magFilter,b.minFilter,b.format,b.type,b.anisotropy);this.depthBuffer=b.depthBuffer!==undefined?b.depthBuffer:true;this.stencilBuffer=b.stencilBuffer!==undefined?b.stencilBuffer:true};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(b,a){if(this.width!==b||this.height!==a){this.width=b;this.height=a;this.dispose()}this.viewport.set(0,0,b,a);this.scissor.set(0,0,b,a)},clone:function(){return new this.constructor().copy(this)},copy:function(a){this.width=a.width;this.height=a.height;this.viewport.copy(a.viewport);this.texture=a.texture.clone();this.depthBuffer=a.depthBuffer;this.stencilBuffer=a.stencilBuffer;this.shareDepthFrom=a.shareDepthFrom;return this},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(c,a,b){THREE.WebGLRenderTarget.call(this,c,a,b);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.WebGLBufferRenderer=function(c,e,a){var g;function b(h){g=h}function d(i,h){c.drawArrays(g,i,h);a.calls++;a.vertices+=h;if(g===c.TRIANGLES){a.faces+=h/3}}function f(j){var k=e.get("ANGLE_instanced_arrays");if(k===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}var h=j.attributes.position;var i=0;if(h instanceof THREE.InterleavedBufferAttribute){i=h.data.count;k.drawArraysInstancedANGLE(g,0,i,j.maxInstancedCount)}else{i=h.count;k.drawArraysInstancedANGLE(g,0,i,j.maxInstancedCount)}a.calls++;a.vertices+=i*j.maxInstancedCount;if(g===c.TRIANGLES){a.faces+=j.maxInstancedCount*i/3}}this.setMode=b;this.render=d;this.renderInstances=f};THREE.WebGLIndexedBufferRenderer=function(d,h,e){var g;function b(k){g=k}var i,j;function a(k){if(k.array instanceof Uint32Array&&h.get("OES_element_index_uint")){i=d.UNSIGNED_INT;j=4}else{i=d.UNSIGNED_SHORT;j=2}}function c(l,k){d.drawElements(g,k,i,l*j)}function f(l,n,k){var m=h.get("ANGLE_instanced_arrays");if(m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m.drawElementsInstancedANGLE(g,k,i,n*j,l.maxInstancedCount);e.calls++;e.vertices+=k*l.maxInstancedCount;if(g===d.TRIANGLES){e.faces+=l.maxInstancedCount*k/3}}this.setMode=b;this.setIndex=a;this.render=c;this.renderInstances=f};THREE.WebGLExtensions=function(b){var a={};this.get=function(c){if(a[c]!==undefined){return a[c]}var d;switch(c){case"EXT_texture_filter_anisotropic":d=b.getExtension("EXT_texture_filter_anisotropic")||b.getExtension("MOZ_EXT_texture_filter_anisotropic")||b.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=b.getExtension("WEBGL_compressed_texture_s3tc")||b.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||b.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=b.getExtension("WEBGL_compressed_texture_pvrtc")||b.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":d=b.getExtension("WEBGL_compressed_texture_etc1");break;default:d=b.getExtension(c)}if(d===null){console.warn("THREE.WebGLRenderer: "+c+" extension not supported.")}a[c]=d;return d}};THREE.WebGLCapabilities=function(e,c,d){function a(f){if(f==="highp"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0){return"highp"}f="mediump"}if(f==="mediump"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0){return"mediump"}}return"lowp"}this.getMaxPrecision=a;this.precision=d.precision!==undefined?d.precision:"highp",this.logarithmicDepthBuffer=d.logarithmicDepthBuffer!==undefined?d.logarithmicDepthBuffer:false;this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE);this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS);this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS);this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS);this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS);this.vertexTextures=this.maxVertexTextures>0;this.floatFragmentTextures=!!c.get("OES_texture_float");this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;var b=a(this.precision);if(b!==this.precision){console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",b,"instead.");this.precision=b}if(this.logarithmicDepthBuffer){this.logarithmicDepthBuffer=!!c.get("EXT_frag_depth")}};THREE.WebGLGeometries=function(g,h,d){var c={};function e(k){var m=k.geometry;if(c[m.id]!==undefined){return c[m.id]}m.addEventListener("dispose",a);var l;if(m instanceof THREE.BufferGeometry){l=m}else{if(m instanceof THREE.Geometry){if(m._bufferGeometry===undefined){m._bufferGeometry=new THREE.BufferGeometry().setFromObject(k)}l=m._bufferGeometry}}c[m.id]=l;d.memory.geometries++;return l}function a(l){var o=l.target;var n=c[o.id];if(n.index!==null){b(n.index)}i(n.attributes);o.removeEventListener("dispose",a);delete c[o.id];var m=h.get(o);if(m.wireframe){b(m.wireframe)}h.remove(o);var k=h.get(n);if(k.wireframe){b(k.wireframe)}h.remove(n);d.memory.geometries--}function f(k){if(k instanceof THREE.InterleavedBufferAttribute){return h.get(k.data).__webglBuffer}return h.get(k).__webglBuffer}function b(l){var k=f(l);if(k!==undefined){g.deleteBuffer(k);j(l)}}function i(k){for(var l in k){b(k[l])}}function j(k){if(k instanceof THREE.InterleavedBufferAttribute){h.remove(k.data)}else{h.remove(k)}}this.get=e};THREE.WebGLLights=function(){var a={};this.get=function(c){if(a[c.id]!==undefined){return a[c.id]}var b;switch(c.type){case"DirectionalLight":b={direction:new THREE.Vector3(),color:new THREE.Color(),shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2()};break;case"SpotLight":b={position:new THREE.Vector3(),direction:new THREE.Vector3(),color:new THREE.Color(),distance:0,angleCos:0,penumbra:0,decay:0,shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2()};break;case"PointLight":b={position:new THREE.Vector3(),color:new THREE.Color(),distance:0,decay:0,shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2()};break;case"HemisphereLight":b={direction:new THREE.Vector3(),skyColor:new THREE.Color(),groundColor:new THREE.Color()};break}a[c.id]=b;return b}};THREE.WebGLObjects=function(f,h,c){var b=new THREE.WebGLGeometries(f,h,c);function e(o){var u=b.get(o);if(o.geometry instanceof THREE.Geometry){u.updateFromObject(o)}var s=u.index;var p=u.attributes;if(s!==null){k(s,f.ELEMENT_ARRAY_BUFFER)}for(var m in p){k(p[m],f.ARRAY_BUFFER)}var r=u.morphAttributes;for(var m in r){var t=r[m];for(var q=0,n=t.length;q<n;q++){k(t[q],f.ARRAY_BUFFER)}}return u}function k(n,l){var o=(n instanceof THREE.InterleavedBufferAttribute)?n.data:n;var m=h.get(o);if(m.__webglBuffer===undefined){i(m,o,l)}else{if(m.version!==o.version){j(m,o,l)}}}function i(m,o,l){m.__webglBuffer=f.createBuffer();f.bindBuffer(l,m.__webglBuffer);var n=o.dynamic?f.DYNAMIC_DRAW:f.STATIC_DRAW;f.bufferData(l,o.array,n);m.version=o.version}function j(m,n,l){f.bindBuffer(l,m.__webglBuffer);if(n.dynamic===false||n.updateRange.count===-1){f.bufferSubData(l,0,n.array)}else{if(n.updateRange.count===0){console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.")}else{f.bufferSubData(l,n.updateRange.offset*n.array.BYTES_PER_ELEMENT,n.array.subarray(n.updateRange.offset,n.updateRange.offset+n.updateRange.count));n.updateRange.count=0}}m.version=n.version}function d(l){if(l instanceof THREE.InterleavedBufferAttribute){return h.get(l.data).__webglBuffer}return h.get(l).__webglBuffer}function a(A){var D=h.get(A);if(D.wireframe!==undefined){return D.wireframe}var E=[];var s=A.index;var o=A.attributes;var r=o.position;if(s!==null){var p={};var t=s.array;for(var q=0,n=t.length;q<n;q+=3){var B=t[q+0];var v=t[q+1];var u=t[q+2];if(g(p,B,v)){E.push(B,v)}if(g(p,v,u)){E.push(v,u)}if(g(p,u,B)){E.push(u,B)}}}else{var t=o.position.array;for(var q=0,n=(t.length/3)-1;q<n;q+=3){var B=q+0;var v=q+1;var u=q+2;E.push(B,v,v,u,u,B)}}var C=r.count>65535?Uint32Array:Uint16Array;var m=new THREE.BufferAttribute(new C(E),1);k(m,f.ELEMENT_ARRAY_BUFFER);D.wireframe=m;return m}function g(n,m,l){if(m>l){var o=m;m=l;l=o}var p=n[m];if(p===undefined){n[m]=[l];return true}else{if(p.indexOf(l)===-1){p.push(l);return true}}return false}this.getAttributeBuffer=d;this.getWireframeAttribute=a;this.update=e};THREE.WebGLProgram=(function(){var e=0;var f=/^([\w\d_]+)\.([\w\d_]+)$/;var h=/^([\w\d_]+)\[(\d+)\]\.([\w\d_]+)$/;var j=/^([\w\d_]+)\[0\]$/;function k(n,o,m){n=n||{};var p=[(n.derivatives||o.bumpMap||o.normalMap||o.flatShading)?"#extension GL_OES_standard_derivatives : enable":"",(n.fragDepth||o.logarithmicDepthBuffer)&&m.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",(n.drawBuffers)&&m.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(n.shaderTextureLOD||o.envMap)&&m.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""];return p.filter(g).join("\n")}function c(n){var p=[];for(var m in n){var o=n[m];if(o===false){continue}p.push("#define "+m+" "+o)}return p.join("\n")}function l(C,s,q){var H={};var A=C.getProgramParameter(s,C.ACTIVE_UNIFORMS);for(var D=0;D<A;D++){var G=C.getActiveUniform(s,D);var I=G.name;var m=C.getUniformLocation(s,I);var p=f.exec(I);if(p){var u=p[1];var r=p[2];var B=H[u];if(!B){B=H[u]={}}B[r]=m;continue}p=h.exec(I);if(p){var t=p[1];var v=p[2];var E=p[3];var o=H[t];if(!o){o=H[t]=[]}var F=o[v];if(!F){F=o[v]={}}F[E]=m;continue}p=j.exec(I);if(p){var t=p[1];H[t]=m;continue}H[I]=m}return H}function b(t,p,m){var o={};var u=t.getProgramParameter(p,t.ACTIVE_ATTRIBUTES);for(var r=0;r<u;r++){var s=t.getActiveAttrib(p,r);var q=s.name;o[q]=t.getAttribLocation(p,q)}return o}function g(m){return m!==""}function i(m,n){return m.replace(/NUM_DIR_LIGHTS/g,n.numDirLights).replace(/NUM_SPOT_LIGHTS/g,n.numSpotLights).replace(/NUM_POINT_LIGHTS/g,n.numPointLights).replace(/NUM_HEMI_LIGHTS/g,n.numHemiLights)}function d(m){var o=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function n(q,u,p,s){var t="";for(var r=parseInt(u);r<parseInt(p);r++){t+=s.replace(/\[ i \]/g,"[ "+r+" ]")}return t}return m.replace(o,n)}return function a(J,n,H,B){var P=J.context;var S=H.extensions;var O=H.defines;var t=H.__webglShader.vertexShader;var m=H.__webglShader.fragmentShader;var p="SHADOWMAP_TYPE_BASIC";if(B.shadowMapType===THREE.PCFShadowMap){p="SHADOWMAP_TYPE_PCF"}else{if(B.shadowMapType===THREE.PCFSoftShadowMap){p="SHADOWMAP_TYPE_PCF_SOFT"}}var R="ENVMAP_TYPE_CUBE";var L="ENVMAP_MODE_REFLECTION";var o="ENVMAP_BLENDING_MULTIPLY";if(B.envMap){switch(H.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:R="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:R="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:R="ENVMAP_TYPE_SPHERE";break}switch(H.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:L="ENVMAP_MODE_REFRACTION";break}switch(H.combine){case THREE.MultiplyOperation:o="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:o="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:o="ENVMAP_BLENDING_ADD";break}}var v=(J.gammaFactor>0)?J.gammaFactor:1;var r=k(S,B,J.extensions);var s=c(O);var D=P.createProgram();var C,K;if(H instanceof THREE.RawShaderMaterial){C="";K=""}else{C=["precision "+B.precision+" float;","precision "+B.precision+" int;","#define SHADER_NAME "+H.__webglShader.name,s,B.supportsVertexTextures?"#define VERTEX_TEXTURES":"",J.gammaInput?"#define GAMMA_INPUT":"",J.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+v,"#define MAX_BONES "+B.maxBones,B.map?"#define USE_MAP":"",B.envMap?"#define USE_ENVMAP":"",B.envMap?"#define "+L:"",B.lightMap?"#define USE_LIGHTMAP":"",B.aoMap?"#define USE_AOMAP":"",B.emissiveMap?"#define USE_EMISSIVEMAP":"",B.bumpMap?"#define USE_BUMPMAP":"",B.normalMap?"#define USE_NORMALMAP":"",B.displacementMap&&B.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",B.specularMap?"#define USE_SPECULARMAP":"",B.roughnessMap?"#define USE_ROUGHNESSMAP":"",B.metalnessMap?"#define USE_METALNESSMAP":"",B.alphaMap?"#define USE_ALPHAMAP":"",B.vertexColors?"#define USE_COLOR":"",B.flatShading?"#define FLAT_SHADED":"",B.skinning?"#define USE_SKINNING":"",B.useVertexTexture?"#define BONE_TEXTURE":"",B.morphTargets?"#define USE_MORPHTARGETS":"",B.morphNormals&&B.flatShading===false?"#define USE_MORPHNORMALS":"",B.doubleSided?"#define DOUBLE_SIDED":"",B.flipSided?"#define FLIP_SIDED":"",B.shadowMapEnabled?"#define USE_SHADOWMAP":"",B.shadowMapEnabled?"#define "+p:"",B.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",B.sizeAttenuation?"#define USE_SIZEATTENUATION":"",B.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",B.logarithmicDepthBuffer&&J.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(g).join("\n");K=[r,"precision "+B.precision+" float;","precision "+B.precision+" int;","#define SHADER_NAME "+H.__webglShader.name,s,B.alphaTest?"#define ALPHATEST "+B.alphaTest:"",J.gammaInput?"#define GAMMA_INPUT":"",J.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+v,(B.useFog&&B.fog)?"#define USE_FOG":"",(B.useFog&&B.fogExp)?"#define FOG_EXP2":"",B.map?"#define USE_MAP":"",B.envMap?"#define USE_ENVMAP":"",B.envMap?"#define "+R:"",B.envMap?"#define "+L:"",B.envMap?"#define "+o:"",B.lightMap?"#define USE_LIGHTMAP":"",B.aoMap?"#define USE_AOMAP":"",B.emissiveMap?"#define USE_EMISSIVEMAP":"",B.bumpMap?"#define USE_BUMPMAP":"",B.normalMap?"#define USE_NORMALMAP":"",B.specularMap?"#define USE_SPECULARMAP":"",B.roughnessMap?"#define USE_ROUGHNESSMAP":"",B.metalnessMap?"#define USE_METALNESSMAP":"",B.alphaMap?"#define USE_ALPHAMAP":"",B.vertexColors?"#define USE_COLOR":"",B.flatShading?"#define FLAT_SHADED":"",B.doubleSided?"#define DOUBLE_SIDED":"",B.flipSided?"#define FLIP_SIDED":"",B.shadowMapEnabled?"#define USE_SHADOWMAP":"",B.shadowMapEnabled?"#define "+p:"",B.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",B.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",B.logarithmicDepthBuffer&&J.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",B.envMap&&J.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","\n"].filter(g).join("\n")}t=i(t,B);m=i(m,B);if(H instanceof THREE.ShaderMaterial===false){t=d(t);m=d(m)}var Q=C+t;var N=K+m;var u=THREE.WebGLShader(P,P.VERTEX_SHADER,Q);var M=THREE.WebGLShader(P,P.FRAGMENT_SHADER,N);P.attachShader(D,u);P.attachShader(D,M);if(H.index0AttributeName!==undefined){P.bindAttribLocation(D,0,H.index0AttributeName)}else{if(B.morphTargets===true){P.bindAttribLocation(D,0,"position")}}P.linkProgram(D);var q=P.getProgramInfoLog(D);var E=P.getShaderInfoLog(u);var T=P.getShaderInfoLog(M);var G=true;var I=true;if(P.getProgramParameter(D,P.LINK_STATUS)===false){G=false;console.error("THREE.WebGLProgram: shader error: ",P.getError(),"gl.VALIDATE_STATUS",P.getProgramParameter(D,P.VALIDATE_STATUS),"gl.getProgramInfoLog",q,E,T)}else{if(q!==""){console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",q)}else{if(E===""||T===""){I=false}}}if(I){this.diagnostics={runnable:G,material:H,programLog:q,vertexShader:{log:E,prefix:C},fragmentShader:{log:T,prefix:K}}}P.deleteShader(u);P.deleteShader(M);var A;this.getUniforms=function(){if(A===undefined){A=l(P,D)}return A};var F;this.getAttributes=function(){if(F===undefined){F=b(P,D)}return F};this.destroy=function(){P.deleteProgram(D);this.program=undefined};Object.defineProperties(this,{uniforms:{get:function(){console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms().");return this.getUniforms()}},attributes:{get:function(){console.warn("THREE.WebGLProgram: .attributes is now .getAttributes().");return this.getAttributes()}}});this.id=e++;this.code=n;this.usedTimes=1;this.program=D;this.vertexShader=u;this.fragmentShader=M;return this}})();THREE.WebGLPrograms=function(f,a){var e=[];var d={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshStandardMaterial:"standard",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"};var b=["precision","supportsVertexTextures","map","envMap","envMapMode","lightMap","aoMap","emissiveMap","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","numDirLights","numPointLights","numSpotLights","numHemiLights","shadowMapEnabled","pointLightShadows","shadowMapType","alphaTest","doubleSided","flipSided"];function c(j){if(a.floatVertexTextures&&j&&j.skeleton&&j.skeleton.useVertexTexture){return 1024}else{var h=a.maxVertexUniforms;var i=Math.floor((h-20)/4);var g=i;if(j!==undefined&&j instanceof THREE.SkinnedMesh){g=Math.min(j.skeleton.bones.length,g);if(g<j.skeleton.bones.length){console.warn("WebGLRenderer: too many bones - "+j.skeleton.bones.length+", this GPU supports just "+g+" (try OpenGL instead of ANGLE)")}}return g}}this.getParameters=function(k,j,n,i){var m=d[k.type];var h=c(i);var g=f.getPrecision();if(k.precision!==null){g=a.getMaxPrecision(k.precision);if(g!==k.precision){console.warn("THREE.WebGLProgram.getParameters:",k.precision,"not supported, using",g,"instead.")}}var l={shaderID:m,precision:g,supportsVertexTextures:a.vertexTextures,map:!!k.map,envMap:!!k.envMap,envMapMode:k.envMap&&k.envMap.mapping,lightMap:!!k.lightMap,aoMap:!!k.aoMap,emissiveMap:!!k.emissiveMap,bumpMap:!!k.bumpMap,normalMap:!!k.normalMap,displacementMap:!!k.displacementMap,roughnessMap:!!k.roughnessMap,metalnessMap:!!k.metalnessMap,specularMap:!!k.specularMap,alphaMap:!!k.alphaMap,combine:k.combine,vertexColors:k.vertexColors,fog:n,useFog:k.fog,fogExp:n instanceof THREE.FogExp2,flatShading:k.shading===THREE.FlatShading,sizeAttenuation:k.sizeAttenuation,logarithmicDepthBuffer:a.logarithmicDepthBuffer,skinning:k.skinning,maxBones:h,useVertexTexture:a.floatVertexTextures&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:k.morphTargets,morphNormals:k.morphNormals,maxMorphTargets:f.maxMorphTargets,maxMorphNormals:f.maxMorphNormals,numDirLights:j.directional.length,numPointLights:j.point.length,numSpotLights:j.spot.length,numHemiLights:j.hemi.length,pointLightShadows:j.shadowsPointLight,shadowMapEnabled:f.shadowMap.enabled&&i.receiveShadow&&j.shadows.length>0,shadowMapType:f.shadowMap.type,alphaTest:k.alphaTest,doubleSided:k.side===THREE.DoubleSide,flipSided:k.side===THREE.BackSide};return l};this.getProgramCode=function(k,l){var m=[];if(l.shaderID){m.push(l.shaderID)}else{m.push(k.fragmentShader);m.push(k.vertexShader)}if(k.defines!==undefined){for(var h in k.defines){m.push(h);m.push(k.defines[h])}}for(var j=0;j<b.length;j++){var g=b[j];m.push(g);m.push(l[g])}return m.join()};this.acquireProgram=function(j,l,k){var g;for(var m=0,i=e.length;m<i;m++){var h=e[m];if(h.code===k){g=h;++g.usedTimes;break}}if(g===undefined){g=new THREE.WebGLProgram(f,k,j,l);e.push(g)}return g};this.releaseProgram=function(g){if(--g.usedTimes===0){var h=e.indexOf(g);e[h]=e[e.length-1];e.pop();g.destroy()}};this.programs=e};THREE.WebGLProperties=function(){var a={};this.get=function(b){var c=b.uuid;var d=a[c];if(d===undefined){d={};a[c]=d}return d};this.remove=function(b){delete a[b.uuid]};this.clear=function(){a={}}};THREE.WebGLShader=(function(){function b(d){var c=d.split("\n");for(var e=0;e<c.length;e++){c[e]=(e+1)+": "+c[e]}return c.join("\n")}return function a(f,d,c){var e=f.createShader(d);f.shaderSource(e,c);f.compileShader(e);if(f.getShaderParameter(e,f.COMPILE_STATUS)===false){console.error("THREE.WebGLShader: Shader couldn't compile.")}if(f.getShaderInfoLog(e)!==""){console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",d===f.VERTEX_SHADER?"vertex":"fragment",f.getShaderInfoLog(e),b(c))}return e}})();THREE.WebGLShadowMap=function(H,l,s){var m=H.context,F=H.state,G=new THREE.Frustum(),e=new THREE.Matrix4(),B=new THREE.Vector2(),p=new THREE.Vector3(),n=new THREE.Vector3(),E=[],h=1,o=2,J=(h|o)+1,q=new Array(J),f=new Array(J);var C=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)];var A=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)];var d=[new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4(),new THREE.Vector4()];var v=THREE.ShaderLib.depthRGBA;var I=THREE.UniformsUtils.clone(v.uniforms);var g=THREE.ShaderLib.distanceRGBA;var k=THREE.UniformsUtils.clone(g.uniforms);for(var D=0;D!==J;++D){var j=(D&h)!==0;var u=(D&o)!==0;var c=new THREE.ShaderMaterial({uniforms:I,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,morphTargets:j,skinning:u});c._shadowPass=true;q[D]=c;var r=new THREE.ShaderMaterial({uniforms:k,vertexShader:g.vertexShader,fragmentShader:g.fragmentShader,morphTargets:j,skinning:u});r._shadowPass=true;f[D]=r}var b=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=THREE.PCFShadowMap;this.cullFace=THREE.CullFaceFront;this.render=function(al,ai){var aa,S;if(b.enabled===false){return}if(b.autoUpdate===false&&b.needsUpdate===false){return}F.clearColor(1,1,1,1);F.disable(m.BLEND);F.enable(m.CULL_FACE);m.frontFace(m.CCW);m.cullFace(b.cullFace===THREE.CullFaceFront?m.FRONT:m.BACK);F.setDepthTest(true);F.setScissorTest(false);var K=l.shadows;for(var ag=0,Y=K.length;ag<Y;ag++){var Q=K[ag];var U=Q.shadow;var an=U.camera;B.copy(U.mapSize);if(Q instanceof THREE.PointLight){aa=6;S=true;var ab=B.x;var R=B.y;d[0].set(ab*2,R,ab,R);d[1].set(0,R,ab,R);d[2].set(ab*3,R,ab,R);d[3].set(ab,R,ab,R);d[4].set(ab*3,0,ab,R);d[5].set(ab,0,ab,R);B.x*=4;B.y*=2}else{aa=1;S=false}if(U.map===null){var ad={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat};U.map=new THREE.WebGLRenderTarget(B.x,B.y,ad);if(Q instanceof THREE.SpotLight){an.aspect=B.x/B.y}an.updateProjectionMatrix()}var O=U.map;var am=U.matrix;n.setFromMatrixPosition(Q.matrixWorld);an.position.copy(n);H.setRenderTarget(O);H.clear();for(var X=0;X<aa;X++){if(S){p.copy(an.position);p.add(C[X]);an.up.copy(A[X]);an.lookAt(p);var W=d[X];F.viewport(W)}else{p.setFromMatrixPosition(Q.target.matrixWorld);an.lookAt(p)}an.updateMatrixWorld();an.matrixWorldInverse.getInverse(an.matrixWorld);am.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);am.multiply(an.projectionMatrix);am.multiply(an.matrixWorldInverse);e.multiplyMatrices(an.projectionMatrix,an.matrixWorldInverse);G.setFromMatrix(e);E.length=0;t(al,ai,an);for(var af=0,ah=E.length;af<ah;af++){var ao=E[af];var T=s.update(ao);var Z=ao.material;if(Z instanceof THREE.MultiMaterial){var ak=T.groups;var P=Z.materials;for(var ae=0,N=ak.length;ae<N;ae++){var V=ak[ae];var aj=P[V.materialIndex];if(aj.visible===true){var M=a(ao,aj,S,n);H.renderBufferDirect(an,null,T,M,ao,V)}}}else{var M=a(ao,Z,S,n);H.renderBufferDirect(an,null,T,M,ao,null)}}}H.resetGLState()}var L=H.getClearColor(),ac=H.getClearAlpha();H.setClearColor(L,ac);F.enable(m.BLEND);if(b.cullFace===THREE.CullFaceFront){m.cullFace(m.BACK)}H.resetGLState();b.needsUpdate=false};function a(K,P,i,S){var R=K.geometry;var L=null;var Q=q;var O=K.customDepthMaterial;if(i){Q=f;O=K.customDistanceMaterial}if(!O){var T=R.morphTargets!==undefined&&R.morphTargets.length>0&&P.morphTargets;var N=K instanceof THREE.SkinnedMesh&&P.skinning;var M=0;if(T){M|=h}if(N){M|=o}L=Q[M]}else{L=O}L.visible=P.visible;L.wireframe=P.wireframe;L.wireframeLinewidth=P.wireframeLinewidth;if(i&&L.uniforms.lightPos!==undefined){L.uniforms.lightPos.value.copy(S)}return L}function t(L,P,Q){if(L.visible===false){return}if(L.layers.test(P.layers)&&(L instanceof THREE.Mesh||L instanceof THREE.Line||L instanceof THREE.Points)){if(L.castShadow&&(L.frustumCulled===false||G.intersectsObject(L)===true)){var O=L.material;if(O.visible===true){L.modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,L.matrixWorld);E.push(L)}}}var N=L.children;for(var M=0,K=N.length;M<K;M++){t(N[M],P,Q)}}};THREE.WebGLState=function(m,N,u){var f=this;var D=new THREE.Vector4();var F=new Uint8Array(16);var a=new Uint8Array(16);var r=new Uint8Array(16);var A={};var i=null;var Q=null;var K=null;var l=null;var v=null;var O=null;var I=null;var q=null;var g=null;var M=null;var J=null;var R=null;var k=null;var c=null;var H=null;var e=null;var B=null;var o=null;var t=null;var b=null;var h=null;var j=null;var d=null;var E=m.getParameter(m.MAX_TEXTURE_IMAGE_UNITS);var G=undefined;var C={};var n=new THREE.Vector4();var P=null;var p=null;var s=new THREE.Vector4();var L=new THREE.Vector4();this.init=function(){this.clearColor(0,0,0,1);this.clearDepth(1);this.clearStencil(0);this.enable(m.DEPTH_TEST);m.depthFunc(m.LEQUAL);m.frontFace(m.CCW);m.cullFace(m.BACK);this.enable(m.CULL_FACE);this.enable(m.BLEND);m.blendEquation(m.FUNC_ADD);m.blendFunc(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA)};this.initAttributes=function(){for(var T=0,S=F.length;T<S;T++){F[T]=0}};this.enableAttribute=function(S){F[S]=1;if(a[S]===0){m.enableVertexAttribArray(S);a[S]=1}if(r[S]!==0){var T=N.get("ANGLE_instanced_arrays");T.vertexAttribDivisorANGLE(S,0);r[S]=0}};this.enableAttributeAndDivisor=function(T,S,U){F[T]=1;if(a[T]===0){m.enableVertexAttribArray(T);a[T]=1}if(r[T]!==S){U.vertexAttribDivisorANGLE(T,S);r[T]=S}};this.disableUnusedAttributes=function(){for(var T=0,S=a.length;T<S;T++){if(a[T]!==F[T]){m.disableVertexAttribArray(T);a[T]=0}}};this.enable=function(S){if(A[S]!==true){m.enable(S);A[S]=true}};this.disable=function(S){if(A[S]!==false){m.disable(S);A[S]=false}};this.getCompressedTextureFormats=function(){if(i===null){i=[];if(N.get("WEBGL_compressed_texture_pvrtc")||N.get("WEBGL_compressed_texture_s3tc")||N.get("WEBGL_compressed_texture_etc1")){var S=m.getParameter(m.COMPRESSED_TEXTURE_FORMATS);for(var T=0;T<S.length;T++){i.push(S[T])}}}return i};this.setBlending=function(U,T,V,W,Y,X,S){if(U===THREE.NoBlending){this.disable(m.BLEND)}else{this.enable(m.BLEND)}if(U!==Q){if(U===THREE.AdditiveBlending){m.blendEquation(m.FUNC_ADD);m.blendFunc(m.SRC_ALPHA,m.ONE)}else{if(U===THREE.SubtractiveBlending){m.blendEquation(m.FUNC_ADD);m.blendFunc(m.ZERO,m.ONE_MINUS_SRC_COLOR)}else{if(U===THREE.MultiplyBlending){m.blendEquation(m.FUNC_ADD);m.blendFunc(m.ZERO,m.SRC_COLOR)}else{m.blendEquationSeparate(m.FUNC_ADD,m.FUNC_ADD);m.blendFuncSeparate(m.SRC_ALPHA,m.ONE_MINUS_SRC_ALPHA,m.ONE,m.ONE_MINUS_SRC_ALPHA)}}}Q=U}if(U===THREE.CustomBlending){Y=Y||T;X=X||V;S=S||W;if(T!==K||Y!==O){m.blendEquationSeparate(u(T),u(Y));K=T;O=Y}if(V!==l||W!==v||X!==I||S!==q){m.blendFuncSeparate(u(V),u(W),u(X),u(S));l=V;v=W;I=X;q=S}}else{K=null;l=null;v=null;O=null;I=null;q=null}};this.setDepthFunc=function(S){if(g!==S){if(S){switch(S){case THREE.NeverDepth:m.depthFunc(m.NEVER);break;case THREE.AlwaysDepth:m.depthFunc(m.ALWAYS);break;case THREE.LessDepth:m.depthFunc(m.LESS);break;case THREE.LessEqualDepth:m.depthFunc(m.LEQUAL);break;case THREE.EqualDepth:m.depthFunc(m.EQUAL);break;case THREE.GreaterEqualDepth:m.depthFunc(m.GEQUAL);break;case THREE.GreaterDepth:m.depthFunc(m.GREATER);break;case THREE.NotEqualDepth:m.depthFunc(m.NOTEQUAL);break;default:m.depthFunc(m.LEQUAL)}}else{m.depthFunc(m.LEQUAL)}g=S}};this.setDepthTest=function(S){if(S){this.enable(m.DEPTH_TEST)}else{this.disable(m.DEPTH_TEST)}};this.setDepthWrite=function(S){if(M!==S){m.depthMask(S);M=S}};this.setColorWrite=function(S){if(J!==S){m.colorMask(S,S,S,S);J=S}};this.setStencilFunc=function(U,T,S){if(k!==U||c!==T||H!==S){m.stencilFunc(U,T,S);k=U;c=T;H=S}};this.setStencilOp=function(S,U,T){if(e!==S||B!==U||o!==T){m.stencilOp(S,U,T);e=S;B=U;o=T}};this.setStencilTest=function(S){if(S){this.enable(m.STENCIL_TEST)}else{this.disable(m.STENCIL_TEST)}};this.setStencilWrite=function(S){if(R!==S){m.stencilMask(S);R=S}};this.setFlipSided=function(S){if(t!==S){if(S){m.frontFace(m.CW)}else{m.frontFace(m.CCW)}t=S}};this.setLineWidth=function(S){if(S!==b){m.lineWidth(S);b=S}};this.setPolygonOffset=function(U,T,S){if(U){this.enable(m.POLYGON_OFFSET_FILL)}else{this.disable(m.POLYGON_OFFSET_FILL)}if(U&&(h!==T||j!==S)){m.polygonOffset(T,S);h=T;j=S}};this.getScissorTest=function(){return d};this.setScissorTest=function(S){d=S;if(S){this.enable(m.SCISSOR_TEST)}else{this.disable(m.SCISSOR_TEST)}};this.activeTexture=function(S){if(S===undefined){S=m.TEXTURE0+E-1}if(G!==S){m.activeTexture(S);G=S}};this.bindTexture=function(S,T){if(G===undefined){f.activeTexture()}var U=C[G];if(U===undefined){U={type:undefined,texture:undefined};C[G]=U}if(U.type!==S||U.texture!==T){m.bindTexture(S,T);U.type=S;U.texture=T}};this.compressedTexImage2D=function(){try{m.compressedTexImage2D.apply(m,arguments)}catch(S){console.error(S)}};this.texImage2D=function(){try{m.texImage2D.apply(m,arguments)}catch(S){console.error(S)}};this.clearColor=function(V,U,S,T){D.set(V,U,S,T);if(n.equals(D)===false){m.clearColor(V,U,S,T);n.copy(D)}};this.clearDepth=function(S){if(P!==S){m.clearDepth(S);P=S}};this.clearStencil=function(S){if(p!==S){m.clearStencil(S);p=S}};this.scissor=function(S){if(s.equals(S)===false){m.scissor(S.x,S.y,S.z,S.w);s.copy(S)}};this.viewport=function(S){if(L.equals(S)===false){m.viewport(S.x,S.y,S.z,S.w);L.copy(S)}};this.reset=function(){for(var S=0;S<a.length;S++){if(a[S]===1){m.disableVertexAttribArray(S);a[S]=0}}A={};i=null;Q=null;J=null;M=null;R=null;t=null}};THREE.LensFlarePlugin=function(k,d){var j=k.context;var a=k.state;var l,b;var h,g,m;var i;var e,f;function n(){var p=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]);var o=new Uint16Array([0,1,2,0,2,3]);l=j.createBuffer();b=j.createBuffer();j.bindBuffer(j.ARRAY_BUFFER,l);j.bufferData(j.ARRAY_BUFFER,p,j.STATIC_DRAW);j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,b);j.bufferData(j.ELEMENT_ARRAY_BUFFER,o,j.STATIC_DRAW);e=j.createTexture();f=j.createTexture();a.bindTexture(j.TEXTURE_2D,e);j.texImage2D(j.TEXTURE_2D,0,j.RGB,16,16,0,j.RGB,j.UNSIGNED_BYTE,null);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_S,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_T,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MAG_FILTER,j.NEAREST);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MIN_FILTER,j.NEAREST);a.bindTexture(j.TEXTURE_2D,f);j.texImage2D(j.TEXTURE_2D,0,j.RGBA,16,16,0,j.RGBA,j.UNSIGNED_BYTE,null);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_S,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_WRAP_T,j.CLAMP_TO_EDGE);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MAG_FILTER,j.NEAREST);j.texParameteri(j.TEXTURE_2D,j.TEXTURE_MIN_FILTER,j.NEAREST);i=j.getParameter(j.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;var q;if(i){q={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}}else{q={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}}h=c(q);g={vertex:j.getAttribLocation(h,"position"),uv:j.getAttribLocation(h,"uv")};m={renderType:j.getUniformLocation(h,"renderType"),map:j.getUniformLocation(h,"map"),occlusionMap:j.getUniformLocation(h,"occlusionMap"),opacity:j.getUniformLocation(h,"opacity"),color:j.getUniformLocation(h,"color"),scale:j.getUniformLocation(h,"scale"),rotation:j.getUniformLocation(h,"rotation"),screenPosition:j.getUniformLocation(h,"screenPosition")}}this.render=function(u,B,C){if(d.length===0){return}var D=new THREE.Vector3();var F=C.w/C.z,A=C.z*0.5,E=C.w*0.5;var I=16/C.w,p=new THREE.Vector2(I*F,I);var v=new THREE.Vector3(1,1,0),q=new THREE.Vector2(1,1);if(h===undefined){n()}j.useProgram(h);a.initAttributes();a.enableAttribute(g.vertex);a.enableAttribute(g.uv);a.disableUnusedAttributes();j.uniform1i(m.occlusionMap,0);j.uniform1i(m.map,1);j.bindBuffer(j.ARRAY_BUFFER,l);j.vertexAttribPointer(g.vertex,2,j.FLOAT,false,2*8,0);j.vertexAttribPointer(g.uv,2,j.FLOAT,false,2*8,8);j.bindBuffer(j.ELEMENT_ARRAY_BUFFER,b);a.disable(j.CULL_FACE);a.setDepthWrite(false);for(var t=0,o=d.length;t<o;t++){I=16/C.w;p.set(I*F,I);var H=d[t];D.set(H.matrixWorld.elements[12],H.matrixWorld.elements[13],H.matrixWorld.elements[14]);D.applyMatrix4(B.matrixWorldInverse);D.applyProjection(B.projectionMatrix);v.copy(D);q.x=v.x*A+A;q.y=v.y*E+E;if(i||(q.x>0&&q.x<C.z&&q.y>0&&q.y<C.w)){a.activeTexture(j.TEXTURE0);a.bindTexture(j.TEXTURE_2D,null);a.activeTexture(j.TEXTURE1);a.bindTexture(j.TEXTURE_2D,e);j.copyTexImage2D(j.TEXTURE_2D,0,j.RGB,C.x+q.x-8,C.y+q.y-8,16,16,0);j.uniform1i(m.renderType,0);j.uniform2f(m.scale,p.x,p.y);j.uniform3f(m.screenPosition,v.x,v.y,v.z);a.disable(j.BLEND);a.enable(j.DEPTH_TEST);j.drawElements(j.TRIANGLES,6,j.UNSIGNED_SHORT,0);a.activeTexture(j.TEXTURE0);a.bindTexture(j.TEXTURE_2D,f);j.copyTexImage2D(j.TEXTURE_2D,0,j.RGBA,C.x+q.x-8,C.y+q.y-8,16,16,0);j.uniform1i(m.renderType,1);a.disable(j.DEPTH_TEST);a.activeTexture(j.TEXTURE1);a.bindTexture(j.TEXTURE_2D,e);j.drawElements(j.TRIANGLES,6,j.UNSIGNED_SHORT,0);H.positionScreen.copy(v);if(H.customUpdateCallback){H.customUpdateCallback(H)}else{H.updateLensFlares()}j.uniform1i(m.renderType,2);a.enable(j.BLEND);for(var r=0,s=H.lensFlares.length;r<s;r++){var G=H.lensFlares[r];if(G.opacity>0.001&&G.scale>0.001){v.x=G.x;v.y=G.y;v.z=G.z;I=G.size*G.scale/C.w;p.x=I*F;p.y=I;j.uniform3f(m.screenPosition,v.x,v.y,v.z);j.uniform2f(m.scale,p.x,p.y);j.uniform1f(m.rotation,G.rotation);j.uniform1f(m.opacity,G.opacity);j.uniform3f(m.color,G.color.r,G.color.g,G.color.b);a.setBlending(G.blending,G.blendEquation,G.blendSrc,G.blendDst);k.setTexture(G.texture,1);j.drawElements(j.TRIANGLES,6,j.UNSIGNED_SHORT,0)}}}}a.enable(j.CULL_FACE);a.enable(j.DEPTH_TEST);a.setDepthWrite(true);k.resetGLState()};function c(q){var p=j.createProgram();var o=j.createShader(j.FRAGMENT_SHADER);var s=j.createShader(j.VERTEX_SHADER);var r="precision "+k.getPrecision()+" float;\n";j.shaderSource(o,r+q.fragmentShader);j.shaderSource(s,r+q.vertexShader);j.compileShader(o);j.compileShader(s);j.attachShader(p,o);j.attachShader(p,s);j.linkProgram(p);return p}};THREE.SpritePlugin=function(l,k){var h=l.context;var a=l.state;var m,b;var f,e,o;var j;var i=new THREE.Vector3();var d=new THREE.Quaternion();var g=new THREE.Vector3();function p(){var s=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);var q=new Uint16Array([0,1,2,0,2,3]);m=h.createBuffer();b=h.createBuffer();h.bindBuffer(h.ARRAY_BUFFER,m);h.bufferData(h.ARRAY_BUFFER,s,h.STATIC_DRAW);h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,b);h.bufferData(h.ELEMENT_ARRAY_BUFFER,q,h.STATIC_DRAW);f=c();e={position:h.getAttribLocation(f,"position"),uv:h.getAttribLocation(f,"uv")};o={uvOffset:h.getUniformLocation(f,"uvOffset"),uvScale:h.getUniformLocation(f,"uvScale"),rotation:h.getUniformLocation(f,"rotation"),scale:h.getUniformLocation(f,"scale"),color:h.getUniformLocation(f,"color"),map:h.getUniformLocation(f,"map"),opacity:h.getUniformLocation(f,"opacity"),modelViewMatrix:h.getUniformLocation(f,"modelViewMatrix"),projectionMatrix:h.getUniformLocation(f,"projectionMatrix"),fogType:h.getUniformLocation(f,"fogType"),fogDensity:h.getUniformLocation(f,"fogDensity"),fogNear:h.getUniformLocation(f,"fogNear"),fogFar:h.getUniformLocation(f,"fogFar"),fogColor:h.getUniformLocation(f,"fogColor"),alphaTest:h.getUniformLocation(f,"alphaTest")};var r=document.createElement("canvas");r.width=8;r.height=8;var t=r.getContext("2d");t.fillStyle="white";t.fillRect(0,0,8,8);j=new THREE.Texture(r);j.needsUpdate=true}this.render=function(v,C){if(k.length===0){return}if(f===undefined){p()}h.useProgram(f);a.initAttributes();a.enableAttribute(e.position);a.enableAttribute(e.uv);a.disableUnusedAttributes();a.disable(h.CULL_FACE);a.enable(h.BLEND);h.bindBuffer(h.ARRAY_BUFFER,m);h.vertexAttribPointer(e.position,2,h.FLOAT,false,2*8,0);h.vertexAttribPointer(e.uv,2,h.FLOAT,false,2*8,8);h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,b);h.uniformMatrix4fv(o.projectionMatrix,false,C.projectionMatrix.elements);a.activeTexture(h.TEXTURE0);h.uniform1i(o.map,0);var A=0;var E=0;var q=v.fog;if(q){h.uniform3f(o.fogColor,q.color.r,q.color.g,q.color.b);if(q instanceof THREE.Fog){h.uniform1f(o.fogNear,q.near);h.uniform1f(o.fogFar,q.far);h.uniform1i(o.fogType,1);A=1;E=1}else{if(q instanceof THREE.FogExp2){h.uniform1f(o.fogDensity,q.density);h.uniform1i(o.fogType,2);A=2;E=2}}}else{h.uniform1i(o.fogType,0);A=0;E=0}for(var u=0,s=k.length;u<s;u++){var D=k[u];D.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,D.matrixWorld);D.z=-D.modelViewMatrix.elements[14]}k.sort(n);var r=[];for(var u=0,s=k.length;u<s;u++){var D=k[u];var B=D.material;h.uniform1f(o.alphaTest,B.alphaTest);h.uniformMatrix4fv(o.modelViewMatrix,false,D.modelViewMatrix.elements);D.matrixWorld.decompose(i,d,g);r[0]=g.x;r[1]=g.y;var t=0;if(v.fog&&B.fog){t=E}if(A!==t){h.uniform1i(o.fogType,t);A=t}if(B.map!==null){h.uniform2f(o.uvOffset,B.map.offset.x,B.map.offset.y);h.uniform2f(o.uvScale,B.map.repeat.x,B.map.repeat.y)}else{h.uniform2f(o.uvOffset,0,0);h.uniform2f(o.uvScale,1,1)}h.uniform1f(o.opacity,B.opacity);h.uniform3f(o.color,B.color.r,B.color.g,B.color.b);h.uniform1f(o.rotation,B.rotation);h.uniform2fv(o.scale,r);a.setBlending(B.blending,B.blendEquation,B.blendSrc,B.blendDst);a.setDepthTest(B.depthTest);a.setDepthWrite(B.depthWrite);if(B.map&&B.map.image&&B.map.image.width){l.setTexture(B.map,0)}else{l.setTexture(j,0)}h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0)}a.enable(h.CULL_FACE);l.resetGLState()};function c(){var r=h.createProgram();var s=h.createShader(h.VERTEX_SHADER);var q=h.createShader(h.FRAGMENT_SHADER);h.shaderSource(s,["precision "+l.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n"));h.shaderSource(q,["precision "+l.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n"));h.compileShader(s);h.compileShader(q);h.attachShader(r,s);h.attachShader(r,q);h.linkProgram(r);return r}function n(r,q){if(r.renderOrder!==q.renderOrder){return r.renderOrder-q.renderOrder}else{if(r.z!==q.z){return q.z-r.z}else{return q.id-r.id}}}};Object.defineProperties(THREE.Box2.prototype,{empty:{value:function(){console.warn("THREE.Box2: .empty() has been renamed to .isEmpty().");return this.isEmpty()}},isIntersectionBox:{value:function(a){console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)}}});Object.defineProperties(THREE.Box3.prototype,{empty:{value:function(){console.warn("THREE.Box3: .empty() has been renamed to .isEmpty().");return this.isEmpty()}},isIntersectionBox:{value:function(a){console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)}},isIntersectionSphere:{value:function(a){console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(a)}}});Object.defineProperties(THREE.Matrix3.prototype,{multiplyVector3:{value:function(a){console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)}},multiplyVector3Array:{value:function(b){console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(b)}}});Object.defineProperties(THREE.Matrix4.prototype,{extractPosition:{value:function(a){console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(a)}},setRotationFromQuaternion:{value:function(a){console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().");return this.makeRotationFromQuaternion(a)}},multiplyVector3:{value:function(a){console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return a.applyProjection(this)}},multiplyVector4:{value:function(a){console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)}},multiplyVector3Array:{value:function(b){console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.");return this.applyToVector3Array(b)}},rotateAxis:{value:function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");a.transformDirection(this)}},crossVector:{value:function(a){console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)}},translate:{value:function(a){console.error("THREE.Matrix4: .translate() has been removed.")}},rotateX:{value:function(a){console.error("THREE.Matrix4: .rotateX() has been removed.")}},rotateY:{value:function(a){console.error("THREE.Matrix4: .rotateY() has been removed.")}},rotateZ:{value:function(a){console.error("THREE.Matrix4: .rotateZ() has been removed.")}},rotateByAxis:{value:function(a,b){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")}}});Object.defineProperties(THREE.Plane.prototype,{isIntersectionLine:{value:function(a){console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().");return this.intersectsLine(a)}}});Object.defineProperties(THREE.Quaternion.prototype,{multiplyVector3:{value:function(a){console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)}}});Object.defineProperties(THREE.Ray.prototype,{isIntersectionBox:{value:function(a){console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().");return this.intersectsBox(a)}},isIntersectionPlane:{value:function(a){console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().");return this.intersectsPlane(a)}},isIntersectionSphere:{value:function(a){console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().");return this.intersectsSphere(a)}}});Object.defineProperties(THREE.Vector3.prototype,{setEulerFromRotationMatrix:{value:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")}},setEulerFromQuaternion:{value:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")}},getPositionFromMatrix:{value:function(a){console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().");return this.setFromMatrixPosition(a)}},getScaleFromMatrix:{value:function(a){console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().");return this.setFromMatrixScale(a)}},getColumnFromMatrix:{value:function(b,a){console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().");return this.setFromMatrixColumn(b,a)}}});THREE.Face4=function(g,f,k,j,i,h,e){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(g,f,k,i,h,e)};Object.defineProperties(THREE.Object3D.prototype,{eulerOrder:{get:function(){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");return this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order.");this.rotation.order=a}},getChildByName:{value:function(a){console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(a)}},renderDepth:{set:function(a){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")}},translate:{value:function(b,a){console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.");return this.translateOnAxis(a,b)}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(a){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.defineProperties(THREE,{PointCloud:{value:function(b,a){console.warn("THREE.PointCloud has been renamed to THREE.Points.");return new THREE.Points(b,a)}},ParticleSystem:{value:function(b,a){console.warn("THREE.ParticleSystem has been renamed to THREE.Points.");return new THREE.Points(b,a)}}});Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(a){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov.");this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left.");this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right.");this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top.");this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.");this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near.");this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far.");this.shadow.camera.far=a}},shadowCameraVisible:{set:function(a){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(a){console.warn("THREE.Light: .shadowBias is now .shadow.bias.");this.shadow.bias=a}},shadowDarkness:{set:function(a){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(a){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.");this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.");this.shadow.mapSize.height=a}}});Object.defineProperties(THREE.BufferAttribute.prototype,{length:{get:function(){console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count.");return this.array.length}}});Object.defineProperties(THREE.BufferGeometry.prototype,{drawcalls:{get:function(){console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups.");return this.groups}},offsets:{get:function(){console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups.");return this.groups}},addIndex:{value:function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().");this.setIndex(a)}},addDrawCall:{value:function(c,a,b){if(b!==undefined){console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.")}console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup().");this.addGroup(c,a)}},clearDrawCalls:{value:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().");this.clearGroups()}},computeTangents:{value:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")}},computeOffsets:{value:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}});Object.defineProperties(THREE.Material.prototype,{wrapAround:{get:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set:function(a){console.warn("THREE."+this.type+": .wrapAround has been removed.")}},wrapRGB:{get:function(){console.warn("THREE."+this.type+": .wrapRGB has been removed.");return new THREE.Color()}}});Object.defineProperties(THREE,{PointCloudMaterial:{value:function(a){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(a)}},ParticleBasicMaterial:{value:function(a){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(a)}},ParticleSystemMaterial:{value:function(a){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.");return new THREE.PointsMaterial(a)}}});Object.defineProperties(THREE.MeshPhongMaterial.prototype,{metal:{get:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.");return false},set:function(a){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(THREE.ShaderMaterial.prototype,{derivatives:{get:function(){console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");return this.extensions.derivatives},set:function(a){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.");this.extensions.derivatives=a}}});Object.defineProperties(THREE.WebGLRenderer.prototype,{supportsFloatTextures:{value:function(){console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' ).");return this.extensions.get("OES_texture_float")}},supportsHalfFloatTextures:{value:function(){console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' ).");return this.extensions.get("OES_texture_half_float")}},supportsStandardDerivatives:{value:function(){console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' ).");return this.extensions.get("OES_standard_derivatives")}},supportsCompressedTextureS3TC:{value:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' ).");return this.extensions.get("WEBGL_compressed_texture_s3tc")}},supportsCompressedTexturePVRTC:{value:function(){console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' ).");return this.extensions.get("WEBGL_compressed_texture_pvrtc")}},supportsBlendMinMax:{value:function(){console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' ).");return this.extensions.get("EXT_blend_minmax")}},supportsVertexTextures:{value:function(){return this.capabilities.vertexTextures}},supportsInstancedArrays:{value:function(){console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' ).");return this.extensions.get("ANGLE_instanced_arrays")}},enableScissorTest:{value:function(a){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().");this.setScissorTest(a)}},initMaterial:{value:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")}},addPrePlugin:{value:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")}},addPostPlugin:{value:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")}},updateShadowMap:{value:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}},shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.");this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.");this.shadowMap.type=a}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.");this.shadowMap.cullFace=a}}});Object.defineProperties(THREE.WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");return this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.");this.texture.wrapS=a}},wrapT:{get:function(){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");return this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.");this.texture.wrapT=a}},magFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");return this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.");this.texture.magFilter=a}},minFilter:{get:function(){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");return this.texture.minFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.");this.texture.minFilter=a}},anisotropy:{get:function(){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");return this.texture.anisotropy},set:function(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.");this.texture.anisotropy=a}},offset:{get:function(){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");return this.texture.offset},set:function(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset.");this.texture.offset=a}},repeat:{get:function(){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");return this.texture.repeat},set:function(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat.");this.texture.repeat=a}},format:{get:function(){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");return this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format.");this.texture.format=a}},type:{get:function(){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");return this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type.");this.texture.type=a}},generateMipmaps:{get:function(){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");return this.texture.generateMipmaps},set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.");this.texture.generateMipmaps=a}}});THREE.GeometryUtils={merge:function(c,b,d){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var a;if(b instanceof THREE.Mesh){b.matrixAutoUpdate&&b.updateMatrix();a=b.matrix;b=b.geometry}c.merge(b,a,d)},center:function(a){console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.");return a.center()}};THREE.ImageUtils={crossOrigin:undefined,loadTexture:function(c,b,d,f){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var a=new THREE.TextureLoader();a.setCrossOrigin(this.crossOrigin);var e=a.load(c,d,undefined,f);if(b){e.mapping=b}return e},loadTextureCube:function(f,b,c,e){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var a=new THREE.CubeTextureLoader();a.setCrossOrigin(this.crossOrigin);var d=a.load(f,c,undefined,e);if(b){d.mapping=b}return d},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};THREE.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js.");this.projectVector=function(a,b){console.warn("THREE.Projector: .projectVector() is now vector.project().");a.project(b)};this.unprojectVector=function(a,b){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject().");a.unproject(b)};this.pickingRay=function(a,b){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};THREE.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js");this.domElement=document.createElement("canvas");this.clear=function(){};this.render=function(){};this.setClearColor=function(){};this.setSize=function(){}};THREE.MeshFaceMaterial=THREE.MultiMaterial;THREE.CurveUtils={tangentQuadraticBezier:function(a,d,c,b){return 2*(1-a)*(c-d)+2*a*(b-c)},tangentCubicBezier:function(a,e,d,c,b){return -3*e*(1-a)*(1-a)+3*d*(1-a)*(1-a)-6*a*d*(1-a)+6*a*c*(1-a)-3*a*a*c+3*a*a*b},tangentSpline:function(i,h,g,f,d){var e=6*i*i-6*i;var b=3*i*i-4*i+1;var c=-6*i*i+6*i;var a=3*i*i-2*i;return e+b+c+a},interpolate:function(h,g,e,d,i){var f=(e-h)*0.5;var c=(d-g)*0.5;var b=i*i;var a=i*b;return(2*g-2*e+f+c)*a+(-3*g+3*e-2*f-c)*b+f*i+g}};THREE.SceneUtils={createMultiMaterialObject:function(e,b){var d=new THREE.Group();for(var c=0,a=b.length;c<a;c++){d.add(new THREE.Mesh(e,b[c]))}return d},detach:function(c,a,b){c.applyMatrix(a.matrixWorld);a.remove(c);b.add(c)},attach:function(d,c,a){var b=new THREE.Matrix4();b.getInverse(a.matrixWorld);d.applyMatrix(b);c.remove(d);a.add(d)}};THREE.ShapeUtils={area:function(c){var f=c.length;var b=0;for(var e=f-1,d=0;d<f;e=d++){b+=c[e].x*c[d].y-c[d].x*c[e].y}return b*0.5},triangulate:(function(){function a(F,t,s,o,E,M){var D;var q,l,K,I;var e,c,C,B;q=F[M[t]].x;l=F[M[t]].y;K=F[M[s]].x;I=F[M[s]].y;e=F[M[o]].x;c=F[M[o]].y;if(Number.EPSILON>(((K-q)*(c-l))-((I-l)*(e-q)))){return false}var d,b,r,m,L,J;var h,g,H,G,j,i;var f,k,A;d=e-K;b=c-I;r=q-e;m=l-c;L=K-q;J=I-l;for(D=0;D<E;D++){C=F[M[D]].x;B=F[M[D]].y;if(((C===q)&&(B===l))||((C===K)&&(B===I))||((C===e)&&(B===c))){continue}h=C-q;g=B-l;H=C-K;G=B-I;j=C-e;i=B-c;A=d*G-b*H;f=L*g-J*h;k=r*i-m*j;if((A>=-Number.EPSILON)&&(k>=-Number.EPSILON)&&(f>=-Number.EPSILON)){return false}}return true}return function(e,p){var d=e.length;if(d<3){return null}var B=[],m=[],h=[];var q,o,l;if(THREE.ShapeUtils.area(e)>0){for(o=0;o<d;o++){m[o]=o}}else{for(o=0;o<d;o++){m[o]=(d-1)-o}}var g=d;var f=2*g;for(o=g-1;g>2;){if((f--)<=0){console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");if(p){return h}return B}q=o;if(g<=q){q=0}o=q+1;if(g<=o){o=0}l=o+1;if(g<=l){l=0}if(a(e,q,o,l,g,m)){var k,j,i,A,r;k=m[q];j=m[o];i=m[l];B.push([e[k],e[j],e[i]]);h.push([m[q],m[o],m[l]]);for(A=o,r=o+1;r<g;A++,r++){m[A]=m[r]}g--;f=2*g}}if(p){return h}return B}})(),triangulateShape:function(p,j){function e(i,h,f){if(i.x!==h.x){if(i.x<h.x){return((i.x<=f.x)&&(f.x<=h.x))}else{return((h.x<=f.x)&&(f.x<=i.x))}}else{if(i.y<h.y){return((i.y<=f.y)&&(f.y<=h.y))}else{return((h.y<=f.y)&&(f.y<=i.y))}}}function m(T,S,v,i,P){var I=S.x-T.x,H=S.y-T.y;var R=i.x-v.x,Q=i.y-v.y;var N=T.x-v.x;var M=T.y-v.y;var O=H*R-I*Q;var F=H*N-I*M;if(Math.abs(O)>Number.EPSILON){var E;if(O>0){if((F<0)||(F>O)){return[]}E=Q*N-R*M;if((E<0)||(E>O)){return[]}}else{if((F>0)||(F<O)){return[]}E=Q*N-R*M;if((E>0)||(E<O)){return[]}}if(E===0){if((P)&&((F===0)||(F===O))){return[]}return[T]}if(E===O){if((P)&&((F===0)||(F===O))){return[]}return[S]}if(F===0){return[v]}if(F===O){return[i]}var h=E/O;return[{x:T.x+h*I,y:T.y+h*H}]}else{if((F!==0)||(Q*N!==R*M)){return[]}var J=((I===0)&&(H===0));var D=((R===0)&&(Q===0));if(J&&D){if((T.x!==v.x)||(T.y!==v.y)){return[]}return[T]}if(J){if(!e(v,i,T)){return[]}return[T]}if(D){if(!e(T,S,v)){return[]}return[v]}var U,f,L,G;var B,C,A,K;if(I!==0){if(T.x<S.x){U=T;L=T.x;f=S;G=S.x}else{U=S;L=S.x;f=T;G=T.x}if(v.x<i.x){B=v;A=v.x;C=i;K=i.x}else{B=i;A=i.x;C=v;K=v.x}}else{if(T.y<S.y){U=T;L=T.y;f=S;G=S.y}else{U=S;L=S.y;f=T;G=T.y}if(v.y<i.y){B=v;A=v.y;C=i;K=i.y}else{B=i;A=i.y;C=v;K=v.y}}if(L<=A){if(G<A){return[]}if(G===A){if(P){return[]}return[B]}if(G<=K){return[B,f]}return[B,C]}else{if(L>K){return[]}if(L===K){if(P){return[]}return[U]}if(G<=K){return[U,f]}return[U,C]}}}function s(v,E,i,G){var F=E.x-v.x,D=E.y-v.y;var I=i.x-v.x,H=i.y-v.y;var C=G.x-v.x,B=G.y-v.y;var h=F*H-D*I;var f=F*B-D*C;if(Math.abs(h)>Number.EPSILON){var A=C*H-B*I;if(h>0){return((f>=0)&&(A>=0))}else{return((f>=0)||(A>=0))}}else{return(f>0)}}function k(L,H){var i=L.concat();var K;function M(Y,ab){var X=i.length-1;var aa=Y-1;if(aa<0){aa=X}var W=Y+1;if(W>X){W=0}var ac=s(i[Y],i[aa],i[W],K[ab]);if(!ac){return false}var Z=K.length-1;var V=ab-1;if(V<0){V=Z}var h=ab+1;if(h>Z){h=0}ac=s(K[ab],K[V],K[h],i[Y]);if(!ac){return false}return true}function f(V,W){var h,X,Y;for(h=0;h<i.length;h++){X=h+1;X%=i.length;Y=m(V,W,i[h],i[X],true);if(Y.length>0){return true}}return false}var C=[];function O(V,W){var X,aa,h,Y,Z;for(X=0;X<C.length;X++){aa=H[C[X]];for(h=0;h<aa.length;h++){Y=h+1;Y%=aa.length;Z=m(V,W,aa[h],aa[Y],true);if(Z.length>0){return true}}}return false}var I,F,U,R,S,P,B=[],T,Q,E,D;for(var N=0,A=H.length;N<A;N++){C.push(N)}var v=0;var J=C.length*2;while(C.length>0){J--;if(J<0){console.log("Infinite Loop! Holes left:"+C.length+", Probably Hole outside Shape!");break}for(F=v;F<i.length;F++){U=i[F];I=-1;for(var N=0;N<C.length;N++){S=C[N];P=U.x+":"+U.y+":"+S;if(B[P]!==undefined){continue}K=H[S];for(var G=0;G<K.length;G++){R=K[G];if(!M(F,G)){continue}if(f(U,R)){continue}if(O(U,R)){continue}I=G;C.splice(N,1);T=i.slice(0,F+1);Q=i.slice(F);E=K.slice(I);D=K.slice(0,I+1);i=T.concat(E).concat(D).concat(Q);v=F;break}if(I>=0){break}B[P]=true}if(I>=0){break}}}return i}var q,n,t,l,u,d,c={};var g=p.concat();for(var r=0,b=j.length;r<b;r++){Array.prototype.push.apply(g,j[r])}for(q=0,n=g.length;q<n;q++){u=g[q].x+":"+g[q].y;if(c[u]!==undefined){console.warn("THREE.Shape: Duplicate point",u)}c[u]=q}var a=k(p,j);var o=THREE.ShapeUtils.triangulate(a,false);for(q=0,n=o.length;q<n;q++){l=o[q];for(t=0;t<3;t++){u=l[t].x+":"+l[t].y;d=c[u];if(d!==undefined){l[t]=d}}}return o.concat()},isClockWise:function(a){return THREE.ShapeUtils.area(a)<0},b2:(function(){function a(e,f){var d=1-e;return d*d*f}function c(d,e){return 2*(1-d)*d*e}function b(d,e){return d*d*e}return function(d,g,f,e){return a(d,g)+c(d,f)+b(d,e)}})(),b3:(function(){function d(f,g){var e=1-f;return e*e*e*g}function c(f,g){var e=1-f;return 3*e*e*f*g}function b(f,g){var e=1-f;return 3*e*f*f*g}function a(e,f){return e*e*e*f}return function(e,i,h,g,f){return d(e,i)+c(e,h)+b(e,g)+a(e,f)}})()};THREE.Curve=function(){};THREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(a){console.warn("THREE.Curve: Warning, getPoint() not implemented!");return null},getPointAt:function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)},getPoints:function(a){if(!a){a=5}var c,b=[];for(c=0;c<=a;c++){b.push(this.getPoint(c/a))}return b},getSpacedPoints:function(a){if(!a){a=5}var c,b=[];for(c=0;c<=a;c++){b.push(this.getPointAt(c/a))}return b},getLength:function(){var a=this.getLengths();return a[a.length-1]},getLengths:function(b){if(!b){b=(this.__arcLengthDivisions)?(this.__arcLengthDivisions):200}if(this.cacheArcLengths&&(this.cacheArcLengths.length===b+1)&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=false;var a=[];var f,d=this.getPoint(0);var e,c=0;a.push(0);for(e=1;e<=b;e++){f=this.getPoint(e/b);c+=f.distanceTo(d);a.push(c);d=f}this.cacheArcLengths=a;return a},updateArcLengths:function(){this.needsUpdate=true;this.getLengths()},getUtoTmapping:function(m,a){var b=this.getLengths();var e=0,j=b.length;var k;if(a){k=a}else{k=m*b[j-1]}var h=0,d=j-1,l;while(h<=d){e=Math.floor(h+(d-h)/2);l=b[e]-k;if(l<0){h=e+1}else{if(l>0){d=e-1}else{d=e;break}}}e=d;if(b[e]===k){var o=e/(j-1);return o}var f=b[e];var n=b[e+1];var c=n-f;var g=(k-f)/c;var o=(e+g)/(j-1);return o},getTangent:function(b){var g=0.0001;var d=b-g;var c=b+g;if(d<0){d=0}if(c>1){c=1}var f=this.getPoint(d);var e=this.getPoint(c);var a=e.clone().sub(f);return a.normalize()},getTangentAt:function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)}};THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.CurvePath=function(){this.curves=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.closePath=function(){var b=this.curves[0].getPoint(0);var a=this.curves[this.curves.length-1].getPoint(1);if(!b.equals(a)){this.curves.push(new THREE.LineCurve(a,b))}};THREE.CurvePath.prototype.getPoint=function(c){var h=c*this.getLength();var g=this.getCurveLengths();var b=0;while(b<g.length){if(g[b]>=h){var e=g[b]-h;var f=this.curves[b];var a=1-e/f.getLength();return f.getPointAt(a)}b++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths}var d=[],c=0;for(var b=0,a=this.curves.length;b<a;b++){c+=this.curves[b].getLength();d.push(c)}this.cacheLengths=d;return d};THREE.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(d){var e=new THREE.Geometry();for(var c=0,b=d.length;c<b;c++){var a=d[c];e.vertices.push(new THREE.Vector3(a.x,a.y,a.z||0))}return e};THREE.Font=function(a){this.data=a};THREE.Font.prototype={constructor:THREE.Font,generateShapes:function(h,j,c){function g(q){var m=String(q).split("");var p=j/e.resolution;var o=0;var n=[];for(var l=0;l<m.length;l++){var k=f(m[l],p,o);o+=k.offset;n.push(k.path)}return n}function f(M,N,o){var v=e.glyphs[M]||e.glyphs["?"];if(!v){return}var E=new THREE.Path();var O=[],p=THREE.ShapeUtils.b2,n=THREE.ShapeUtils.b3;var u,s,r,q,D,L,B,K,A,J,k;if(v.o){var m=v._cachedOutline||(v._cachedOutline=v.o.split(" "));for(var I=0,G=m.length;I<G;){var H=m[I++];switch(H){case"m":u=m[I++]*N+o;s=m[I++]*N;E.moveTo(u,s);break;case"l":u=m[I++]*N+o;s=m[I++]*N;E.lineTo(u,s);break;case"q":r=m[I++]*N+o;q=m[I++]*N;B=m[I++]*N+o;K=m[I++]*N;E.quadraticCurveTo(B,K,r,q);k=O[O.length-1];if(k){D=k.x;L=k.y;for(var F=1;F<=c;F++){var C=F/c;p(C,D,B,r);p(C,L,K,q)}}break;case"b":r=m[I++]*N+o;q=m[I++]*N;B=m[I++]*N+o;K=m[I++]*N;A=m[I++]*N+o;J=m[I++]*N;E.bezierCurveTo(B,K,A,J,r,q);k=O[O.length-1];if(k){D=k.x;L=k.y;for(var F=1;F<=c;F++){var C=F/c;n(C,D,B,A,r);n(C,L,K,J,q)}}break}}}return{offset:v.ha*N,path:E}}if(j===undefined){j=100}if(c===undefined){c=4}var e=this.data;var i=g(h);var b=[];for(var a=0,d=i.length;a<d;a++){Array.prototype.push.apply(b,i[a].toShapes())}return b}};THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];if(a){this.fromPoints(a)}};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.Path.prototype.constructor=THREE.Path;THREE.Path.prototype.fromPoints=function(c){this.moveTo(c[0].x,c[0].y);for(var b=1,a=c.length;b<a;b++){this.lineTo(c[b].x,c[b].y)}};THREE.Path.prototype.moveTo=function(a,b){this.actions.push({action:"moveTo",args:[a,b]})};THREE.Path.prototype.lineTo=function(a,f){var d=this.actions[this.actions.length-1].args;var b=d[d.length-2];var c=d[d.length-1];var e=new THREE.LineCurve(new THREE.Vector2(b,c),new THREE.Vector2(a,f));this.curves.push(e);this.actions.push({action:"lineTo",args:[a,f]})};THREE.Path.prototype.quadraticCurveTo=function(g,f,e,b){var d=this.actions[this.actions.length-1].args;var a=d[d.length-2];var c=d[d.length-1];var h=new THREE.QuadraticBezierCurve(new THREE.Vector2(a,c),new THREE.Vector2(g,f),new THREE.Vector2(e,b));this.curves.push(h);this.actions.push({action:"quadraticCurveTo",args:[g,f,e,b]})};THREE.Path.prototype.bezierCurveTo=function(e,b,j,i,g,f){var a=this.actions[this.actions.length-1].args;var c=a[a.length-2];var h=a[a.length-1];var d=new THREE.CubicBezierCurve(new THREE.Vector2(c,h),new THREE.Vector2(e,b),new THREE.Vector2(j,i),new THREE.Vector2(g,f));this.curves.push(d);this.actions.push({action:"bezierCurveTo",args:[e,b,j,i,g,f]})};THREE.Path.prototype.splineThru=function(g){var a=Array.prototype.slice.call(arguments);var d=this.actions[this.actions.length-1].args;var b=d[d.length-2];var c=d[d.length-1];var f=[new THREE.Vector2(b,c)];Array.prototype.push.apply(f,g);var e=new THREE.SplineCurve(f);this.curves.push(e);this.actions.push({action:"splineThru",args:a})};THREE.Path.prototype.arc=function(h,f,g,d,a,b){var c=this.actions[this.actions.length-1].args;var e=c[c.length-2];var i=c[c.length-1];this.absarc(h+e,f+i,g,d,a,b)};THREE.Path.prototype.absarc=function(e,d,f,c,b,a){this.absellipse(e,d,f,f,c,b,a)};THREE.Path.prototype.ellipse=function(g,f,i,h,d,a,b,k){var c=this.actions[this.actions.length-1].args;var e=c[c.length-2];var j=c[c.length-1];this.absellipse(g+e,f+j,i,h,d,a,b,k)};THREE.Path.prototype.absellipse=function(f,e,j,g,c,a,b,k){var h=[f,e,j,g,c,a,b,k||0];var d=new THREE.EllipseCurve(f,e,j,g,c,a,b,k);this.curves.push(d);var i=d.getPoint(1);h.push(i.x);h.push(i.y);this.actions.push({action:"ellipse",args:h})};THREE.Path.prototype.getSpacedPoints=function(b){if(!b){b=40}var c=[];for(var a=0;a<b;a++){c.push(this.getPoint(a/b))}if(this.autoClose){c.push(c[0])}return c};THREE.Path.prototype.getPoints=function(Y){Y=Y||12;var u=THREE.ShapeUtils.b2;var s=THREE.ShapeUtils.b3;var J=[];var K,G,X,D,Z,E,a,F,b,S,R;for(var U=0,Q=this.actions.length;U<Q;U++){var B=this.actions[U];var c=B.action;var O=B.args;switch(c){case"moveTo":J.push(new THREE.Vector2(O[0],O[1]));break;case"lineTo":J.push(new THREE.Vector2(O[0],O[1]));break;case"quadraticCurveTo":K=O[2];G=O[3];Z=O[0];E=O[1];if(J.length>0){b=J[J.length-1];a=b.x;F=b.y}else{b=this.actions[U-1].args;a=b[b.length-2];F=b[b.length-1]}for(var T=1;T<=Y;T++){var N=T/Y;S=u(N,a,Z,K);R=u(N,F,E,G);J.push(new THREE.Vector2(S,R))}break;case"bezierCurveTo":K=O[4];G=O[5];Z=O[0];E=O[1];X=O[2];D=O[3];if(J.length>0){b=J[J.length-1];a=b.x;F=b.y}else{b=this.actions[U-1].args;a=b[b.length-2];F=b[b.length-1]}for(var T=1;T<=Y;T++){var N=T/Y;S=s(N,a,Z,X,K);R=s(N,F,E,D,G);J.push(new THREE.Vector2(S,R))}break;case"splineThru":b=this.actions[U-1].args;var m=new THREE.Vector2(b[b.length-2],b[b.length-1]);var g=[m];var P=Y*O[0].length;g=g.concat(O[0]);var W=new THREE.SplineCurve(g);for(var T=1;T<=P;T++){J.push(W.getPointAt(T/P))}break;case"arc":var q=O[0],p=O[1],v=O[2],V=O[3],M=O[4],k=!!O[5];var I=M-V;var o;var d=Y*2;for(var T=1;T<=d;T++){var N=T/d;if(!k){N=1-N}o=V+N*I;S=q+v*Math.cos(o);R=p+v*Math.sin(o);J.push(new THREE.Vector2(S,R))}break;case"ellipse":var q=O[0],p=O[1],A=O[2],C=O[3],V=O[4],M=O[5],k=!!O[6],r=O[7];var I=M-V;var o;var d=Y*2;var e,h;if(r!==0){e=Math.cos(r);h=Math.sin(r)}for(var T=1;T<=d;T++){var N=T/d;if(!k){N=1-N}o=V+N*I;S=q+A*Math.cos(o);R=p+C*Math.sin(o);if(r!==0){var L=S,H=R;S=(L-q)*e-(H-p)*h+q;R=(L-q)*h+(H-p)*e+p}J.push(new THREE.Vector2(S,R))}break}}var f=J[J.length-1];if(Math.abs(f.x-J[0].x)<Number.EPSILON&&Math.abs(f.y-J[0].y)<Number.EPSILON){J.splice(J.length-1,1)}if(this.autoClose){J.push(J[0])}return J};THREE.Path.prototype.toShapes=function(L,t){function h(P){var T=[],S=new THREE.Path();for(var O=0,j=P.length;O<j;O++){var Q=P[O];var N=Q.args;var R=Q.action;if(R==="moveTo"){if(S.actions.length!==0){T.push(S);S=new THREE.Path()}}S[R].apply(S,N)}if(S.actions.length!==0){T.push(S)}return T}function m(O){var N=[];for(var P=0,j=O.length;P<j;P++){var Q=O[P];var R=new THREE.Shape();R.actions=Q.actions;R.curves=Q.curves;N.push(R)}return N}function q(T,N){var P=N.length;var O=false;for(var j=P-1,i=0;i<P;j=i++){var l=N[j];var U=N[i];var S=U.x-l.x;var Q=U.y-l.y;if(Math.abs(Q)>Number.EPSILON){if(Q<0){l=N[i];S=-S;U=N[j];Q=-Q}if((T.y<l.y)||(T.y>U.y)){continue}if(T.y===l.y){if(T.x===l.x){return true}}else{var R=Q*(T.x-l.x)-S*(T.y-l.y);if(R===0){return true}if(R<0){continue}O=!O}}else{if(T.y!==l.y){continue}if(((U.x<=T.x)&&(T.x<=l.x))||((l.x<=T.x)&&(T.x<=U.x))){return true}}}return O}var J=THREE.ShapeUtils.isClockWise;var d=h(this.actions);if(d.length===0){return[]}if(t===true){return m(d)}var I,G,o,r=[];if(d.length===1){G=d[0];o=new THREE.Shape();o.actions=G.actions;o.curves=G.curves;r.push(o);return r}var a=!J(d[0].getPoints());a=L?!a:a;var p=[];var C=[];var H=[];var g=0;var u;C[g]=undefined;H[g]=[];for(var D=0,A=d.length;D<A;D++){G=d[D];u=G.getPoints();I=J(u);I=L?!I:I;if(I){if((!a)&&(C[g])){g++}C[g]={s:new THREE.Shape(),p:u};C[g].s.actions=G.actions;C[g].s.curves=G.curves;if(a){g++}H[g]=[]}else{H[g].push({h:G,p:u[0]})}}if(!C[0]){return m(d)}if(C.length>1){var K=false;var v=[];for(var M=0,c=C.length;M<c;M++){p[M]=[]}for(var M=0,c=C.length;M<c;M++){var s=H[M];for(var k=0;k<s.length;k++){var b=s[k];var f=true;for(var e=0;e<C.length;e++){if(q(b.p,C[e].p)){if(M!==e){v.push({froms:M,tos:e,hole:k})}if(f){f=false;p[e].push(b)}else{K=true}}}if(f){p[M].push(b)}}}if(v.length>0){if(!K){H=p}}}var F;for(var D=0,n=C.length;D<n;D++){o=C[D].s;r.push(o);F=H[D];for(var B=0,E=F.length;B<E;B++){o.holes.push(F[B].h)}}return r};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.constructor=THREE.Shape;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(c){var d=[];for(var b=0,a=this.holes.length;b<a;b++){d[b]=this.holes[b].getPoints(c)}return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.extractAllPoints(a)};THREE.LineCurve=function(b,a){this.v1=b;this.v2=a};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(b){var a=this.v2.clone().sub(this.v1);a.multiplyScalar(b).add(this.v1);return a};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){var b=this.v2.clone().sub(this.v1);return b.normalize()};THREE.QuadraticBezierCurve=function(a,c,b){this.v0=a;this.v1=c;this.v2=b};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;THREE.QuadraticBezierCurve.prototype.getPoint=function(b){var a=THREE.ShapeUtils.b2;return new THREE.Vector2(a(b,this.v0.x,this.v1.x,this.v2.x),a(b,this.v0.y,this.v1.y,this.v2.y))};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=THREE.CurveUtils.tangentQuadraticBezier;return new THREE.Vector2(b(a,this.v0.x,this.v1.x,this.v2.x),b(a,this.v0.y,this.v1.y,this.v2.y)).normalize()};THREE.CubicBezierCurve=function(a,d,c,b){this.v0=a;this.v1=d;this.v2=c;this.v3=b};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;THREE.CubicBezierCurve.prototype.getPoint=function(b){var a=THREE.ShapeUtils.b3;return new THREE.Vector2(a(b,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a(b,this.v0.y,this.v1.y,this.v2.y,this.v3.y))};THREE.CubicBezierCurve.prototype.getTangent=function(b){var a=THREE.CurveUtils.tangentCubicBezier;return new THREE.Vector2(a(b,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a(b,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()};THREE.SplineCurve=function(a){this.points=(a==undefined)?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;THREE.SplineCurve.prototype.getPoint=function(j){var i=this.points;var h=(i.length-1)*j;var a=Math.floor(h);var b=h-a;var g=i[a===0?a:a-1];var f=i[a];var e=i[a>i.length-2?i.length-1:a+1];var d=i[a>i.length-3?i.length-1:a+2];var c=THREE.CurveUtils.interpolate;return new THREE.Vector2(c(g.x,f.x,e.x,d.x,b),c(g.y,f.y,e.y,d.y,b))};THREE.EllipseCurve=function(g,e,h,a,d,c,b,f){this.aX=g;this.aY=e;this.xRadius=h;this.yRadius=a;this.aStartAngle=d;this.aEndAngle=c;this.aClockwise=b;this.aRotation=f||0};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve;THREE.EllipseCurve.prototype.getPoint=function(i){var a=this.aEndAngle-this.aStartAngle;if(a<0){a+=Math.PI*2}if(a>Math.PI*2){a-=Math.PI*2}var b;if(this.aClockwise===true){b=this.aEndAngle+(1-i)*(Math.PI*2-a)}else{b=this.aStartAngle+i*a}var g=this.aX+this.xRadius*Math.cos(b);var f=this.aY+this.yRadius*Math.sin(b);if(this.aRotation!==0){var h=Math.cos(this.aRotation);var e=Math.sin(this.aRotation);var d=g,c=f;g=(d-this.aX)*h-(c-this.aY)*e+this.aX;f=(d-this.aX)*e+(c-this.aY)*h+this.aY}return new THREE.Vector2(g,f)};THREE.ArcCurve=function(e,d,f,c,b,a){THREE.EllipseCurve.call(this,e,d,f,f,c,b,a)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.LineCurve3=THREE.Curve.create(function(b,a){this.v1=b;this.v2=a},function(b){var a=new THREE.Vector3();a.subVectors(this.v2,this.v1);a.multiplyScalar(b);a.add(this.v1);return a});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,c,b){this.v0=a;this.v1=c;this.v2=b},function(b){var a=THREE.ShapeUtils.b2;return new THREE.Vector3(a(b,this.v0.x,this.v1.x,this.v2.x),a(b,this.v0.y,this.v1.y,this.v2.y),a(b,this.v0.z,this.v1.z,this.v2.z))});THREE.CubicBezierCurve3=THREE.Curve.create(function(a,d,c,b){this.v0=a;this.v1=d;this.v2=c;this.v3=b},function(b){var a=THREE.ShapeUtils.b3;return new THREE.Vector3(a(b,this.v0.x,this.v1.x,this.v2.x,this.v3.x),a(b,this.v0.y,this.v1.y,this.v2.y,this.v3.y),a(b,this.v0.z,this.v1.z,this.v2.z,this.v3.z))});THREE.SplineCurve3=THREE.Curve.create(function(a){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3");this.points=(a==undefined)?[]:a},function(j){var i=this.points;var h=(i.length-1)*j;var a=Math.floor(h);var b=h-a;var g=i[a==0?a:a-1];var f=i[a];var e=i[a>i.length-2?i.length-1:a+1];var d=i[a>i.length-3?i.length-1:a+2];var c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(g.x,f.x,e.x,d.x,b),c(g.y,f.y,e.y,d.y,b),c(g.z,f.z,e.z,d.z,b))});THREE.CatmullRomCurve3=(function(){var e=new THREE.Vector3(),d=new a(),c=new a(),b=new a();function a(){}a.prototype.init=function(g,f,i,h){this.c0=g;this.c1=i;this.c2=-3*g+3*f-2*i-h;this.c3=2*g-2*f+i+h};a.prototype.initNonuniformCatmullRom=function(i,h,g,f,l,k,j){var n=(h-i)/l-(g-i)/(l+k)+(g-h)/k;var m=(g-h)/k-(f-h)/(k+j)+(f-g)/j;n*=k;m*=k;this.init(h,g,n,m)};a.prototype.initCatmullRom=function(j,h,g,f,i){this.init(h,g,i*(g-j),i*(f-h))};a.prototype.calc=function(g){var h=g*g;var f=h*g;return this.c0+this.c1*g+this.c2*h+this.c3*f};return THREE.Curve.create(function(f){this.points=f||[];this.closed=false},function(B){var s=this.points,p,f,k,j;j=s.length;if(j<2){console.log("duh, you need at least 2 points")}p=(j-(this.closed?0:1))*B;f=Math.floor(p);k=p-f;if(this.closed){f+=f>0?0:(Math.floor(Math.abs(f)/s.length)+1)*s.length}else{if(k===0&&f===j-1){f=j-2;k=1}}var A,u,r,o;if(this.closed||f>0){A=s[(f-1)%j]}else{e.subVectors(s[0],s[1]).add(s[0]);A=e}u=s[f%j];r=s[(f+1)%j];if(this.closed||f+2<j){o=s[(f+2)%j]}else{e.subVectors(s[j-1],s[j-2]).add(s[j-1]);o=e}if(this.type===undefined||this.type==="centripetal"||this.type==="chordal"){var m=this.type==="chordal"?0.5:0.25;var i=Math.pow(A.distanceToSquared(u),m);var h=Math.pow(u.distanceToSquared(r),m);var g=Math.pow(r.distanceToSquared(o),m);if(h<0.0001){h=1}if(i<0.0001){i=h}if(g<0.0001){g=h}d.initNonuniformCatmullRom(A.x,u.x,r.x,o.x,i,h,g);c.initNonuniformCatmullRom(A.y,u.y,r.y,o.y,i,h,g);b.initNonuniformCatmullRom(A.z,u.z,r.z,o.z,i,h,g)}else{if(this.type==="catmullrom"){var n=this.tension!==undefined?this.tension:0.5;d.initCatmullRom(A.x,u.x,r.x,o.x,n);c.initCatmullRom(A.y,u.y,r.y,o.y,n);b.initCatmullRom(A.z,u.z,r.z,o.z,n)}}var q=new THREE.Vector3(d.calc(k),c.calc(k),b.calc(k));return q})})();THREE.ClosedSplineCurve3=function(a){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.");THREE.CatmullRomCurve3.call(this,a);this.type="catmullrom";this.closed=true};THREE.ClosedSplineCurve3.prototype=Object.create(THREE.CatmullRomCurve3.prototype);THREE.BoxGeometry=function(a,i,e,b,h,d){THREE.Geometry.call(this);this.type="BoxGeometry";this.parameters={width:a,height:i,depth:e,widthSegments:b,heightSegments:h,depthSegments:d};this.widthSegments=b||1;this.heightSegments=h||1;this.depthSegments=d||1;var k=this;var j=a/2;var g=i/2;var c=e/2;f("z","y",-1,-1,e,i,j,0);f("z","y",1,-1,e,i,-j,1);f("x","z",1,1,a,e,g,2);f("x","z",1,-1,a,e,-g,3);f("x","y",1,-1,a,i,c,4);f("x","y",-1,-1,a,i,-c,5);function f(E,D,l,s,G,F,V,A){var C,q,p,K=k.widthSegments,I=k.heightSegments,r=G/2,o=F/2,t=k.vertices.length;if((E==="x"&&D==="y")||(E==="y"&&D==="x")){C="z"}else{if((E==="x"&&D==="z")||(E==="z"&&D==="x")){C="y";I=k.depthSegments}else{if((E==="z"&&D==="y")||(E==="y"&&D==="z")){C="x";K=k.depthSegments}}}var M=K+1,n=I+1,U=G/K,P=F/I,T=new THREE.Vector3();T[C]=V>0?1:-1;for(p=0;p<n;p++){for(q=0;q<M;q++){var m=new THREE.Vector3();m[E]=(q*U-r)*l;m[D]=(p*P-o)*s;m[C]=V;k.vertices.push(m)}}for(p=0;p<I;p++){for(q=0;q<K;q++){var S=q+M*p;var R=q+M*(p+1);var Q=(q+1)+M*(p+1);var O=(q+1)+M*p;var N=new THREE.Vector2(q/K,1-p/I);var L=new THREE.Vector2(q/K,1-(p+1)/I);var J=new THREE.Vector2((q+1)/K,1-(p+1)/I);var H=new THREE.Vector2((q+1)/K,1-p/I);var B=new THREE.Face3(S+t,R+t,O+t);B.normal.copy(T);B.vertexNormals.push(T.clone(),T.clone(),T.clone());B.materialIndex=A;k.faces.push(B);k.faceVertexUvs[0].push([N,L,H]);B=new THREE.Face3(R+t,Q+t,O+t);B.normal.copy(T);B.vertexNormals.push(T.clone(),T.clone(),T.clone());B.materialIndex=A;k.faces.push(B);k.faceVertexUvs[0].push([L.clone(),J,H.clone()])}}}this.mergeVertices()};THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry;THREE.CubeGeometry=THREE.BoxGeometry;THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.type="CircleGeometry";this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d};this.fromBufferGeometry(new THREE.CircleBufferGeometry(a,b,c,d))};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry;THREE.CircleBufferGeometry=function(h,f,b,a){THREE.BufferGeometry.call(this);this.type="CircleBufferGeometry";this.parameters={radius:h,segments:f,thetaStart:b,thetaLength:a};h=h||50;f=f!==undefined?Math.max(3,f):8;b=b!==undefined?b:0;a=a!==undefined?a:Math.PI*2;var j=f+2;var e=new Float32Array(j*3);var k=new Float32Array(j*3);var c=new Float32Array(j*2);k[2]=1;c[0]=0.5;c[1]=0.5;for(var n=0,d=3,m=2;n<=f;n++,d+=3,m+=2){var g=b+n/f*a;e[d]=h*Math.cos(g);e[d+1]=h*Math.sin(g);k[d+2]=1;c[m]=(e[d]/h+1)/2;c[m+1]=(e[d+1]/h+1)/2}var l=[];for(var d=1;d<=f;d++){l.push(d,d+1,0)}this.setIndex(new THREE.BufferAttribute(new Uint16Array(l),1));this.addAttribute("position",new THREE.BufferAttribute(e,3));this.addAttribute("normal",new THREE.BufferAttribute(k,3));this.addAttribute("uv",new THREE.BufferAttribute(c,2));this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),h)};THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry;THREE.CylinderGeometry=function(l,N,C,e,A,K,g,D){THREE.Geometry.call(this);this.type="CylinderGeometry";this.parameters={radiusTop:l,radiusBottom:N,height:C,radialSegments:e,heightSegments:A,openEnded:K,thetaStart:g,thetaLength:D};l=l!==undefined?l:20;N=N!==undefined?N:20;C=C!==undefined?C:100;e=e||8;A=A||1;K=K!==undefined?K:false;g=g!==undefined?g:0;D=D!==undefined?D:2*Math.PI;var E=C/2;var q,p,h=[],r=[];for(p=0;p<=A;p++){var B=[];var M=[];var s=p/A;var f=s*(N-l)+l;for(q=0;q<=e;q++){var t=q/e;var I=new THREE.Vector3();I.x=f*Math.sin(t*D+g);I.y=-s*C+E;I.z=f*Math.cos(t*D+g);this.vertices.push(I);B.push(this.vertices.length-1);M.push(new THREE.Vector2(t,1-s))}h.push(B);r.push(M)}var G=(N-l)/C;var n,k;for(q=0;q<e;q++){if(l!==0){n=this.vertices[h[0][q]].clone();k=this.vertices[h[0][q+1]].clone()}else{n=this.vertices[h[1][q]].clone();k=this.vertices[h[1][q+1]].clone()}n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*G).normalize();k.setY(Math.sqrt(k.x*k.x+k.z*k.z)*G).normalize();for(p=0;p<A;p++){var d=h[p][q];var c=h[p+1][q];var b=h[p+1][q+1];var a=h[p][q+1];var o=n.clone();var m=n.clone();var j=k.clone();var i=k.clone();var L=r[p][q].clone();var J=r[p+1][q].clone();var H=r[p+1][q+1].clone();var F=r[p][q+1].clone();this.faces.push(new THREE.Face3(d,c,a,[o,m,i]));this.faceVertexUvs[0].push([L,J,F]);this.faces.push(new THREE.Face3(c,b,a,[m.clone(),j,i.clone()]));this.faceVertexUvs[0].push([J.clone(),H,F.clone()])}}if(K===false&&l>0){this.vertices.push(new THREE.Vector3(0,E,0));for(q=0;q<e;q++){var d=h[0][q];var c=h[0][q+1];var b=this.vertices.length-1;var o=new THREE.Vector3(0,1,0);var m=new THREE.Vector3(0,1,0);var j=new THREE.Vector3(0,1,0);var L=r[0][q].clone();var J=r[0][q+1].clone();var H=new THREE.Vector2(J.x,0);this.faces.push(new THREE.Face3(d,c,b,[o,m,j],undefined,1));this.faceVertexUvs[0].push([L,J,H])}}if(K===false&&N>0){this.vertices.push(new THREE.Vector3(0,-E,0));for(q=0;q<e;q++){var d=h[A][q+1];var c=h[A][q];var b=this.vertices.length-1;var o=new THREE.Vector3(0,-1,0);var m=new THREE.Vector3(0,-1,0);var j=new THREE.Vector3(0,-1,0);var L=r[A][q+1].clone();var J=r[A][q].clone();var H=new THREE.Vector2(J.x,1);this.faces.push(new THREE.Face3(d,c,b,[o,m,j],undefined,2));this.faceVertexUvs[0].push([L,J,H])}}this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;THREE.EdgesGeometry=function(c,k){THREE.BufferGeometry.call(this);k=(k!==undefined)?k:1;var u=Math.cos(THREE.Math.degToRad(k));var d=[0,0],a={};function o(i,h){return i-h}var m=["a","b","c"];var g;if(c instanceof THREE.BufferGeometry){g=new THREE.Geometry();g.fromBufferGeometry(c)}else{g=c.clone()}g.mergeVertices();g.computeFaceNormals();var e=g.vertices;var b=g.faces;for(var r=0,n=b.length;r<n;r++){var f=b[r];for(var p=0;p<3;p++){d[0]=f[m[p]];d[1]=f[m[(p+1)%3]];d.sort(o);var v=d.toString();if(a[v]===undefined){a[v]={vert1:d[0],vert2:d[1],face1:r,face2:undefined}}else{a[v].face2=r}}}var q=[];for(var v in a){var s=a[v];if(s.face2===undefined||b[s.face1].normal.dot(b[s.face2].normal)<=u){var t=e[s.vert1];q.push(t.x);q.push(t.y);q.push(t.z);t=e[s.vert2];q.push(t.x);q.push(t.y);q.push(t.z)}}this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(q),3))};THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry;THREE.ExtrudeGeometry=function(a,b){if(typeof(a)==="undefined"){a=[];return}THREE.Geometry.call(this);this.type="ExtrudeGeometry";a=Array.isArray(a)?a:[a];this.addShapeList(a,b);this.computeFaceNormals()};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;THREE.ExtrudeGeometry.prototype.addShapeList=function(b,d){var a=b.length;for(var e=0;e<a;e++){var c=b[e];this.addShape(c,d)}};THREE.ExtrudeGeometry.prototype.addShape=function(D,I){var f=I.amount!==undefined?I.amount:100;var e=I.bevelThickness!==undefined?I.bevelThickness:6;var J=I.bevelSize!==undefined?I.bevelSize:e-2;var A=I.bevelSegments!==undefined?I.bevelSegments:3;var a=I.bevelEnabled!==undefined?I.bevelEnabled:true;var H=I.curveSegments!==undefined?I.curveSegments:12;var P=I.steps!==undefined?I.steps:1;var p=I.extrudePath;var N,q=false;var C=I.UVGenerator!==undefined?I.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;var u,R,V,aj;if(p){N=p.getSpacedPoints(P);q=true;a=false;u=I.frames!==undefined?I.frames:new THREE.TubeGeometry.FrenetFrames(p,P,false);R=new THREE.Vector3();V=new THREE.Vector3();aj=new THREE.Vector3()}if(!a){A=0;e=0;J=0}var am,ah,ai;var Q=this;var O=this.vertices.length;var B=D.extractPoints(H);var c=B.shape;var F=B.holes;var Y=!THREE.ShapeUtils.isClockWise(c);if(Y){c=c.reverse();for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];if(THREE.ShapeUtils.isClockWise(am)){F[ah]=am.reverse()}}Y=false}var o=THREE.ShapeUtils.triangulateShape(c,F);var aa=c;for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];c=c.concat(am)}function K(i,h,b){if(!h){console.error("THREE.ExtrudeGeometry: vec does not exist")}return h.clone().multiplyScalar(b).add(i)}var al,Z,W,S,r,ab=c.length,n,m=o.length;function E(j,aq,ar){var aw,av,ax=1;var ao=j.x-aq.x,an=j.y-aq.y;var az=ar.x-j.x,ay=ar.y-j.y;var v=(ao*ao+an*an);var ap=(ao*ay-an*az);if(Math.abs(ap)>Number.EPSILON){var at=Math.sqrt(v);var b=Math.sqrt(az*az+ay*ay);var t=(aq.x-an/at);var s=(aq.y+ao/at);var i=(ar.x-ay/b);var h=(ar.y+az/b);var aA=((i-t)*ay-(h-s)*az)/(ao*ay-an*az);aw=(t+ao*aA-j.x);av=(s+an*aA-j.y);var au=(aw*aw+av*av);if(au<=2){return new THREE.Vector2(aw,av)}else{ax=Math.sqrt(au/2)}}else{var k=false;if(ao>Number.EPSILON){if(az>Number.EPSILON){k=true}}else{if(ao<-Number.EPSILON){if(az<-Number.EPSILON){k=true}}else{if(Math.sign(an)===Math.sign(ay)){k=true}}}if(k){aw=-an;av=ao;ax=Math.sqrt(v)}else{aw=ao;av=an;ax=Math.sqrt(v/2)}}return new THREE.Vector2(aw/ax,av/ax)}var ae=[];for(var ag=0,M=aa.length,ad=M-1,ac=ag+1;ag<M;ag++,ad++,ac++){if(ad===M){ad=0}if(ac===M){ac=0}ae[ag]=E(aa[ag],aa[ad],aa[ac])}var L=[],U,d=ae.concat();for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];U=[];for(ag=0,M=am.length,ad=M-1,ac=ag+1;ag<M;ag++,ad++,ac++){if(ad===M){ad=0}if(ac===M){ac=0}U[ag]=E(am[ag],am[ad],am[ac])}L.push(U);d=d.concat(U)}for(al=0;al<A;al++){W=al/A;S=e*(1-W);Z=J*(Math.sin(W*Math.PI/2));for(ag=0,M=aa.length;ag<M;ag++){r=K(aa[ag],ae[ag],Z);T(r.x,r.y,-S)}for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];U=L[ah];for(ag=0,M=am.length;ag<M;ag++){r=K(am[ag],U[ag],Z);T(r.x,r.y,-S)}}}Z=J;for(ag=0;ag<ab;ag++){r=a?K(c[ag],d[ag],Z):c[ag];if(!q){T(r.x,r.y,0)}else{V.copy(u.normals[0]).multiplyScalar(r.x);R.copy(u.binormals[0]).multiplyScalar(r.y);aj.copy(N[0]).add(V).add(R);T(aj.x,aj.y,aj.z)}}var X;for(X=1;X<=P;X++){for(ag=0;ag<ab;ag++){r=a?K(c[ag],d[ag],Z):c[ag];if(!q){T(r.x,r.y,f/P*X)}else{V.copy(u.normals[X]).multiplyScalar(r.x);R.copy(u.binormals[X]).multiplyScalar(r.y);aj.copy(N[X]).add(V).add(R);T(aj.x,aj.y,aj.z)}}}for(al=A-1;al>=0;al--){W=al/A;S=e*(1-W);Z=J*Math.sin(W*Math.PI/2);for(ag=0,M=aa.length;ag<M;ag++){r=K(aa[ag],ae[ag],Z);T(r.x,r.y,f+S)}for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];U=L[ah];for(ag=0,M=am.length;ag<M;ag++){r=K(am[ag],U[ag],Z);if(!q){T(r.x,r.y,f+S)}else{T(r.x,r.y+N[P-1].y,N[P-1].x+S)}}}}G();ak();function G(){if(a){var b=0;var h=ab*b;for(ag=0;ag<m;ag++){n=o[ag];l(n[2]+h,n[1]+h,n[0]+h)}b=P+A*2;h=ab*b;for(ag=0;ag<m;ag++){n=o[ag];l(n[0]+h,n[1]+h,n[2]+h)}}else{for(ag=0;ag<m;ag++){n=o[ag];l(n[2],n[1],n[0])}for(ag=0;ag<m;ag++){n=o[ag];l(n[0]+ab*P,n[1]+ab*P,n[2]+ab*P)}}}function ak(){var b=0;af(aa,b);b+=aa.length;for(ah=0,ai=F.length;ah<ai;ah++){am=F[ah];af(am,b);b+=am.length}}function af(ap,h){var an,v;ag=ap.length;while(--ag>=0){an=ag;v=ag-1;if(v<0){v=ap.length-1}var av=0,i=P+A*2;for(av=0;av<i;av++){var ao=ab*av;var t=ab*(av+1);var au=h+an+ao,at=h+v+ao,ar=h+v+t,aq=h+an+t;g(au,at,ar,aq,ap,av,i,an,v)}}}function T(b,i,h){Q.vertices.push(new THREE.Vector3(b,i,h))}function l(i,h,k){i+=O;h+=O;k+=O;Q.faces.push(new THREE.Face3(i,h,k,null,null,0));var j=C.generateTopUV(Q,i,h,k);Q.faceVertexUvs[0].push(j)}function g(ao,an,t,s,h,j,ap,v,k){ao+=O;an+=O;t+=O;s+=O;Q.faces.push(new THREE.Face3(ao,an,s,null,null,1));Q.faces.push(new THREE.Face3(an,t,s,null,null,1));var i=C.generateSideWallUV(Q,ao,an,t,s);Q.faceVertexUvs[0].push([i[0],i[1],i[3]]);Q.faceVertexUvs[0].push([i[1],i[2],i[3]])}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(j,i,h,g){var f=j.vertices;var e=f[i];var d=f[h];var k=f[g];return[new THREE.Vector2(e.x,e.y),new THREE.Vector2(d.x,d.y),new THREE.Vector2(k.x,k.y)]},generateSideWallUV:function(h,n,m,l,k){var e=h.vertices;var j=e[n];var i=e[m];var g=e[l];var f=e[k];if(Math.abs(j.y-i.y)<0.01){return[new THREE.Vector2(j.x,1-j.z),new THREE.Vector2(i.x,1-i.z),new THREE.Vector2(g.x,1-g.z),new THREE.Vector2(f.x,1-f.z)]}else{return[new THREE.Vector2(j.y,1-j.z),new THREE.Vector2(i.y,1-i.z),new THREE.Vector2(g.y,1-g.z),new THREE.Vector2(f.y,1-f.z)]}}};THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);this.type="ShapeGeometry";if(Array.isArray(a)===false){a=[a]}this.addShapeList(a,b);this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry;THREE.ShapeGeometry.prototype.addShapeList=function(b,c){for(var d=0,a=b.length;d<a;d++){this.addShape(b[d],c)}return this};THREE.ShapeGeometry.prototype.addShape=function(e,g){if(g===undefined){g={}}var d=g.curveSegments!==undefined?g.curveSegments:12;var p=g.material;var t=g.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:g.UVGenerator;var s,r,q;var o=this.vertices.length;var v=e.extractPoints(d);var h=v.shape;var k=v.holes;var n=!THREE.ShapeUtils.isClockWise(h);if(n){h=h.reverse();for(s=0,r=k.length;s<r;s++){q=k[s];if(THREE.ShapeUtils.isClockWise(q)){k[s]=q.reverse()}}n=false}var f=THREE.ShapeUtils.triangulateShape(h,k);for(s=0,r=k.length;s<r;s++){q=k[s];h=h.concat(q)}var u,j=h.length;var m,D=f.length;for(s=0;s<j;s++){u=h[s];this.vertices.push(new THREE.Vector3(u.x,u.y,0))}for(s=0;s<D;s++){m=f[s];var C=m[0]+o;var B=m[1]+o;var A=m[2]+o;this.faces.push(new THREE.Face3(C,B,A,null,null,p));this.faceVertexUvs[0].push(t.generateTopUV(this,C,B,A))}};THREE.LatheGeometry=function(t,r,o,p){THREE.Geometry.call(this);this.type="LatheGeometry";this.parameters={points:t,segments:r,phiStart:o,phiLength:p};r=r||12;o=o||0;p=p||2*Math.PI;var E=1/(t.length-1);var D=1/r;for(var u=0,n=r;u<=n;u++){var k=o+u*D*p;var e=Math.sin(k);var g=Math.cos(k);for(var s=0,A=t.length;s<A;s++){var q=t[s];var C=new THREE.Vector3();C.x=q.x*e;C.y=q.y;C.z=q.x*g;this.vertices.push(C)}}var f=t.length;for(var u=0,n=r;u<n;u++){for(var s=0,A=t.length-1;s<A;s++){var m=s+f*u;var I=m;var H=m+f;var G=m+1+f;var F=m+1;var B=u*D;var l=s*E;var v=B+D;var h=l+E;this.faces.push(new THREE.Face3(I,H,F));this.faceVertexUvs[0].push([new THREE.Vector2(B,l),new THREE.Vector2(v,l),new THREE.Vector2(B,h)]);this.faces.push(new THREE.Face3(H,G,F));this.faceVertexUvs[0].push([new THREE.Vector2(v,l),new THREE.Vector2(v,h),new THREE.Vector2(B,h)])}}this.mergeVertices();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;THREE.PlaneGeometry=function(b,a,d,c){THREE.Geometry.call(this);this.type="PlaneGeometry";this.parameters={width:b,height:a,widthSegments:d,heightSegments:c};this.fromBufferGeometry(new THREE.PlaneBufferGeometry(b,a,d,c))};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;THREE.PlaneBufferGeometry=function(t,r,f,q){THREE.BufferGeometry.call(this);this.type="PlaneBufferGeometry";this.parameters={width:t,height:r,widthSegments:f,heightSegments:q};var j=t/2;var h=r/2;var A=Math.floor(f)||1;var v=Math.floor(q)||1;var B=A+1;var e=v+1;var H=t/A;var D=r/v;var m=new Float32Array(B*e*3);var s=new Float32Array(B*e*3);var p=new Float32Array(B*e*2);var l=0;var u=0;for(var g=0;g<e;g++){var n=g*D-h;for(var i=0;i<B;i++){var o=i*H-j;m[l]=o;m[l+1]=-n;s[l+2]=1;p[u]=i/A;p[u+1]=1-(g/v);l+=3;u+=2}}l=0;var k=new ((m.length/3)>65535?Uint32Array:Uint16Array)(A*v*6);for(var g=0;g<v;g++){for(var i=0;i<A;i++){var G=i+B*g;var F=i+B*(g+1);var E=(i+1)+B*(g+1);var C=(i+1)+B*g;k[l]=G;k[l+1]=F;k[l+2]=C;k[l+3]=F;k[l+4]=E;k[l+5]=C;l+=6}}this.setIndex(new THREE.BufferAttribute(k,1));this.addAttribute("position",new THREE.BufferAttribute(m,3));this.addAttribute("normal",new THREE.BufferAttribute(s,3));this.addAttribute("uv",new THREE.BufferAttribute(p,2))};THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry;THREE.RingGeometry=function(k,r,g,s,h,p){THREE.Geometry.call(this);this.type="RingGeometry";this.parameters={innerRadius:k,outerRadius:r,thetaSegments:g,phiSegments:s,thetaStart:h,thetaLength:p};k=k||0;r=r||50;h=h!==undefined?h:0;p=p!==undefined?p:Math.PI*2;g=g!==undefined?Math.max(3,g):8;s=s!==undefined?Math.max(1,s):8;var t,m,l=[],f=k,j=((r-k)/s);for(t=0;t<s+1;t++){for(m=0;m<g+1;m++){var u=new THREE.Vector3();var c=h+m/g*p;u.x=f*Math.cos(c);u.y=f*Math.sin(c);this.vertices.push(u);l.push(new THREE.Vector2((u.x/r+1)/2,(u.y/r+1)/2))}f+=j}var q=new THREE.Vector3(0,0,1);for(t=0;t<s;t++){var a=t*(g+1);for(m=0;m<g;m++){var c=m+a;var e=c;var d=c+g+1;var b=c+g+2;this.faces.push(new THREE.Face3(e,d,b,[q.clone(),q.clone(),q.clone()]));this.faceVertexUvs[0].push([l[e].clone(),l[d].clone(),l[b].clone()]);e=c;d=c+g+2;b=c+1;this.faces.push(new THREE.Face3(e,d,b,[q.clone(),q.clone(),q.clone()]));this.faceVertexUvs[0].push([l[e].clone(),l[d].clone(),l[b].clone()])}}this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),f)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry.prototype.constructor=THREE.RingGeometry;THREE.SphereGeometry=function(b,g,d,a,f,c,e){THREE.Geometry.call(this);this.type="SphereGeometry";this.parameters={radius:b,widthSegments:g,heightSegments:d,phiStart:a,phiLength:f,thetaStart:c,thetaLength:e};this.fromBufferGeometry(new THREE.SphereBufferGeometry(b,g,d,a,f,c,e))};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;THREE.SphereBufferGeometry=function(f,e,s,B,G,g,F){THREE.BufferGeometry.call(this);this.type="SphereBufferGeometry";this.parameters={radius:f,widthSegments:e,heightSegments:s,phiStart:B,phiLength:G,thetaStart:g,thetaLength:F};f=f||50;e=Math.max(3,Math.floor(e)||8);s=Math.max(2,Math.floor(s)||6);B=B!==undefined?B:0;G=G!==undefined?G:Math.PI*2;g=g!==undefined?g:0;F=F!==undefined?F:Math.PI;var D=g+F;var o=((e+1)*(s+1));var k=new THREE.BufferAttribute(new Float32Array(o*3),3);var E=new THREE.BufferAttribute(new Float32Array(o*3),3);var n=new THREE.BufferAttribute(new Float32Array(o*2),2);var j=0,i=[],H=new THREE.Vector3();for(var l=0;l<=s;l++){var A=[];var p=l/s;for(var m=0;m<=e;m++){var q=m/e;var C=-f*Math.cos(B+q*G)*Math.sin(g+p*F);var t=f*Math.cos(g+p*F);var r=f*Math.sin(B+q*G)*Math.sin(g+p*F);H.set(C,t,r).normalize();k.setXYZ(j,C,t,r);E.setXYZ(j,H.x,H.y,H.z);n.setXY(j,q,1-p);A.push(j);j++}i.push(A)}var h=[];for(var l=0;l<s;l++){for(var m=0;m<e;m++){var d=i[l][m+1];var c=i[l][m];var b=i[l+1][m];var a=i[l+1][m+1];if(l!==0||g>0){h.push(d,c,a)}if(l!==s-1||D<Math.PI){h.push(c,b,a)}}}this.setIndex(new (k.count>65535?THREE.Uint32Attribute:THREE.Uint16Attribute)(h,1));this.addAttribute("position",k);this.addAttribute("normal",E);this.addAttribute("uv",n);this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),f)};THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry;THREE.TextGeometry=function(d,c){c=c||{};var b=c.font;if(b instanceof THREE.Font===false){console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font.");return new THREE.Geometry()}var a=b.generateShapes(d,c.size,c.curveSegments);c.amount=c.height!==undefined?c.height:50;if(c.bevelThickness===undefined){c.bevelThickness=10}if(c.bevelSize===undefined){c.bevelSize=8}if(c.bevelEnabled===undefined){c.bevelEnabled=false}THREE.ExtrudeGeometry.call(this,a,c);this.type="TextGeometry"};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;THREE.TorusGeometry=function(g,f,e,l,h){THREE.Geometry.call(this);this.type="TorusGeometry";this.parameters={radius:g,tube:f,radialSegments:e,tubularSegments:l,arc:h};g=g||100;f=f||40;e=e||8;l=l||6;h=h||Math.PI*2;var C=new THREE.Vector3(),m=[],p=[];for(var q=0;q<=e;q++){for(var r=0;r<=l;r++){var o=r/l*h;var n=q/e*Math.PI*2;C.x=g*Math.cos(o);C.y=g*Math.sin(o);var s=new THREE.Vector3();s.x=(g+f*Math.cos(n))*Math.cos(o);s.y=(g+f*Math.cos(n))*Math.sin(o);s.z=f*Math.sin(n);this.vertices.push(s);m.push(new THREE.Vector2(r/l,q/e));p.push(s.clone().sub(C).normalize())}}for(var q=1;q<=e;q++){for(var r=1;r<=l;r++){var D=(l+1)*q+r-1;var B=(l+1)*(q-1)+r-1;var A=(l+1)*(q-1)+r;var t=(l+1)*q+r;var k=new THREE.Face3(D,B,t,[p[D].clone(),p[B].clone(),p[t].clone()]);this.faces.push(k);this.faceVertexUvs[0].push([m[D].clone(),m[B].clone(),m[t].clone()]);k=new THREE.Face3(B,A,t,[p[B].clone(),p[A].clone(),p[t].clone()]);this.faces.push(k);this.faceVertexUvs[0].push([m[B].clone(),m[A].clone(),m[t].clone()])}}this.computeFaceNormals()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;THREE.TorusKnotGeometry=function(s,r,m,B,F,E,f){THREE.Geometry.call(this);this.type="TorusKnotGeometry";this.parameters={radius:s,tube:r,radialSegments:m,tubularSegments:B,p:F,q:E,heightScale:f};s=s||100;r=r||40;m=m||64;B=B||8;F=F||2;E=E||3;f=f||1;var e=new Array(m);var o=new THREE.Vector3();var G=new THREE.Vector3();var T=new THREE.Vector3();for(var K=0;K<m;++K){e[K]=new Array(B);var D=K/m*2*F*Math.PI;var h=L(D,E,F,s,f);var g=L(D+0.01,E,F,s,f);o.subVectors(g,h);G.addVectors(g,h);T.crossVectors(o,G);G.crossVectors(T,o);T.normalize();G.normalize();for(var I=0;I<B;++I){var C=I/B*2*Math.PI;var l=-r*Math.cos(C);var k=r*Math.sin(C);var t=new THREE.Vector3();t.x=h.x+l*G.x+k*T.x;t.y=h.y+l*G.y+k*T.y;t.z=h.z+l*G.z+k*T.z;e[K][I]=this.vertices.push(t)-1}}for(var K=0;K<m;++K){for(var I=0;I<B;++I){var A=(K+1)%m;var H=(I+1)%B;var S=e[K][I];var R=e[A][I];var Q=e[A][H];var P=e[K][H];var O=new THREE.Vector2(K/m,I/B);var N=new THREE.Vector2((K+1)/m,I/B);var M=new THREE.Vector2((K+1)/m,(I+1)/B);var J=new THREE.Vector2(K/m,(I+1)/B);this.faces.push(new THREE.Face3(S,R,P));this.faceVertexUvs[0].push([O,N,J]);this.faces.push(new THREE.Face3(R,Q,P));this.faceVertexUvs[0].push([N.clone(),M,J.clone()])}}this.computeFaceNormals();this.computeVertexNormals();function L(U,p,v,q,a){var j=Math.cos(U);var V=Math.sin(U);var i=p/v*U;var n=Math.cos(i);var d=q*(2+n)*0.5*j;var c=q*(2+n)*V*0.5;var b=a*q*Math.sin(i)*0.5;return new THREE.Vector3(d,c,b)}};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;THREE.TubeGeometry=function(K,h,J,E,I,S){THREE.Geometry.call(this);this.type="TubeGeometry";this.parameters={path:K,segments:h,radius:J,radialSegments:E,closed:I,taper:S};h=h||64;J=J||1;E=E||8;I=I||false;S=S||THREE.TubeGeometry.NoTaper;var G=[];var A=this,C,H,B,e=h+1,F,D,L,o,n,t,f=new THREE.Vector3(),N,M,s,g,W,V,U,T,R,Q,P,O;var p=new THREE.TubeGeometry.FrenetFrames(K,h,I),q=p.tangents,m=p.normals,l=p.binormals;this.tangents=q;this.normals=m;this.binormals=l;function k(a,c,b){return A.vertices.push(new THREE.Vector3(a,c,b))-1}for(N=0;N<e;N++){G[N]=[];F=N/(e-1);t=K.getPointAt(F);C=q[N];H=m[N];B=l[N];L=J*S(F);for(M=0;M<E;M++){D=M/E*2*Math.PI;o=-L*Math.cos(D);n=L*Math.sin(D);f.copy(t);f.x+=o*H.x+n*B.x;f.y+=o*H.y+n*B.y;f.z+=o*H.z+n*B.z;G[N][M]=k(f.x,f.y,f.z)}}for(N=0;N<h;N++){for(M=0;M<E;M++){s=(I)?(N+1)%h:N+1;g=(M+1)%E;W=G[N][M];V=G[s][M];U=G[s][g];T=G[N][g];R=new THREE.Vector2(N/h,M/E);Q=new THREE.Vector2((N+1)/h,M/E);P=new THREE.Vector2((N+1)/h,(M+1)/E);O=new THREE.Vector2(N/h,(M+1)/E);this.faces.push(new THREE.Face3(W,V,T));this.faceVertexUvs[0].push([R,Q,O]);this.faces.push(new THREE.Face3(V,U,T));this.faceVertexUvs[0].push([Q.clone(),P,O.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry;THREE.TubeGeometry.NoTaper=function(a){return 1};THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)};THREE.TubeGeometry.FrenetFrames=function(k,m,c){var s=new THREE.Vector3(),l=[],j=[],d=[],h=new THREE.Vector3(),o=new THREE.Matrix4(),b=m+1,e,a,r,q,p,n,g;this.tangents=l;this.normals=j;this.binormals=d;for(n=0;n<b;n++){g=n/(b-1);l[n]=k.getTangentAt(g);l[n].normalize()}f();function f(){j[0]=new THREE.Vector3();d[0]=new THREE.Vector3();a=Number.MAX_VALUE;r=Math.abs(l[0].x);q=Math.abs(l[0].y);p=Math.abs(l[0].z);if(r<=a){a=r;s.set(1,0,0)}if(q<=a){a=q;s.set(0,1,0)}if(p<=a){s.set(0,0,1)}h.crossVectors(l[0],s).normalize();j[0].crossVectors(l[0],h);d[0].crossVectors(l[0],j[0])}for(n=1;n<b;n++){j[n]=j[n-1].clone();d[n]=d[n-1].clone();h.crossVectors(l[n-1],l[n]);if(h.length()>Number.EPSILON){h.normalize();e=Math.acos(THREE.Math.clamp(l[n-1].dot(l[n]),-1,1));j[n].applyMatrix4(o.makeRotationAxis(h,e))}d[n].crossVectors(l[n],j[n])}if(c){e=Math.acos(THREE.Math.clamp(j[0].dot(j[b-1]),-1,1));e/=(b-1);if(l[0].dot(h.crossVectors(j[0],j[b-1]))>0){e=-e}for(n=1;n<b;n++){j[n].applyMatrix4(o.makeRotationAxis(l[n],e*n));d[n].crossVectors(l[n],j[n])}}};THREE.PolyhedronGeometry=function(n,m,k,H){THREE.Geometry.call(this);this.type="PolyhedronGeometry";this.parameters={vertices:n,indices:m,radius:k,detail:H};k=k||1;H=H||0;var o=this;for(var C=0,v=n.length;C<v;C+=3){e(new THREE.Vector3(n[C],n[C+1],n[C+2]))}var t=this.vertices;var c=[];for(var C=0,A=0,v=m.length;C<v;C+=3,A++){var g=t[m[C]];var f=t[m[C+1]];var b=t[m[C+2]];c[A]=new THREE.Face3(g.index,f.index,b.index,[g.clone(),f.clone(),b.clone()],undefined,A)}var s=new THREE.Vector3();for(var C=0,v=c.length;C<v;C++){q(c[C],H)}for(var C=0,v=this.faceVertexUvs[0].length;C<v;C++){var r=this.faceVertexUvs[0][C];var G=r[0].x;var F=r[1].x;var E=r[2].x;var B=Math.max(G,F,E);var u=Math.min(G,F,E);if(B>0.9&&u<0.1){if(G<0.2){r[0].x+=1}if(F<0.2){r[1].x+=1}if(E<0.2){r[2].x+=1}}}for(var C=0,v=this.vertices.length;C<v;C++){this.vertices[C].multiplyScalar(k)}this.mergeVertices();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3(),k);function e(i){var p=i.normalize().clone();p.index=o.vertices.push(p)-1;var l=D(i)/2/Math.PI+0.5;var j=d(i)/Math.PI+0.5;p.uv=new THREE.Vector2(l,1-j);return p}function h(J,I,p,i){var l=new THREE.Face3(J.index,I.index,p.index,[J.clone(),I.clone(),p.clone()],undefined,i);o.faces.push(l);s.copy(J).add(I).add(p).divideScalar(3);var j=D(s);o.faceVertexUvs[0].push([a(J.uv,J,j),a(I.uv,I,j),a(p.uv,p,j)])}function q(M,K){var O=Math.pow(2,K);var Q=e(o.vertices[M.a]);var P=e(o.vertices[M.b]);var N=e(o.vertices[M.c]);var S=[];var R=M.materialIndex;for(var J=0;J<=O;J++){S[J]=[];var L=e(Q.clone().lerp(N,J/O));var l=e(P.clone().lerp(N,J/O));var T=O-J;for(var I=0;I<=T;I++){if(I===0&&J===O){S[J][I]=L}else{S[J][I]=e(L.clone().lerp(l,I/T))}}}for(var J=0;J<O;J++){for(var I=0;I<2*(O-J)-1;I++){var p=Math.floor(I/2);if(I%2===0){h(S[J][p+1],S[J+1][p],S[J][p],R)}else{h(S[J][p+1],S[J+1][p+1],S[J+1][p],R)}}}}function D(i){return Math.atan2(i.z,-i.x)}function d(i){return Math.atan2(-i.y,Math.sqrt((i.x*i.x)+(i.z*i.z)))}function a(j,i,l){if((l<0)&&(j.x===1)){j=new THREE.Vector2(j.x-1,j.y)}if((i.x===0)&&(i.z===0)){j=new THREE.Vector2(l/2/Math.PI+0.5,j.y)}return j.clone()}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry;THREE.DodecahedronGeometry=function(a,d){var c=(1+Math.sqrt(5))/2;var e=1/c;var b=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-e,-c,0,-e,c,0,e,-c,0,e,c,-e,-c,0,-e,c,0,e,-c,0,e,c,0,-c,0,-e,c,0,-e,-c,0,e,c,0,e];var f=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];THREE.PolyhedronGeometry.call(this,b,f,a,d);this.type="DodecahedronGeometry";this.parameters={radius:a,detail:d}};THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry;THREE.IcosahedronGeometry=function(a,d){var c=(1+Math.sqrt(5))/2;var b=[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1];var e=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];THREE.PolyhedronGeometry.call(this,b,e,a,d);this.type="IcosahedronGeometry";this.parameters={radius:a,detail:d}};THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;THREE.OctahedronGeometry=function(a,c){var b=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];var d=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];THREE.PolyhedronGeometry.call(this,b,d,a,c);this.type="OctahedronGeometry";this.parameters={radius:a,detail:c}};THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;THREE.TetrahedronGeometry=function(a,c){var b=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];var d=[2,1,0,0,3,2,1,3,0,2,3,1];THREE.PolyhedronGeometry.call(this,b,d,a,c);this.type="TetrahedronGeometry";this.parameters={radius:a,detail:c}};THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype);THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry;THREE.ParametricGeometry=function(g,f,C){THREE.Geometry.call(this);this.type="ParametricGeometry";this.parameters={func:g,slices:f,stacks:C};var G=this.vertices;var e=this.faces;var h=this.faceVertexUvs[0];var q,n,m;var l,k;var F=f+1;for(q=0;q<=C;q++){k=q/C;for(n=0;n<=f;n++){l=n/f;m=g(l,k);G.push(m)}}var E,D,B,A;var t,s,r,o;for(q=0;q<C;q++){for(n=0;n<f;n++){E=q*F+n;D=q*F+n+1;B=(q+1)*F+n+1;A=(q+1)*F+n;t=new THREE.Vector2(n/f,q/C);s=new THREE.Vector2((n+1)/f,q/C);r=new THREE.Vector2((n+1)/f,(q+1)/C);o=new THREE.Vector2(n/f,(q+1)/C);e.push(new THREE.Face3(E,D,A));h.push([t,s,o]);e.push(new THREE.Face3(D,B,A));h.push([s.clone(),r,o.clone()])}}this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry;THREE.WireframeGeometry=function(f){THREE.BufferGeometry.call(this);var k=[0,0],a={};function D(j,i){return j-i}var A=["a","b","c"];if(f instanceof THREE.Geometry){var n=f.vertices;var b=f.faces;var c=0;var d=new Uint32Array(6*b.length);for(var G=0,C=b.length;G<C;G++){var t=b[G];for(var E=0;E<3;E++){k[0]=t[A[E]];k[1]=t[A[(E+1)%3]];k.sort(D);var J=k.toString();if(a[J]===undefined){d[2*c]=k[0];d[2*c+1]=k[1];a[J]=true;c++}}}var F=new Float32Array(c*2*3);for(var G=0,C=c;G<C;G++){for(var E=0;E<2;E++){var H=n[d[2*G+E]];var q=6*G+3*E;F[q+0]=H.x;F[q+1]=H.y;F[q+2]=H.z}}this.addAttribute("position",new THREE.BufferAttribute(F,3))}else{if(f instanceof THREE.BufferGeometry){if(f.index!==null){var h=f.index.array;var n=f.attributes.position;var I=f.groups;var c=0;if(I.length===0){f.addGroup(0,h.length)}var d=new Uint32Array(2*h.length);for(var B=0,v=I.length;B<v;++B){var s=I[B];var e=s.start;var p=s.count;for(var G=e,u=e+p;G<u;G+=3){for(var E=0;E<3;E++){k[0]=h[G+E];k[1]=h[G+(E+1)%3];k.sort(D);var J=k.toString();if(a[J]===undefined){d[2*c]=k[0];d[2*c+1]=k[1];a[J]=true;c++}}}}var F=new Float32Array(c*2*3);for(var G=0,C=c;G<C;G++){for(var E=0;E<2;E++){var q=6*G+3*E;var g=d[2*G+E];F[q+0]=n.getX(g);F[q+1]=n.getY(g);F[q+2]=n.getZ(g)}}this.addAttribute("position",new THREE.BufferAttribute(F,3))}else{var n=f.attributes.position.array;var c=n.length/3;var r=c/3;var F=new Float32Array(c*2*3);for(var G=0,C=r;G<C;G++){for(var E=0;E<3;E++){var q=18*G+6*E;var m=9*G+3*E;F[q+0]=n[m];F[q+1]=n[m+1];F[q+2]=n[m+2];var g=9*G+3*((E+1)%3);F[q+3]=n[g];F[q+4]=n[g+1];F[q+5]=n[g+2]}}this.addAttribute("position",new THREE.BufferAttribute(F,3))}}}};THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype);THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry;THREE.AxisHelper=function(c){c=c||1;var b=new Float32Array([0,0,0,c,0,0,0,0,0,0,c,0,0,0,0,0,0,c]);var a=new Float32Array([1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1]);var e=new THREE.BufferGeometry();e.addAttribute("position",new THREE.BufferAttribute(b,3));e.addAttribute("color",new THREE.BufferAttribute(a,3));var d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,e,d)};THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.AxisHelper.prototype.constructor=THREE.AxisHelper;THREE.ArrowHelper=(function(){var a=new THREE.Geometry();a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var c=new THREE.CylinderGeometry(0,0.5,1,5,1);c.translate(0,-0.5,0);return function b(h,g,i,f,e,d){THREE.Object3D.call(this);if(f===undefined){f=16776960}if(i===undefined){i=1}if(e===undefined){e=0.2*i}if(d===undefined){d=0.2*e}this.position.copy(g);this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:f}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:f}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(h);this.setLength(i,e,d)}}());THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper;THREE.ArrowHelper.prototype.setDirection=(function(){var b=new THREE.Vector3();var c;return function a(d){if(d.y>0.99999){this.quaternion.set(0,0,0,1)}else{if(d.y<-0.99999){this.quaternion.set(1,0,0,0)}else{b.set(d.z,0,-d.x).normalize();c=Math.acos(d.y);this.quaternion.setFromAxisAngle(b,c)}}}}());THREE.ArrowHelper.prototype.setLength=function(c,b,a){if(b===undefined){b=0.2*c}if(a===undefined){a=0.2*b}this.line.scale.set(1,Math.max(0,c-b),1);this.line.updateMatrix();this.cone.scale.set(a,b,a);this.cone.position.y=c;this.cone.updateMatrix()};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a);this.cone.material.color.set(a)};THREE.BoxHelper=function(b){var d=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var a=new Float32Array(8*3);var c=new THREE.BufferGeometry();c.setIndex(new THREE.BufferAttribute(d,1));c.addAttribute("position",new THREE.BufferAttribute(a,3));THREE.LineSegments.call(this,c,new THREE.LineBasicMaterial({color:16776960}));if(b!==undefined){this.update(b)}};THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.BoxHelper.prototype.constructor=THREE.BoxHelper;THREE.BoxHelper.prototype.update=(function(){var a=new THREE.Box3();return function(d){a.setFromObject(d);if(a.isEmpty()){return}var e=a.min;var c=a.max;var b=this.geometry.attributes.position;var f=b.array;f[0]=c.x;f[1]=c.y;f[2]=c.z;f[3]=e.x;f[4]=c.y;f[5]=c.z;f[6]=e.x;f[7]=e.y;f[8]=c.z;f[9]=c.x;f[10]=e.y;f[11]=c.z;f[12]=c.x;f[13]=c.y;f[14]=e.z;f[15]=e.x;f[16]=c.y;f[17]=e.z;f[18]=e.x;f[19]=e.y;f[20]=e.z;f[21]=c.x;f[22]=e.y;f[23]=e.z;b.needsUpdate=true;this.geometry.computeBoundingSphere()}})();THREE.BoundingBoxHelper=function(b,c){var a=(c!==undefined)?c:8947848;this.object=b;this.box=new THREE.Box3();THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:a,wireframe:true}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper;THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};THREE.CameraHelper=function(e){var h=new THREE.Geometry();var f=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});var g={};var d=16755200;var k=16711680;var b=43775;var i=16777215;var c=3355443;j("n1","n2",d);j("n2","n4",d);j("n4","n3",d);j("n3","n1",d);j("f1","f2",d);j("f2","f4",d);j("f4","f3",d);j("f3","f1",d);j("n1","f1",d);j("n2","f2",d);j("n3","f3",d);j("n4","f4",d);j("p","n1",k);j("p","n2",k);j("p","n3",k);j("p","n4",k);j("u1","u2",b);j("u2","u3",b);j("u3","u1",b);j("c","t",i);j("p","c",c);j("cn1","cn2",c);j("cn3","cn4",c);j("cf1","cf2",c);j("cf3","cf4",c);function j(m,l,n){a(m,n);a(l,n)}function a(m,l){h.vertices.push(new THREE.Vector3());h.colors.push(new THREE.Color(l));if(g[m]===undefined){g[m]=[]}g[m].push(h.vertices.length-1)}THREE.LineSegments.call(this,h,f);this.camera=e;this.camera.updateProjectionMatrix();this.matrix=e.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=g;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;THREE.CameraHelper.prototype.update=function(){var e,b;var a=new THREE.Vector3();var d=new THREE.Camera();function c(g,f,m,l){a.set(f,m,l).unproject(d);var k=b[g];if(k!==undefined){for(var j=0,h=k.length;j<h;j++){e.vertices[k[j]].copy(a)}}}return function(){e=this.geometry;b=this.pointMap;var f=1,g=1;d.projectionMatrix.copy(this.camera.projectionMatrix);c("c",0,0,-1);c("t",0,0,1);c("n1",-f,-g,-1);c("n2",f,-g,-1);c("n3",-f,g,-1);c("n4",f,g,-1);c("f1",-f,-g,1);c("f2",f,-g,1);c("f3",-f,g,1);c("f4",f,g,1);c("u1",f*0.7,g*1.1,-1);c("u2",-f*0.7,g*1.1,-1);c("u3",0,g*2,-1);c("cf1",-f,0,1);c("cf2",f,0,1);c("cf3",0,-g,1);c("cf4",0,g,1);c("cn1",-f,0,-1);c("cn2",f,0,-1);c("cn3",0,-g,-1);c("cn4",0,g,-1);e.verticesNeedUpdate=true}}();THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;b=b||1;var d=new THREE.Geometry();d.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var c=new THREE.LineBasicMaterial({fog:false});c.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Line(d,c);this.add(this.lightPlane);d=new THREE.Geometry();d.vertices.push(new THREE.Vector3(),new THREE.Vector3());c=new THREE.LineBasicMaterial({fog:false});c.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(d,c);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper;THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};THREE.DirectionalLightHelper.prototype.update=function(){var c=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Vector3();return function(){c.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);a.subVectors(b,c);this.lightPlane.lookAt(a);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(a);this.targetLine.geometry.verticesNeedUpdate=true;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();THREE.EdgesHelper=function(c,d,b){var a=(d!==undefined)?d:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(c.geometry,b),new THREE.LineBasicMaterial({color:a}));this.matrix=c.matrixWorld;this.matrixAutoUpdate=false};THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper;THREE.FaceNormalsHelper=function(c,j,b,h){this.object=c;this.size=(j!==undefined)?j:1;var d=(b!==undefined)?b:16776960;var a=(h!==undefined)?h:1;var i=0;var f=this.object.geometry;if(f instanceof THREE.Geometry){i=f.faces.length}else{console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.")}var g=new THREE.BufferGeometry();var e=new THREE.Float32Attribute(i*2*3,3);g.addAttribute("position",e);THREE.LineSegments.call(this,g,new THREE.LineBasicMaterial({color:d,linewidth:a}));this.matrixAutoUpdate=false;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper;THREE.FaceNormalsHelper.prototype.update=(function(){var d=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Matrix3();return function c(){this.object.updateMatrixWorld(true);a.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld;var j=this.geometry.attributes.position;var k=this.object.geometry;var n=k.vertices;var f=k.faces;var p=0;for(var h=0,g=f.length;h<g;h++){var o=f[h];var m=o.normal;d.copy(n[o.a]).add(n[o.b]).add(n[o.c]).divideScalar(3).applyMatrix4(e);b.copy(m).applyMatrix3(a).normalize().multiplyScalar(this.size).add(d);j.setXYZ(p,d.x,d.y,d.z);p=p+1;j.setXYZ(p,b.x,b.y,b.z);p=p+1}j.needsUpdate=true;return this}}());THREE.GridHelper=function(c,e){var f=new THREE.Geometry();var d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var b=-c;b<=c;b+=e){f.vertices.push(new THREE.Vector3(-c,0,b),new THREE.Vector3(c,0,b),new THREE.Vector3(b,0,-c),new THREE.Vector3(b,0,c));var a=b===0?this.color1:this.color2;f.colors.push(a,a,a,a)}THREE.LineSegments.call(this,f,d)};THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.GridHelper.prototype.constructor=THREE.GridHelper;THREE.GridHelper.prototype.setColors=function(b,a){this.color1.set(b);this.color2.set(a);this.geometry.colorsNeedUpdate=true};THREE.HemisphereLightHelper=function(a,f){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.colors=[new THREE.Color(),new THREE.Color()];var e=new THREE.SphereGeometry(f,4,2);e.rotateX(-Math.PI/2);for(var c=0,b=8;c<b;c++){e.faces[c].color=this.colors[c<4?0:1]}var d=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:true});this.lightSphere=new THREE.Mesh(e,d);this.add(this.lightSphere);this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper;THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3();return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=true}}();THREE.PointLightHelper=function(a,d){this.light=a;this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(d,4,2);var b=new THREE.MeshBasicMaterial({wireframe:true,fog:false});b.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,c,b);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper;THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);var e=new THREE.Geometry();for(var b=0;b<this.bones.length;b++){var d=this.bones[b];if(d.parent instanceof THREE.Bone){e.vertices.push(new THREE.Vector3());e.vertices.push(new THREE.Vector3());e.colors.push(new THREE.Color(0,0,1));e.colors.push(new THREE.Color(0,1,0))}}e.dynamic=true;var c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:false,depthWrite:false,transparent:true});THREE.LineSegments.call(this,e,c);this.root=a;this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;this.update()};THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper;THREE.SkeletonHelper.prototype.getBoneList=function(a){var c=[];if(a instanceof THREE.Bone){c.push(a)}for(var b=0;b<a.children.length;b++){c.push.apply(c,this.getBoneList(a.children[b]))}return c};THREE.SkeletonHelper.prototype.update=function(){var f=this.geometry;var e=new THREE.Matrix4().getInverse(this.root.matrixWorld);var c=new THREE.Matrix4();var a=0;for(var b=0;b<this.bones.length;b++){var d=this.bones[b];if(d.parent instanceof THREE.Bone){c.multiplyMatrices(e,d.matrixWorld);f.vertices[a].setFromMatrixPosition(c);c.multiplyMatrices(e,d.parent.matrixWorld);f.vertices[a+1].setFromMatrixPosition(c);a+=2}}f.verticesNeedUpdate=true;f.computeBoundingSphere()};THREE.SpotLightHelper=function(a){THREE.Object3D.call(this);this.light=a;this.light.updateMatrixWorld();this.matrix=a.matrixWorld;this.matrixAutoUpdate=false;var c=new THREE.CylinderGeometry(0,1,1,8,1,true);c.translate(0,-0.5,0);c.rotateX(-Math.PI/2);var b=new THREE.MeshBasicMaterial({wireframe:true,fog:false});this.cone=new THREE.Mesh(c,b);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper;THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3();var b=new THREE.Vector3();return function(){var c=this.light.distance?this.light.distance:10000;var d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c);a.setFromMatrixPosition(this.light.matrixWorld);b.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(b.sub(a));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();THREE.VertexNormalsHelper=function(c,j,b,h){this.object=c;this.size=(j!==undefined)?j:1;var d=(b!==undefined)?b:16711680;var a=(h!==undefined)?h:1;var i=0;var f=this.object.geometry;if(f instanceof THREE.Geometry){i=f.faces.length*3}else{if(f instanceof THREE.BufferGeometry){i=f.attributes.normal.count}}var g=new THREE.BufferGeometry();var e=new THREE.Float32Attribute(i*2*3,3);g.addAttribute("position",e);THREE.LineSegments.call(this,g,new THREE.LineBasicMaterial({color:d,linewidth:a}));this.matrixAutoUpdate=false;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper;THREE.VertexNormalsHelper.prototype.update=(function(){var d=new THREE.Vector3();var b=new THREE.Vector3();var a=new THREE.Matrix3();return function c(){var A=["a","b","c"];this.object.updateMatrixWorld(true);a.getNormalMatrix(this.object.matrixWorld);var e=this.object.matrixWorld;var n=this.geometry.attributes.position;var q=this.object.geometry;if(q instanceof THREE.Geometry){var s=q.vertices;var f=q.faces;var v=0;for(var m=0,g=f.length;m<g;m++){var u=f[m];for(var h=0,k=u.vertexNormals.length;h<k;h++){var p=s[u[A[h]]];var r=u.vertexNormals[h];d.copy(p).applyMatrix4(e);b.copy(r).applyMatrix3(a).normalize().multiplyScalar(this.size).add(d);n.setXYZ(v,d.x,d.y,d.z);v=v+1;n.setXYZ(v,b.x,b.y,b.z);v=v+1}}}else{if(q instanceof THREE.BufferGeometry){var t=q.attributes.position;var o=q.attributes.normal;var v=0;for(var h=0,k=t.count;h<k;h++){d.set(t.getX(h),t.getY(h),t.getZ(h)).applyMatrix4(e);b.set(o.getX(h),o.getY(h),o.getZ(h));b.applyMatrix3(a).normalize().multiplyScalar(this.size).add(d);n.setXYZ(v,d.x,d.y,d.z);v=v+1;n.setXYZ(v,b.x,b.y,b.z);v=v+1}}}n.needsUpdate=true;return this}}());THREE.WireframeHelper=function(b,c){var a=(c!==undefined)?c:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(b.geometry),new THREE.LineBasicMaterial({color:a}));this.matrix=b.matrixWorld;this.matrixAutoUpdate=false};THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype);THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper;THREE.ImmediateRenderObject=function(a){THREE.Object3D.call(this);this.material=a;this.render=function(b){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject;THREE.MorphBlendMesh=function(g,d){THREE.Mesh.call(this,g,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;var b="__default";var c=0;var a=f-1;var e=f/1;this.createAnimation(b,c,a,e);this.setAnimationWeight(b,1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh;THREE.MorphBlendMesh.prototype.createAnimation=function(b,e,a,d){var c={start:e,end:a,length:a-e+1,fps:d,duration:(a-e)/d,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[b]=c;this.animationsList.push(c)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(c){var h=/([a-z]+)_?(\d+)/i;var b,f={};var j=this.geometry;for(var d=0,k=j.morphTargets.length;d<k;d++){var l=j.morphTargets[d];var g=l.name.match(h);if(g&&g.length>1){var a=g[1];if(!f[a]){f[a]={start:Infinity,end:-Infinity}}var e=f[a];if(d<e.start){e.start=d}if(d>e.end){e.end=d}if(!b){b=a}}}for(var a in f){var e=f[a];this.createAnimation(a,e.start,e.end,c)}this.firstAnimation=b};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];if(b){b.direction=1;b.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];if(b){b.direction=-1;b.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,c){var b=this.animationsMap[a];if(b){b.fps=c;b.duration=(b.end-b.start)/b.fps}};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,c){var b=this.animationsMap[a];if(b){b.duration=c;b.fps=(b.end-b.start)/b.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,c){var b=this.animationsMap[a];if(b){b.weight=c}};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,c){var b=this.animationsMap[a];if(b){b.time=c}};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var c=0;var b=this.animationsMap[a];if(b){c=b.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var c=-1;var b=this.animationsMap[a];if(b){c=b.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];if(b){b.time=0;b.active=true}else{console.warn("THREE.MorphBlendMesh: animation["+a+"] undefined in .playAnimation()")}};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];if(b){b.active=false}};THREE.MorphBlendMesh.prototype.update=function(h){for(var c=0,a=this.animationsList.length;c<a;c++){var g=this.animationsList[c];if(!g.active){continue}var e=g.duration/g.length;g.time+=g.direction*h;if(g.mirroredLoop){if(g.time>g.duration||g.time<0){g.direction*=-1;if(g.time>g.duration){g.time=g.duration;g.directionBackwards=true}if(g.time<0){g.time=0;g.directionBackwards=false}}}else{g.time=g.time%g.duration;if(g.time<0){g.time+=g.duration}}var b=g.start+THREE.Math.clamp(Math.floor(g.time/e),0,g.length-1);var f=g.weight;if(b!==g.currentFrame){this.morphTargetInfluences[g.lastFrame]=0;this.morphTargetInfluences[g.currentFrame]=1*f;this.morphTargetInfluences[b]=0;g.lastFrame=g.currentFrame;g.currentFrame=b}var d=(g.time%e)/e;if(g.directionBackwards){d=1-d}if(g.currentFrame!==g.lastFrame){this.morphTargetInfluences[g.currentFrame]=d*f;this.morphTargetInfluences[g.lastFrame]=(1-d)*f}else{this.morphTargetInfluences[g.currentFrame]=f}}};!function(b,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports):"function"==typeof define&&define.amd?define(["exports"],a):a(b.d3_queue={})}(this,function(i){function b(){}function c(m){function e(){if(!q){try{k()}catch(f){D[E+F-1]&&t(f)}}}function k(){for(;q=u&&m>F;){var l=E+F,n=D[l],p=n.length-1,f=n[p];n[p]=v(l),--u,++F,n=f.apply(null,n),D[l]&&(D[l]=n||g)}}function v(f){return function(l,n){D[f]&&(--F,++E,D[f]=null,null==A&&(null!=l?t(l):(j[f]=n,u?e():F||C(A,j))))}}function t(o){var f,l=D.length;for(A=o,j=void 0,u=NaN;--l>=0;){if((f=D[l])&&(D[l]=null,f.abort)){try{f.abort()}catch(o){}}}F=NaN,C(A,j)}if(!(m>=1)){throw new Error}var B,q,D=[],j=[],u=0,F=0,E=0,A=null,C=b;return B={defer:function(l){if("function"!=typeof l||C!==b){throw new Error}if(null!=A){return B}var f=a.call(arguments,1);return f.push(l),++u,D.push(f),e(),B},abort:function(){return null==A&&t(new Error("abort")),B},await:function(f){if("function"!=typeof f||C!==b){throw new Error}return C=function(l,n){f.apply(null,[l].concat(n))},F||C(A,j),B},awaitAll:function(f){if("function"!=typeof f||C!==b){throw new Error}return C=f,F||C(A,j),B}}}function h(e){return c(arguments.length?+e:1/0)}var a=[].slice,g={},d="2.0.2";i.version=d,i.queue=h});jQuery.fn.contextPopup=function(f,b,c,e){var d={contextMenuClass:b,linkClickerClass:"contextMenuLink",gutterLineClass:"gutterLine",showListener:c,seperatorClass:"divider",title:"",items:[]};jQuery.extend(d,f);function a(g){var h=document.getElementsByClassName(d.contextMenuClass);if(h&&h.length>0){return h[0]}h=jQuery('<ul class="'+d.contextMenuClass+'"></ul>').appendTo(document.body);g.forEach(function(k){if(k){var j='<li><a href="#" id=\''+e+k.id+"' class=\""+d.linkClickerClass+'"><span class="itemTitle"></span></a></li>';var l=jQuery(j).appendTo(h);if(k.icon){var i=jQuery("<img>");i.attr("src",k.icon);i.insertBefore(l.find(".itemTitle"))}l.find(".itemTitle").text(k.label);if(k.isEnabled!=undefined&&!k.isEnabled){l.addClass("disabled")}else{if(k.actions){l.find("."+d.linkClickerClass).click(function(){for(var m=0,n=k.actions.length;m<n;m++){k.actions[m](k.id)}})}}}else{jQuery('<li class="'+d.seperatorClass+'"></li>').appendTo(h)}});return h}this.on("contextmenu",function(k){var g=d.items.concat([]);if(d.showListener){d.showListener(g)}try{var l=a(g);l.show();var j=k.pageX+5,i=k.pageY;if(i+l.height()>=jQuery(window).height()){i-=l.height()}if(j+l.width()>=jQuery(window).width()){j-=l.width()}l.css({zIndex:1000001,left:j,top:i}).on("contextmenu",function(){return false});var h=jQuery("<div></div>").css({left:0,top:0,width:"100%",height:"100%",position:"absolute",zIndex:1000000}).appendTo(document.body).on("contextmenu click",function(){h.remove();l.remove();return false});l.find("a").click(function(){h.remove();l.remove()})}catch(k){}return false});return this};THREE.OrbitControls=function(H,I){this.object=H;this.domElement=(I!==undefined)?I:document;this.enabled=true;this.target=new THREE.Vector3();this.center=this.target;this.noZoom=false;this.zoomSpeed=1;this.minDistance=0;this.maxDistance=Infinity;this.minZoom=0;this.maxZoom=Infinity;this.noRotate=false;this.rotateSpeed=1;this.noPan=false;this.keyPanSpeed=7;this.autoRotate=false;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minAzimuthAngle=-Infinity;this.maxAzimuthAngle=Infinity;this.noKeys=false;this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40};this.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT};var E=this;var c=0.000001;var t=new THREE.Vector2();var p=new THREE.Vector2();var F=new THREE.Vector2();var d=new THREE.Vector2();var q=new THREE.Vector2();var l=new THREE.Vector2();var L=new THREE.Vector3();var G=new THREE.Vector3();var s=new THREE.Vector2();var b=new THREE.Vector2();var D=new THREE.Vector2();var o;var S;var C=0;var h=0;var v=1;var k=new THREE.Vector3();var e=new THREE.Vector3();var r=new THREE.Quaternion();var f={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5};var T=f.NONE;var j=f.ROTATE;this.setMode=function(U){j=U};this.getMode=function(){return j};this.target0=this.target.clone();this.position0=this.object.position.clone();this.zoom0=this.object.zoom;var R=new THREE.Quaternion().setFromUnitVectors(H.up,new THREE.Vector3(0,1,0));var n=R.clone().inverse();var O={type:"change"};var K={type:"start"};var u={type:"end"};this.rotateLeft=function(U){if(U===undefined){U=g()}h-=U};this.rotateUp=function(U){if(U===undefined){U=g()}C-=U};this.panLeft=function(V){var U=this.object.matrix.elements;L.set(U[0],U[1],U[2]);L.multiplyScalar(-V);k.add(L)};this.panUp=function(V){var U=this.object.matrix.elements;L.set(U[4],U[5],U[6]);L.multiplyScalar(V);k.add(L)};this.pan=function(W,V){var X=E.domElement===document?E.domElement.body:E.domElement;if(E.object instanceof THREE.PerspectiveCamera){var U=E.object.position;var Z=U.clone().sub(E.target);var Y=Z.length();Y*=Math.tan((E.object.fov/2)*Math.PI/180);E.panLeft(2*W*Y/X.clientHeight);E.panUp(2*V*Y/X.clientHeight)}else{if(E.object instanceof THREE.OrthographicCamera){E.panLeft(W*(E.object.right-E.object.left)/X.clientWidth);E.panUp(V*(E.object.top-E.object.bottom)/X.clientHeight)}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")}}};this.dollyIn=function(U){if(U===undefined){U=A()}if(E.object instanceof THREE.PerspectiveCamera){v/=U}else{if(E.object instanceof THREE.OrthographicCamera){E.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom*U));E.object.updateProjectionMatrix();E.dispatchEvent(O)}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")}}};this.dollyOut=function(U){if(U===undefined){U=A()}if(E.object instanceof THREE.PerspectiveCamera){v*=U}else{if(E.object instanceof THREE.OrthographicCamera){E.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/U));E.object.updateProjectionMatrix();E.dispatchEvent(O)}else{console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")}}};this.update=function(){var V=this.object.position;G.copy(V).sub(this.target);G.applyQuaternion(R);o=Math.atan2(G.x,G.z);S=Math.atan2(Math.sqrt(G.x*G.x+G.z*G.z),G.y);if(this.autoRotate&&T===f.NONE){this.rotateLeft(g())}o+=h;S+=C;o=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,o));S=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,S));S=Math.max(c,Math.min(Math.PI-c,S));var U=G.length()*v;U=Math.max(this.minDistance,Math.min(this.maxDistance,U));this.target.add(k);G.x=U*Math.sin(S)*Math.sin(o);G.y=U*Math.cos(S);G.z=U*Math.sin(S)*Math.cos(o);G.applyQuaternion(n);V.copy(this.target).add(G);this.object.lookAt(this.target);h=0;C=0;v=1;k.set(0,0,0);if(e.distanceToSquared(this.object.position)>c||8*(1-r.dot(this.object.quaternion))>c){this.dispatchEvent(O);e.copy(this.object.position);r.copy(this.object.quaternion)}};this.clearAll=function(){document.removeEventListener("mousemove",a,false);document.removeEventListener("mouseup",Q,false);this.domElement.removeEventListener("mousedown",N,false);this.domElement.removeEventListener("mousewheel",J,false);this.domElement.removeEventListener("DOMMouseScroll",J,false);this.domElement.removeEventListener("touchstart",P,false);this.domElement.removeEventListener("touchend",B,false);this.domElement.removeEventListener("touchmove",m,false);window.removeEventListener("keydown",i,false)};this.reset=function(){T=f.NONE;this.target.copy(this.target0);this.object.position.copy(this.position0);this.object.zoom=this.zoom0;this.object.updateProjectionMatrix();this.dispatchEvent(O);this.update()};function M(U){T=U}this.getPolarAngle=function(){return S};this.getAzimuthalAngle=function(){return o};function g(){return 2*Math.PI/60/60*E.autoRotateSpeed}function A(){return Math.pow(0.95,E.zoomSpeed)}function N(U){if(E.enabled===false){return}U.preventDefault();if(j===f.ROTATE){if(E.noRotate===true){return}T=f.ROTATE;t.set(U.clientX,U.clientY)}else{if(j===f.DOLLY){if(E.noZoom===true){return}T=f.DOLLY;s.set(U.clientX,U.clientY)}else{if(j===f.PAN){if(E.noPan===true){return}T=f.PAN;d.set(U.clientX,U.clientY)}}}if(T!==f.NONE){document.addEventListener("mousemove",a,false);document.addEventListener("mouseup",Q,false);E.dispatchEvent(K)}}function a(V){if(E.enabled===false){return}V.preventDefault();var U=E.domElement===document?E.domElement.body:E.domElement;if(T===f.ROTATE){if(E.noRotate===true){return}p.set(V.clientX,V.clientY);F.subVectors(p,t);E.rotateLeft(2*Math.PI*F.x/U.clientWidth*E.rotateSpeed);E.rotateUp(2*Math.PI*F.y/U.clientHeight*E.rotateSpeed);t.copy(p)}else{if(T===f.DOLLY){if(E.noZoom===true){return}b.set(V.clientX,V.clientY);D.subVectors(b,s);if(D.y>0){E.dollyIn()}else{if(D.y<0){E.dollyOut()}}s.copy(b)}else{if(T===f.PAN){if(E.noPan===true){return}q.set(V.clientX,V.clientY);l.subVectors(q,d);E.pan(l.x,l.y);d.copy(q)}}}if(T!==f.NONE){E.update()}}function Q(){if(E.enabled===false){return}document.removeEventListener("mousemove",a,false);document.removeEventListener("mouseup",Q,false);E.dispatchEvent(u);T=f.NONE}function J(U){if(E.enabled===false||E.noZoom===true||T!==f.NONE){return}U.preventDefault();U.stopPropagation();var V=0;if(U.wheelDelta!==undefined){V=U.wheelDelta}else{if(U.detail!==undefined){V=-U.detail}}if(V>0){E.dollyOut()}else{if(V<0){E.dollyIn()}}E.update();E.dispatchEvent(K);E.dispatchEvent(u)}function i(U){if(E.enabled===false||E.noKeys===true||E.noPan===true){return}switch(U.keyCode){case E.keys.UP:E.pan(0,E.keyPanSpeed);E.update();break;case E.keys.BOTTOM:E.pan(0,-E.keyPanSpeed);E.update();break;case E.keys.LEFT:E.pan(E.keyPanSpeed,0);E.update();break;case E.keys.RIGHT:E.pan(-E.keyPanSpeed,0);E.update();break}}function P(W){if(E.enabled===false){return}switch(W.touches.length){case 1:if(E.noRotate===true){return}T=f.TOUCH_ROTATE;t.set(W.touches[0].pageX,W.touches[0].pageY);break;case 2:if(E.noZoom===true){return}T=f.TOUCH_DOLLY;var V=W.touches[0].pageX-W.touches[1].pageX;var U=W.touches[0].pageY-W.touches[1].pageY;var X=Math.sqrt(V*V+U*U);s.set(0,X);break;case 3:if(E.noPan===true){return}T=f.TOUCH_PAN;d.set(W.touches[0].pageX,W.touches[0].pageY);break;default:T=f.NONE}if(T!==f.NONE){E.dispatchEvent(K)}}function m(X){if(E.enabled===false){return}X.preventDefault();X.stopPropagation();var W=E.domElement===document?E.domElement.body:E.domElement;switch(X.touches.length){case 1:if(E.noRotate===true){return}if(T!==f.TOUCH_ROTATE){return}p.set(X.touches[0].pageX,X.touches[0].pageY);F.subVectors(p,t);E.rotateLeft(2*Math.PI*F.x/W.clientWidth*E.rotateSpeed);E.rotateUp(2*Math.PI*F.y/W.clientHeight*E.rotateSpeed);t.copy(p);E.update();break;case 2:if(E.noZoom===true){return}if(T!==f.TOUCH_DOLLY){return}var V=X.touches[0].pageX-X.touches[1].pageX;var U=X.touches[0].pageY-X.touches[1].pageY;var Y=Math.sqrt(V*V+U*U);b.set(0,Y);D.subVectors(b,s);if(D.y>0){E.dollyOut()}else{if(D.y<0){E.dollyIn()}}s.copy(b);E.update();break;case 3:if(E.noPan===true){return}if(T!==f.TOUCH_PAN){return}q.set(X.touches[0].pageX,X.touches[0].pageY);l.subVectors(q,d);E.pan(l.x,l.y);d.copy(q);E.update();break;default:T=f.NONE}}function B(){if(E.enabled===false){return}E.dispatchEvent(u);T=f.NONE}this.domElement.addEventListener("mousedown",N,false);this.domElement.addEventListener("mousewheel",J,false);this.domElement.addEventListener("DOMMouseScroll",J,false);this.domElement.addEventListener("touchstart",P,false);this.domElement.addEventListener("touchend",B,false);this.domElement.addEventListener("touchmove",m,false);window.addEventListener("keydown",i,false);this.update()};THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype);THREE.OrbitControls.prototype.constructor=THREE.OrbitContro;Ab.namespace("bim3d");Ab.bim3d.Utility={z_MESSAGE_NONE:"None",z_MESSAGE_ISOLATE:"Isolates:",Z_MESSAGE_HIGHLIGHTS:"Highlights:",Z_MESSAGE_LABELS:"Labels:",processArrayAsync:function(h,d,c){var a=jQuery.Deferred();c=c||window;var b=h.length-1;var g,f=17;function e(){g=Date.now();while(b>=0&&Date.now()-g<=f){d.call(c,h[b],b);b--}if(b>=0){setTimeout(e,1)}else{return a.resolve(b)}}e();return a.promise()},appendSelector:function(a,b,c,h,p,n,k){if(a===null){return}var f=this._getSelectorDatasources(h);var e=a.parentNode.parentNode;var m=Ext.DomHelper.append(e,{tag:"td"});if(c===this.z_MESSAGE_ISOLATE){c=View.getLocalizedString(this.z_MESSAGE_ISOLATE)}else{if(c===this.Z_MESSAGE_HIGHLIGHTS){c=View.getLocalizedString(this.Z_MESSAGE_HIGHLIGHTS)}else{if(c===this.Z_MESSAGE_LABELS){c=View.getLocalizedString(this.Z_MESSAGE_LABELS)}}}var l=Ext.DomHelper.append(m,"<p>"+c+"</p>",true);Ext.DomHelper.applyStyles(l,"x-btn-text");m=Ext.DomHelper.append(e,{tag:"td"});var d=Ext.DomHelper.append(m,{tag:"select",id:"selector_"+b},true);if(p&&p.length>0){for(var g=0;g<p.length;g++){d.dom.options[g]=p[g]}d.dom.options[p.length]=new Option(View.getLocalizedString(this.z_MESSAGE_NONE),"None")}else{if(h!==""){var j=f.names;var o=f.IDs;for(var g=0;g<j.length;g++){d.dom.options[g]=new Option(j[g],o[j[g]])}d.dom.options[j.length]=new Option(View.getLocalizedString(this.z_MESSAGE_NONE),"None")}}d.on("change",n,this,{delay:100,single:false});if(k!==undefined){d.dom.value=k}else{d.dom.value="None"}},_getSelectorDatasources:function(d){var c={};c.names=[];c.IDs={};var f=View.dataSources,e,a;for(var b=0;b<f.length;b++){e=f.items[b];if(e.type!=d){continue}a=(e.title==undefined)?e.id:e.title;c.names[c.names.length]=a;c.IDs[a]=e.id}return c}};Ab.namespace("bim3d");Ab.bim3d.ContextMenus=Base.extend({contextMenuClass:"bim3dcontextMenuPlugin",PREFIX:"BIM3DCCM",_ready:false,_clickListener:null,_filter:[],_showListener:null,isReady:function(){return this._ready},setFilter:function(a){this._filter=a},setClickListener:function(a){this._clickListener=a},setShowListener:function(a){this._showListener=a},build:function(a,e){if(this._ready){return}var b=[],g,f;for(var c=0,d=e.length;c<d;c++){f=e[c];if(this._filter.indexOf(f.id)>=0){continue}g=[];g.push(f.action);if(this._clickListener){g.push(this._clickListener)}b.push({label:f.label,actions:g,id:f.id});if(c!=d-1){b.push(null)}}jQuery("#"+a).contextPopup({items:b},this.contextMenuClass,this._showListener,this.PREFIX);this._ready=true},getMenuElement:function(a){return document.getElementById(this.PREFIX+a)},clear:function(){this._ready=false},Z_MESSAGE_CONTEXTMENU_1:"Hide selected",Z_MESSAGE_CONTEXTMENU_2:"Hide similar objects",Z_MESSAGE_CONTEXTMENU_3:"Show all objects",Z_MESSAGE_CONTEXTMENU_4:"Focus selected",Z_MESSAGE_CONTEXTMENU_5:"Clear selection"});Ab.namespace("bim3d");Ab.bim3d.CategoriesPanel=Base.extend({Z_MESSAGE_TOOLTIP:"Categories Panel",PREFIX:"BIM3D",_div:"",_containerId:"layerList",_callback:null,_categories:[],_levels:null,_openedLevels:[],_afterClick:null,_allCategoryCodes:{},_openedJsons:[],_jsonLoadListener:null,_ready:false,clearOpenedJsons:function(){this._openedJsons=[]},setJsonLoadListener:function(a){this._jsonLoadListener=a},setClickListener:function(a){this._afterClick=a},isReady:function(){return this._ready},setSuperCategories:function(a){this._categories=a},setLevels:function(a){this._levels=a},uninitialize:function(){var a=document.getElementById(this._containerId);if(a){this.domPurge(a);if(a.parentNode){a.parentNode.removeChild(a)}}this._categories=null;this._levels=null;this._openedLevels=null;this._callback=null;this._openedJsons=null;this._jsonLoadListener=null;this._afterClick=null},domPurge:function(e){var c=e.attributes,d,b,f;if(c){for(d=c.length-1;d>=0;d-=1){f=c[d].name;if(typeof e[f]==="function"){e[f]=null}}}c=e.childNodes;if(c){b=c.length;for(d=0;d<b;d+=1){this.domPurge(e.childNodes[d])}}},build:function(d,c){this._div=d;this._callback=c;var a=document.createElement("div");a.className="layerList";a.id=this._containerId;var d=document.createElement("div");d.appendChild(this._createMinimizeButton());a.appendChild(d);var b=this.createTable();a.appendChild(b);this._div.insertBefore(a,document.getElementsByTagName("canvas")[0]);this._ready=true},_createMinimizeButton:function(c){var a=document.createElement("div");a.className="minimize-button";a.title=View.getLocalizedString(this.Z_MESSAGE_TOOLTIP);var b=this;a.addEventListener("click",function(){var d=document.getElementById(b._containerId+"_table");if(this.parentNode.style.height!=="13px"){this.parentNode.style.height=13+"px";this.parentNode.style.width=16+"px";this.parentNode.style.overflow="hidden";a.className="open-button";d.style.display="none"}else{this.parentNode.style.height="auto";this.parentNode.style.width="auto";this.parentNode.style.overflow="auto";a.className="minimize-button";d.removeAttribute("style")}},false);return a},createTable:function(){var b=document.createElement("table");b.id=this._containerId+"_table";this.tableId=b.id;var a=document.createElement("tbody");b.appendChild(a);this.createRows(a,b);return b},createRows:function(a,b){if(this._categories!==null){this._createRows(a,this._categories)}a=document.createElement("tbody");a.id=b.id+"_levels";b.appendChild(a);if(this._levels!==null){this.buildLevels(this._levels,b)}},buildLevels:function(c,b){if(b===undefined){b=document.getElementById(this.tableId)}var a=b.tBodies[1];a.innerHTML="";this.createDivider(a);this._createRows(a,[c])},_createRows:function(k,g){var q=this;var o,d,b,p,h,f,m,c,n,a;for(h=0,m=g.length;h<m;h++){o=document.createElement("tr");d=document.createElement("td");d.className="title";if(g[h].title==="Exterior/Core"){d.innerHTML=View.getLocalizedString(this.Z_MESSAGE_OVERLAY_1)}else{if(g[h].title==="Disciplines"){d.innerHTML=View.getLocalizedString(this.Z_MESSAGE_OVERLAY_2)}else{if(g[h].title==="Floor Elements"){d.innerHTML=View.getLocalizedString(this.Z_MESSAGE_OVERLAY_3)}else{if(g[h].title==="Assets"){d.innerHTML=View.getLocalizedString(this.Z_MESSAGE_OVERLAY_4)}}}}o.appendChild(d);k.appendChild(o);if(g[h].superCategories){b=g[h].superCategories;n="Category"}else{b=g[h].levels;n="Level"}a=g[h].name;for(f=0,c=b.length;f<c;f++){o=document.createElement("tr");d=document.createElement("td");p=document.createElement("a");p.name=this.PREFIX+a;p.id=this.PREFIX+b[f].name;p.innerHTML=b[f].title;p.className="active";if(b[f].json!==undefined&&b[f].json!==""){p.className="inactive"}jQuery.data(p,"json",b[f].json);if(typeof b[f].dual!=="undefined"){jQuery.data(p,"dual",b[f].dual)}else{jQuery.data(p,"dual","false")}jQuery.data(p,"codes",b[f].codes);this._allCategoryCodes[b[f].name]=b[f].codes;if(b[f].action){var e=b[f].action;p.onclick=function(){e(q);if(q._afterClick){var i={json:b[f].json};q._afterClick(p,b[f].name,i,null,this);jQuery.data(p,"json",i.json)}}}else{p.onclick=this.onClick.createDelegate(this,[p,b[f].codes,b[f].functions,n,b[f].name])}d.appendChild(p);o.appendChild(d);k.appendChild(o)}}},createDivider:function(a){var b=document.createElement("tr");var c=document.createElement("td");c.className="divider";b.appendChild(c);a.appendChild(b)},onClick:function(d,a,e,f,b){var c=d.name.substring(5);var k=[];var h=false;var l=(f==="Level");if(d.className==="active"){d.className="inactive"}else{d.className="active";h=true}var j=jQuery.data(d,"json");if(this._afterClick){var g={levels:k};if(typeof j!=="undefined"&&j!==""&&j!=="null"){var i={json:j};this._afterClick(d,b,i,g,this);j=i.json;i=null}else{this._afterClick(d,b,null,g,this)}k=g.levels;g=null}if(typeof j!=="undefined"&&j!==""&&j!=="null"&&this._openedJsons.indexOf(j)<0){this._openedJsons.push(j)}else{j=null}if(l){e=["Interior"]}if(k&&k.length===0){if(c==="Floor"||c==="Assets"||c==="Levels"){k=this.getLevels(true)}if(c==="Exterior"||c==="Disciplines"){k=["All"]}}if(this._callback){this._callback(f,a,e,j,h,k,this._jsonLoadListener);this._jsonLoadListener=null}},reset:function(){var e,d,b=document.getElementsByTagName("a");for(var c=0,a=b.length;c<a;c++){e=b[c];if(e.name&&e.name.indexOf(this.PREFIX)===0){d=jQuery.data(e,"json");if(typeof d==="undefined"||d===""){e.className="active"}}}},getAllCategoryCodes:function(d){var m=[];var g,k,a,b,j,f,h=document.getElementsByTagName("a");for(var e=0,c=h.length;e<c;e++){g=h[e];a=g.id;j=jQuery.data(g,"dual");if(a&&a.indexOf(this.PREFIX)===0&&g.name.indexOf("Levels")<0){a=a.substring(5);b=d?g.className==="active":g.className==="inactive";f=this._containedIndex(m,this._allCategoryCodes[a]);if(typeof j!=="undefined"&&j==="true"&&!b&&f>=0){m.splice(f,1)}if(typeof this._allCategoryCodes[a]!=="undefined"&&b){m=m.concat(this._allCategoryCodes[a])}}}return m},getLevels:function(c){var a=[];var e=this.PREFIX+"Levels";var h,g,d=document.getElementsByTagName("a");for(var f=0,b=d.length;f<b;f++){g=d[f];if(c===undefined){h=true}else{h=c?g.className==="active":g.className==="inactive"}if(g.name&&g.name===e&&h){a.push(g.id.substring(5))}}return a},_containedIndex:function(e,d){var a;for(var b=0,c=d.length;b<c;b++){a=e.indexOf(d[b]);if(a>=0){return a}}return -1},checkAvailability:function(c){c=this.PREFIX+c;var e,b=document.getElementsByTagName("a");for(var d=0,a=b.length;d<a;d++){e=b[d];if(e.name&&e.name===c&&e.className==="active"){return true}}return false},changeLinkStatusById:function(c,a){var b=document.getElementById(this.PREFIX+c);if(b){if(a===undefined){return b.className==="active"}if(a){b.className="active"}else{b.className="inactive"}}return true},changeLinkStatus:function(d,b){d=this.PREFIX+d;var f,c=document.getElementsByTagName("a");for(var e=0,a=c.length;e<a;e++){f=c[e];if(f.name&&f.name===d){if(b){f.className="active"}else{f.className="inactive"}}}},loopTargetLinks:function(c,f){c=this.PREFIX+c;var e,b=document.getElementsByTagName("a");for(var d=0,a=b.length;d<a;d++){e=b[d];if(e.name&&e.name===c&&f){f(e,e.id,jQuery.data(e,"codes"))}}},Z_MESSAGE_OVERLAY_1:"Exterior/Core",Z_MESSAGE_OVERLAY_2:"Disciplines",Z_MESSAGE_OVERLAY_3:"Floor Elements",Z_MESSAGE_OVERLAY_4:"Assets"},{});Ab.namespace("bim3d");Ab.bim3d.Toolbar=Base.extend({_ready:false,_clickListener:null,_filter:[],isReady:function(){return this._ready},setFilter:function(a){this._filter=a},setClickListener:function(a){this._clickListener=a},build:function(c,e){var l=this;if(this._ready){return}var b=document.createElement("nav");b.id="toolBar3d";b.className="toolBar3d";c.insertBefore(b,document.getElementsByTagName("canvas")[0]);var g=document.createElement("ul");g.className="toolBar3dNav";b.appendChild(g);var d,k,j;for(var f=0,h=e.length;f<h;f++){d=e[f];if(this._filter.indexOf(d.id)>=0){continue}k=document.createElement("li");g.appendChild(k);j=document.createElement("a");j.id="toolbar3d_"+d.name;j.title=d.tooltip;j.className=d.cssName;j.onclick=l._onClick.createDelegate(l,[d.action,d.id]);k.appendChild(j)}this._ready=true},_onClick:function(a,b){a();if(this._clickListener){this._clickListener(b)}},celar:function(){},Z_MESSAGE_TOOLBAR_ORBIT:"Orbit",Z_MESSAGE_TOOLBAR_PAN:"Pan",Z_MESSAGE_TOOLBAR_ZOOM:"Zoom",Z_MESSAGE_TOOLBAR_HOME:"Home"});Ab.namespace("bim3d");Ab.bim3d.Labels=Base.extend({config:{},scenes:null,renderer:null,camera:null,length:0,batchSize:100,constructor:function(b,a){this.renderer=b;this.camera=a;this.init()},init:function(){this.scenes=[]},uninitialize:function(c){var b,a,e,d;for(a=this.scenes.length-1;a>0;a--){d=this.scenes[a];for(b=d.children.length-1;b>=0;b--){e=d.children[b];if(e){d.remove(e);e.material.map.dispose();e.geometry.dispose();e.material.dispose();e=null}}d=null}this.renderer.clearColor();this.renderer.clearDepth();this.renderer.dispose();if(c){this.scenes=null}},render:function(c){this.renderer.clearDepth();var b=this;var a=Ab.bim3d.Utility.processArrayAsync(b.scenes,function(e,d){e.children.forEach(function(f){if(!f.object.visible||!f.object.material.visible){f.visible=false}else{f.visible=true}});b.renderer.render(e,b.camera)},b);a.then(function(){if(c){c()}})},add:function(b,d,e){if(!b.visible||!b.material.visible){return}var a=this.Label(b,d);if(this.length%this.batchSize!==0){this.scenes[this.scenes.length-1].add(a)}else{var c=new THREE.Scene();c.add(a);this.scenes.push(c)}this.length++;if(e){e(a)}},clearAll:function(f){var d,c,b,e;for(var a=this.scenes.length-1;a>0;a--){d=this.scenes[a];e=d.children.length;for(c=e;c>=0;c--){b=d.children[c];if(typeof b==="undefined"){continue}if(b&&f){f(b)}d.remove(b);b.material.map.dispose();b.geometry.dispose();b.material.dispose();b=null}d=null}this.scenes=[];this.length=0},clear:function(g,f){var d,c,b,e;for(var a=this.scenes.length-1;a>0;a--){d=this.scenes[a];e=d.children.length;for(c=e;c>=0;c--){b=d.children[c];if(typeof b==="undefined"){continue}if(b&&b.object.id===g){if(f){f(b)}d.remove(b);b.geometry.dispose();b.material.dispose();b=null;this.length--;return}}}},Label:function(f,j){var a=(j+"").split("\n"),m=a.length,e=document.createElement("canvas"),o=e.width=e.height=512,c=24,d=c;var b=e.getContext("2d");b.font=c+"px Arial";b.textAlign="center";b.textBaseline="middle";var r=0;for(var q=0;q<m;++q){var p=b.measureText(a[q]);r=Math.max(r,p.width)}b.fillStyle="#000000";for(var q=0;q<m;++q){var h=a[q];b.fillText(h,o/2,o/2+(q-(m-1)/2)*d)}var k=new THREE.Texture(e);k.needsUpdate=true;var s=new THREE.SpriteMaterial({name:"ab-label",map:k,useScreenCoordinates:false});s.depthTest=false;var l=new THREE.Sprite(s);l.scale.set(11000,11000,1);var g=new THREE.Box3();g.setFromObject(f);var t=g.center();l.position.set(t.x,t.y,t.z);l.object=f;j=null;g=null;t=null;b=null;e=null;k=null;s=null;return l}});"use strict";Ab.namespace("bim3d");Ab.bim3d.Navigator=Base.extend({divId:"bim3d",config:{},container:null,containerParentNode:null,spinner:null,camera:null,renderer:null,controls:null,scenes:[],renderQueue:0,batchSize:100,allObjects:[],loader:null,hammer:null,raycaster:null,selectedObject:null,selectedObjectParentId:null,selectedObjectMaterial:null,selectedHiddenList:[],selectedMaterial:null,isolatedMaterials:[],lastObj:null,lastEventType:null,mode:0,objectIdsMap:{},highlightedObjects:{},materialsMap:{},categoriesPanel:null,toolbar:null,contextMenus:null,labels:null,path:null,jsonWorker:null,calls:0,objectClickEventListener:null,objectHideEventListener:null,objectClickable:true,objectDoubleClickable:true,contexMenuItems:null,toolbarMenus:null,constructor:function(a,b){this.divId=a;this.config=b;this.init()},addToolbarMenus:function(a){this.toolbarMenus.push(a)},buildToolbarMenus:function(a){if(a!==undefined){this.toolbarMenus=a}if(this.toolbarMenus&&!this.toolbar.isReady()){this.toolbar.build(this.container,this.toolbarMenus)}},buildCategoriesPanel:function(){if(this.categoriesPanel&&!this.categoriesPanel.isReady()){this.categoriesPanel.build(this.container,this._overlayPanelCallback.bind(this))}},AddContexMenuItem:function(a){this.contexMenuItems.push(a)},buildContextMenus:function(b){var a=this.contexMenuItems;if(b!==undefined){a=a.concat(b)}if(a){this.contextMenus.build(this.divId,a)}},setObjectHideEventListener:function(a){this.objectHideEventListener=a},setObjectClickEventListener:function(a){this.objectClickEventListener=a},setObjectClickable:function(a){this.objectClickable=a},setObjectDoubleClickable:function(a){this.objectDoubleClickable=a},setSuperCategories:function(a){if(this.categoriesPanel===null){this.categoriesPanel=new Ab.bim3d.CategoriesPanel()}this.categoriesPanel.setSuperCategories(a)},setLevels:function(a){if(this.categoriesPanel===null){this.categoriesPanel=new Ab.bim3d.CategoriesPanel()}this.categoriesPanel.setLevels(a)},setPath:function(a){this.path=a},init:function(){this.selectedObject=null;this.selectedObjectParentId=null;this.selectedObjectMaterial=null;this.selectedHiddenList=[];this.isolatedMaterials=[];this.materialsMap={};this.calls=0;this.toolbar=new Ab.bim3d.Toolbar();this.contextMenus=new Ab.bim3d.ContextMenus();this.path=View.project.enterpriseGraphicsFolder+"/";var a=this;jQuery(window).bind("beforeunload",function(b){a.clearAll(b)});this.objectIdsMap={};this.highlightedObjects={};this.selectedMaterial=this._getSelectedMaterial("rgb(255, 0, 0)");this.lastObj=null;this.lastEventType=null;this.loader=new THREE.ObjectLoader();this.raycaster=new THREE.Raycaster();this.renderer=new THREE.WebGLRenderer({alpha:1,antialias:true,clearColor:16777215,preserveDrawingBuffer:true});this.renderer.autoClear=false;this.renderer.shadowMap.enabled=false;this.renderer.setPixelRatio(window.devicePixelRatio?window.devicePixelRatio:1);THREE.Object3DIdCount=0;this.container=this._getContainer();this._addLogo();this.containerParentNode=this.container.parentNode;this.spinner=new Spinner();this.renderer.setSize(this.container.clientWidth,this.container.clientHeight);this.camera=new THREE.PerspectiveCamera(65,this.container.clientWidth/this.container.clientHeight,10000,1000000);this.labels=new Ab.bim3d.Labels(this.renderer,this.camera);this.container.appendChild(this.renderer.domElement);this.controls=new THREE.OrbitControls(this.camera,this.renderer.domElement);this.controls.addEventListener("change",this.controlsChange.createDelegate(this));this._clickEvents(this.renderer.domElement);if(this.toolbarMenus===null){this.toolbarMenus=[{name:"Orbit",tooltip:View.getLocalizedString(a.toolbar.Z_MESSAGE_TOOLBAR_ORBIT),cssName:"orbitIcon",action:function(){a.controls.setMode(0)}},{name:"Pan",tooltip:View.getLocalizedString(a.toolbar.Z_MESSAGE_TOOLBAR_PAN),cssName:"panIcon",action:function(){a.controls.setMode(2)}},{name:"Zoom",tooltip:View.getLocalizedString(a.toolbar.Z_MESSAGE_TOOLBAR_ZOOM),cssName:"zoomIcon",action:function(){a.controls.setMode(1)}},{name:"Home",tooltip:View.getLocalizedString(a.toolbar.Z_MESSAGE_TOOLBAR_HOME),cssName:"homeIcon",action:function(){a.home()}}]}if(this.contexMenuItems===null){this.contexMenuItems=[{label:View.getLocalizedString(a.contextMenus.Z_MESSAGE_CONTEXTMENU_1),id:"hideSelected",action:function(){var b=a.selectedObject;if(b){a.hide(b.id)}}},{label:View.getLocalizedString(a.contextMenus.Z_MESSAGE_CONTEXTMENU_2),id:"hideSimilar",action:function(){var e=a.selectedObject;if(e){e.visible=false;a.selectedHiddenList.push(e.id);var c="Category";var d=e.parent.userData[c];if(d){var b=Ab.bim3d.Utility.processArrayAsync(a.scenes,function(g,f){g.traverse(function(h){if(h instanceof THREE.Mesh&&h.parent.userData){if(h.parent.userData[c]&&h.parent.userData[c]===d){h.visible=false}}})},a);b.then(function(){a.clearLabel(e.id);if(a.objectHideEventListener){a.objectHideEventListener(e)}a.controlsChange()})}}}},{label:View.getLocalizedString(a.contextMenus.Z_MESSAGE_CONTEXTMENU_3),id:"showAll",action:function(){var b=Ab.bim3d.Utility.processArrayAsync(a.scenes,function(d,c){d.traverse(function(e){if(e instanceof THREE.Mesh&&e.parent.userData){e.visible=true;e.material.visible=true}})},a);b.then(function(){if(a.categoriesPanel){a.categoriesPanel.reset()}a.selectedHiddenList=[];a.controlsChange()})}},{label:View.getLocalizedString(a.contextMenus.Z_MESSAGE_CONTEXTMENU_4),id:"focusSelected",action:function(){a.zoomIn()}},{label:View.getLocalizedString(a.contextMenus.Z_MESSAGE_CONTEXTMENU_5),id:"clearSelection",action:function(){var b=a.selectedObject;if(b){b.material=a.selectedObjectMaterial}a.selectedObject=null;a.selectedObjectMaterial=null;if(a.objectHideEventListener){a.objectHideEventListener(a.selectedObject)}a.controlsChange()}}]}},_addLogo:function(){var a=this;DrawingBimService.getLogo({async:false,callback:function(c){var b=document.createElement("div");b.className="bim3dlogo";b.innerHTML=c;a.container.appendChild(b)},errorHandler:function(b,c){Ab.view.View.showException(c)}})},_getContainer:function(){var a=document.getElementById(this.divId);if(a===null&&this.containerParentNode!==null){a=document.createElement("div");a.id=this.divId;a.style.position="absolute";a.style.width="100%";a.style.height="96%";a.style.overflow="hidden";containerParentNode.appendChild(a)}return a},_clickEvents:function(f){var c=this.controls.getMode();var d=null;var b=false;var e=this;var a=[];jQuery(f).bind("mousedown",function(g){a=[g.clientX,g.clientY]});jQuery(f).bind("click",function(g){if(a[0]!==g.clientX||a[1]!==g.clientY){return}if(d===null){d=setTimeout(function(){if(!b){e._onTap(g,"click");d=null}b=false},300)}else{clearTimeout(d)}});jQuery(f).bind("dblclick",function(g){clearTimeout(d);d=null;b=true;e._onTap(g,"dbclick");b=false});jQuery(window).bind("keydown",function(g){if(g.ctrlKey){e.controls.setMode(1)}if(g.key==="Escape"){e.home()}if(g.shiftKey){e.controls.setMode(2)}});jQuery(window).bind("keyup",function(g){if(c!==null){e.controls.setMode(c)}})},clearAll:function(f){jQuery(window).unbind("beforeunload");jQuery(this.renderer.domElement).unbind();this.objectIdsMap=undefined;this.highlightedObjects=undefined;this.isolatedMaterials=undefined;this.spinner=undefined;this.loader=undefined;this.raycaster=undefined;if(this.categoriesPanel){this.categoriesPanel.uninitialize()}THREE.ShaderChunk=null;var a=View.panels.get("properiesPanel");if(a){a.clear();a.clearGridRows()}this.materialsMap=undefined;var c=this;for(var b=0,d=this.scenes.length;b<d;b++){this.scenes[b].traverse(function(e){if(e instanceof THREE.Mesh){if(e.parent.userData){e.parent.userData=null}if(e.geometry){e.geometry.dispose();e.geometry=null}if(e.material){e.material.dispose();e.material=null}c.scenes[b].remove(e);e=null}});this.scenes[b]=null}this.scenes=null;if(this.labels){this.labels.uninitialize(true);this.labels=null}this.objectClickEventListener=null;this.objectHideEventListener=null;this.contextMenus=null;this.toolbarMenus=null;this.controls=null;this.renderer.dispose();this.renderer=null;this.camera=null;if(this.container&&this.containerParentNode){if(document.getElementsByTagName("canvas").length>0){this.container.removeChild(document.getElementsByTagName("canvas")[0])}this.containerParentNode.removeChild(this.container)}this.container=undefined},uninitialize:function(){if(this.calls===1){return}var b=this;this.selectedObject=null;this.selectedObjectParentId=null;this.selectedObjectMaterial=null;this.selectedHiddenList=[];this.materialsMap={};this.objectIdsMap={};this.highlightedObjects={};this.lastObj=null;this.lastEventType=null;this.isolatedMaterials=[];for(var a=0,c=this.scenes.length;a<c;a++){this.scenes[a].traverse(function(d){if(d instanceof THREE.Mesh){if(d.geometry){d.geometry.dispose();d.geometry=null}if(d.material){d.material.dispose();d.material=null}b.scenes[a].remove(d);d=null}});this.scenes[a]=null}this.scenes=[];this.renderer.clearDepth();this.renderer.dispose();this.labels.uninitialize();this.camera.fov=65;this.camera.aspect=this.container.clientWidth/this.container.clientHeight;this.camera.near=10000;this.camera.far=1000000;this.camera.zoom=1},resize:function(c){if(this.renderer){if(typeof c==="undefined"){c=true}var b=this.container.clientHeight;var a=Math.tan(((Math.PI/180)*this.camera.fov/2));this.container=document.getElementById(this.divId);this.camera.aspect=this.container.clientWidth/this.container.clientHeight;this.camera.fov=(360/Math.PI)*Math.atan(a*(this.container.clientHeight/b));this.camera.updateProjectionMatrix();if(this.scenes&&this.scenes.length>0){this.camera.lookAt(this.scenes[this.scenes.length-1].position)}this.renderer.setSize(this.container.clientWidth,this.container.clientHeight);if(c){this.home()}}},_getSelectedMaterial:function(a){return new THREE.MeshPhongMaterial({name:"ab-selection",color:new THREE.Color(a),ambient:16711680,opacity:0.7,transparent:false,shading:1})},startSpinning:function(){this.spinner.spin(this.container)},stopSpinning:function(){this.spinner.stop()},load:function(b,a,d){this.startSpinning();var c=this;d3_queue.queue().defer(c._loadBuffer.bind(c),c.path+b+".bin").defer(c._load.bind(c),c.path+b+".bin.json",null).await(function(e,h,g){if(e){Ab.view.View.showMessage("error",View.getLocalizedString(c.z_MESSAGE_NO_3D_MODEL));c.spinner.stop();return}c.calls++;if(a){c.uninitialize()}var f=JSON.parse(g);f.geometries.forEach(function(k,j){k.data=h[j];k.type="BufferGeometry"});c.loader.parse(f,function(i){var k=new THREE.Box3();var j;i.traverse(function(l){if(l instanceof THREE.Mesh){l.geometry.computeBoundingBox();l.geometry.computeVertexNormals();k.union(l.geometry.boundingBox)}});if(a){c._fit(i,k);c.controls.target0=c.controls.target.clone();c.controls.position0=c.camera.position.clone();c.controls.zoom0=c.camera.zoom}c._addScenes(i,!a);c.buildToolbarMenus();c.buildCategoriesPanel();c.buildContextMenus();c.stopSpinning();if(d){d(c.scenes)}})});c._animate()},_addScenes:function(k,h){var f,b,d;var a=[];for(var e=0,g=k.children.length;e<g;e+=this.batchSize){f=new THREE.Scene();for(var c=e;c<Math.min(e+this.batchSize,g);++c){b=k.children[c];b.parent=f;f.add(b)}f.add(new THREE.AmbientLight(4473924));var d=new THREE.DirectionalLight(16777215,1);d.position.set(100,100,50);f.add(d);this.scenes.push(f)}},_fit:function(o,l){var a=this;var A=l.center();var g=2*Math.max(Math.abs(l.min.x),Math.abs(l.min.y),Math.abs(l.max.x),Math.abs(l.max.y));a.camera.position.set(g,g,g);a.camera.lookAt(A);a.camera.updateProjectionMatrix();a.camera.updateMatrixWorld();var c=new THREE.Box2;var b=new THREE.Vector3;var v=new THREE.Vector3;var q=new THREE.Vector3;var f=new THREE.Vector3;var d=new THREE.Vector3;var e,u,s,k,j,h;o.traverse(function(i){if(i instanceof THREE.Mesh&&i.geometry.attributes){e=i.geometry.attributes.position.array;for(u=0,s=e.length;u<s;){k=e[u++],j=e[u++],h=e[u++];d.set(k,j,h).project(a.camera);if(d.x<c.min.x){c.min.x=d.x;b.set(k,j,h)}if(d.x>c.max.x){c.max.x=d.x;v.set(k,j,h)}if(d.y<c.min.y){c.min.y=d.y;f.set(k,j,h)}if(d.y>c.max.y){c.max.y=d.y;q.set(k,j,h)}}}});b.sub(a.camera.position).normalize();v.sub(a.camera.position).normalize();q.sub(a.camera.position).normalize();f.sub(a.camera.position).normalize();b.add(v).normalize();q.add(f).normalize();var k=b.x;var j=q.y;var h=b.z;var t=Math.sqrt((1-j*j)/(k*k+h*h));var B=new THREE.Vector3(t*k,j,t*h).setLength(A.distanceTo(a.camera.position)).add(a.camera.position);a.camera.lookAt(B);a.controls.target.set(B.x,B.y,B.z);var p=1.06*0.5*Math.max(c.size().x,c.size().y);a.camera.zoom=1/p;a.camera.updateProjectionMatrix()},_load:function(c,b,d){var a=new THREE.XHRLoader();if(b){a.setResponseType(b)}a.load(c,function(e){d(null,e)},undefined,function(e){d(e)})},_loadBuffer:function(a,b){this._load(a,"arraybuffer",function(k,h){if(k){b(k);return}var l=new DataView(h),g=0,d=h.byteLength,e=[];while(g<d){var c=l.getUint32(g,true),f=l.getUint32(g+=4,true),i=new Float32Array(h,g+=4,c*3),j=new (c>65535?Uint32Array:Uint16Array)(h,g+=i.byteLength,f*3);g+=j.byteLength;g+=g&3;e.push({attributes:{position:{type:i.constructor.name,itemSize:3,array:i}},index:{type:j.constructor.name,array:j}})}b(null,e)})},_overlayPanelCallback:function(f,a,e,k,h,i,g){var j=this;if(k!==null){this.load(k,false,function(m){if(f==="Level"){j.showCategories(j.categoriesPanel.getAllCategoryCodes(true),i,true,true,true,m)}if(g){g(m,k,f,a,e,i,h);g=null}})}else{if(f==="Level"){if(h){j.showLevel(a[0],j.categoriesPanel.getAllCategoryCodes(false),h,true)}else{j.showLevel(a[0],[],h,true)}return}var d,c,j=this,b;var l=Ab.bim3d.Utility.processArrayAsync(j.scenes,function(m){m.traverse(function(n){if(n instanceof THREE.Mesh){d=n.parent.userData[f];c=n.parent.userData?n.parent.userData.Function:null;if(d&&a.indexOf(d)>=0){if(e!==undefined&&c&&n.parent.userData.Level){if(i[0]==="All"){b=true}else{b=i.indexOf(n.parent.userData.Level)>=0}if(e.indexOf(c)>=0&&b){n.visible=h}}else{n.visible=h}}}})},j);l.then(function(){j.render()})}},render:function(d){this.renderer.clear();var b=this;for(var a=0,c=this.scenes.length;a<c;a++){this.renderer.render(this.scenes[a],this.camera)}if(this.labels&&this.labels.length>0){this.labels.render(d)}else{if(d){d()}}},_animate:function(){if(this.scenes===null){return}requestAnimationFrame(this._animate.bind(this));if(this.controls){this.controls.update()}if(this.renderQueue>=this.scenes.length){return}var b=Date.now(),a=17;do{this.renderer.render(this.scenes[this.renderQueue],this.camera)}while(++this.renderQueue<this.scenes.length&&Date.now()-b<a);if(this.renderQueue===this.scenes.length&&this.labels&&this.labels.length>0){this.labels.render()}},controlsChange:function(){this.renderQueue=0;this.renderer.clear()},addLabel:function(c,b){var a=this.getObjectById(c);if(this.labels&&a){this.labels.add(a,b,null)}},addLabels:function(f,e,d){var b=this;for(var a=0,c=b.scenes.length;a<c;a++){b.scenes[a].traverseVisible(function(g){if(g instanceof THREE.Mesh&&g.parent.userData.Category===f&&e[g.parent.userData.PrimaryKey]){b.addLabel(g.id,e[g.parent.userData.PrimaryKey])}})}this.render(d)},clearLabels:function(){if(this.labels){this.labels.clearAll()}},clearLabel:function(b,a){if(this.labels){this.labels.clear(b);if(a){this.render()}}},_getCategory:function(a){if(a&&a.Category){return a.Category}return null},_getLevel:function(a){if(a&&a.Level){return a.Level}return null},_getAssetType:function(a){if(a&&a.AssetTable){return a.AssetTable}return null},_getPrimaryKey:function(a){if(a&&a.PrimaryKey){return a.PrimaryKey}return null},getSelectedObjectAssetType:function(){if(this.selectedObject!==null){return this._getAssetType(this.selectedObject.parent.userData)}return null},getSelectedObjectPrimaryKey:function(){if(this.selectedObject!==null){return this._getPrimaryKey(this.selectedObject.parent.userData)}return null},_onTap:function(a,l){if(!this.objectClickable&&!this.objectDoubleClickable){return}a.preventDefault();var n=this.renderer.domElement.getBoundingClientRect();var d=a.clientX;var b=a.clientY;var p=((d-n.left)/n.width)*2-1;var m=-((b-n.top)/n.height)*2+1;var o=new THREE.Vector3();o.set(p,m,0.5);this.raycaster.setFromCamera(o,this.camera);var q=[];for(var f=0,h=this.scenes.length;f<h;f++){q=q.concat(this.scenes[f])}var g=this.raycaster.intersectObjects(q,true);q=null;this.lastEventType=l;var e=0;var r=g.length;if(r>0&&this.selectedObject!==null&&this.selectedObjectMaterial!==null&&this.lastEventType==="click"){this.selectedObject.material=this.selectedObjectMaterial}var k,c;while(e<r){if(g[e].object.visible&&g[e].object.material.visible){this.lastObj=g[e].object;if(g[e].object.material.wireframe===false&&g[e].distance>=this.camera.near&&g[e].distance<=this.camera.far){k=g[e].object.parent.userData.Isolated;k=typeof k!=="undefined"?k==="true":true;if(k){if(this.lastEventType==="click"){if(this.objectClickable){if(g[e].object.material.name!=="ab-selection"){this.selectedObject=g[e].object;this.selectedObjectParentId=g[e].object.parent.id;this.selectedObjectMaterial=g[e].object.material;g[e].object.material=this.selectedMaterial.clone()}if(this.objectClickEventListener){c=this.selectedObject.parent.userData;this.objectClickEventListener(this.selectedObject.id,this._getCategory(c),this._getLevel(c),this._getAssetType(c),this._getPrimaryKey(c),c)}}}else{if(this.objectDoubleClickable){this._onHide(g[e])}}break}}}e++}this.render()},_onHide:function(a){if(this.selectedObject&&this.selectedObject.id===a.object.id){a.object.visible=false;this.selectedHiddenList.push(a.object.id)}else{this.show(a.object,false)}this.clearLabel(a.object.id);if(this.objectHideEventListener){this.objectHideEventListener(a)}},showLevel:function(c,b,a,g){var f=this;var e="Level",h;var d=Ab.bim3d.Utility.processArrayAsync(f.scenes,function(i){i.traverse(function(j){if(j instanceof THREE.Mesh){if(a){h=j.parent.userData.Function==="Interior"}else{h=true}if(j.parent.userData[e]&&j.parent.userData[e]===c&&h){j.visible=a&&b.indexOf(j.parent.userData.Category)<0}}})},f);d.then(function(){if(g){f.render()}})},showCategories:function(e,h,g,a,d,b){if(typeof b==="undefined"){b=this.scenes}var i=this,c;var f="Category";var j=Ab.bim3d.Utility.processArrayAsync(b,function(k){k.traverse(function(l){if(l instanceof THREE.Mesh){if(h!==null&&h.length>0){c=h.indexOf(l.parent.userData.Level)>=0}else{c=true}if(e.indexOf(l.parent.userData[f])>=0&&c){l.visible=g}else{if(a){l.visible=!g}}}})},i);j.then(function(){if(d){i.render()}})},show:function(b,a,c){if(b&&b instanceof THREE.Mesh){b.visible=a;b.material.visible=a;if(valueExists(c)&&c){this.controlsChange()}}},hide:function(b){var a=this.getObjectById(b);if(a){a.visible=false;this.selectedHiddenList.push(b);this.render();if(this.objectHideEventListener){this.objectHideEventListener(a)}}},zoomIn:function(b){if(!valueExists(b)){b=this.selectedObject}if(!b){return}var f=new THREE.Box3();f.setFromObject(b);var e=new THREE.Frustum();this._updateFrustum(e,b);if(e.containsPoint(f.max)===false){return}var c=1.1;this.controls.target=f.center();var a=new THREE.Vector3();a.setFromMatrixPosition(b.matrixWorld);var d=this.camera.position.distanceTo(a)-5000;if(d<this.camera.near){this.controls.update();return}while(d>=this.camera.near&&e.containsPoint(f.max)){this.controls.dollyIn(c);this.controls.update();d=this.camera.position.distanceTo(a)-5000;this._updateFrustum(e,b);f.setFromObject(b)}},_updateFrustum:function(b,a){this.camera.updateMatrix();this.camera.updateMatrixWorld();this.camera.matrixWorldInverse.getInverse(this.camera.matrixWorld);a.updateMatrix();a.updateMatrixWorld();b.setFromMatrix(new THREE.Matrix4().multiplyMatrices(this.camera.projectionMatrix,this.camera.matrixWorldInverse))},zoomOut:function(a){if(!valueExists(a)){a=this.selectedObject}if(!a){return}var b=1.3;this.controls.dollyOut(b);this.controls.update()},home:function(){this.controls.reset()},getObjectById:function(e){var a=null;var c=parseInt(e+"");for(var b=0,d=this.scenes.length;b<d;b++){a=this.scenes[b].getObjectById(c);if(a){return a}}return a},getObjectByPrimaryKey:function(b,e){var a=null;for(var c=0,d=this.scenes.length;c<d;c++){this.scenes[c].traverseVisible(function(f){if(f instanceof THREE.Mesh&&f.parent.userData.PrimaryKey&&f.parent.userData.PrimaryKey===b){e(f);return}})}},highlight:function(c,e,a){if(!valueExists(a)){a=true}var d;for(var b=0;b<c.length;b++){d=this.getObjectById(c[b]);if(d&&d.visible&&d.material.visible){this.highlightedObjects[c[b]]=d.material;if(e&&e[b]){d.material=new THREE.MeshBasicMaterial({name:"ab-highlight",color:e[b]})}else{d.material=new THREE.MeshBasicMaterial({name:"ab-highlight",color:"rgb(255,0,0)"})}}}if(a){this.render()}},thematicHighlight:function(d,f,b,a,e){var c=this;this.clearHighlight(false);this.retrieveHighlightColors(d,f,b,a,e,function(g){c.highlightByPrimaryKeys(g,null,true)})},highlightByPrimaryKeys:function(g,a,f){var e=this,b,d;if(!valueExists(a)){a=e.scenes}if(!valueExists(f)){f=false}var c=Ab.bim3d.Utility.processArrayAsync(a,function(i,h){i.traverse(function(j){if(j instanceof THREE.Mesh&&j.parent&&j.parent.userData&&j.parent.userData.PrimaryKey){b=g[j.parent.userData.PrimaryKey];if(typeof b!=="undefined"){if(!e.highlightedObjects[j.id]){e.highlightedObjects[j.id]=j.material}j.material=new THREE.MeshPhongMaterial({name:"ab-highlight",color:b,ambient:j.material.ambient,shading:j.material.shading})}}})},e);c.then(function(){g=null;if(f){e.render()}})},clearHighlight:function(a){var d,c;var b=this;Object.keys(b.highlightedObjects).forEach(function(e){d=b.getObjectById(e);c=b.highlightedObjects[e];d.material=c});this.highlightedObjects={};if(valueExists(a)&&a){this.render()}},select:function(d,a,c){if(!valueExists(a)){a="rgb(255, 0, 0)"}var b=this.getObjectById(d);if(b){this.clearSelection();this.selectedObject=b;this.selectedObjectMaterial=b.material;b.material=this._getSelectedMaterial(a);if(valueExists(c)){c(b.uuid)}}},clearSelection:function(){if(this.selectedObject){this.selectedObject.material=this.selectedObjectMaterial}this.selectedObject=null;this.selectedObjectMaterial=null},isolateByMaterial:function(a){if(this.isolatedMaterials.length>0){this.clearIsolated(this._isolateByMaterial.bind(this,a))}else{this._isolateByMaterial(a)}},_isolateByMaterial:function(e){var c=this,d,a=[];var b=Ab.bim3d.Utility.processArrayAsync(c.scenes,function(g,f){g.traverseVisible(function(h){if(h instanceof THREE.Mesh){if(h.material.name===""){h.material.name=h.material.uuid}if(h.material.name!==e){c.isolatedMaterials.push({name:h.material.name,transparent:h.material.transparent,opacity:h.material.opacity,depthWrite:h.material.depthWrite});h.material.transparent=true;h.material.opacity=0.1;h.material.depthWrite=false}else{a.push(h.material.name)}}})},c);b.then(function(){if(a.length>0){c.render()}else{c.clearIsolated()}})},isolate:function(a){if(this.isolatedMaterials.length>0){this.clearIsolated(this._isolate.bind(this,a))}else{this._isolate(a)}},_isolate:function(a){var d=this,e,c;var b=Ab.bim3d.Utility.processArrayAsync(d.scenes,function(g,f){g.traverseVisible(function(h){if(h instanceof THREE.Mesh){e=h.parent.userData.Category;if(a.indexOf(e)>=0){c=h.material.uuid;h.parent.userData.Isolated="true"}else{h.parent.userData.Isolated="false"}if(c!==h.material.uuid){if(h.material.name===""){h.material.name=c}d.isolatedMaterials.push({name:h.material.name,transparent:h.material.transparent,opacity:h.material.opacity,depthWrite:h.material.depthWrite});h.material.transparent=true;h.material.opacity=0.1;h.material.depthWrite=false}}})},d);b.then(function(){d.render()})},clearIsolated:function(f){if(this.isolatedMaterials.length===0){if(f){f()}return 0}var c=this,a,d=this.isolatedMaterials.length,e;var b=Ab.bim3d.Utility.processArrayAsync(c.scenes,function(h,g){h.traverse(function(i){if(i instanceof THREE.Mesh){if(i.parent.userData.Isolated){delete i.parent.userData.Isolated}for(a=0;a<d;a++){if(c.isolatedMaterials[a].name===i.material.name){i.material.transparent=c.isolatedMaterials[a].transparent;i.material.opacity=c.isolatedMaterials[a].opacity;i.material.depthWrite=c.isolatedMaterials[a].depthWrite;break}}}})},c);b.then(function(){c.isolatedMaterials=[];if(f){f()}else{c.render()}})},getImageBytes:function(){var a=this.renderer.domElement.toDataURL();return a.substring(22)},retrieveHighlightColors:function(d,f,c,b,e,a){DrawingBimService.getHighlightColors(d,f,c,b,e,{async:false,callback:function(g){if(a){a(g)}},errorHandler:function(g,h){Ab.view.View.showException(h)}})},z_MESSAGE_NO_3D_MODEL:"Requested 3D model is not available. Please contact your system administrator."});