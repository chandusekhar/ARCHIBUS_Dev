<head>

<title>Information on AfmAction Being Posted</title>

<script language="JavaScript" type="text/javascript">

//	File to view AfmAction calls in a convenient form for debugging.

//	Edit common.js to call this popup window with an invocation like:

//	if ( strXMLValue.search( "login.axvw" ) == -1 ) 
//      window.showModalDialog( 
//		"schema/ab-system/html/show-afm-action.htm", 
//		"view='view'&url='url'&action='act'", 
//		"status:no; center:yes ; resizeable: yes ;  dialogHeight: 600 px ; dialogWidth: 1000 px" ) ;

//	Do not call for login action, as this relative path to show-afm-action.htm works only
//	the second time you log in (prior to that, the relative location used to load the htm
//	is different).

//	If your edits to common.js don't "take", restart your browser (or if the issue persists
//	flush all temporary files on the client and then restart your browser) to make sure 
//	that the new changed file is being downloaded and used.


//	Object to hold argument/value pairs.
var arg_pairs = new Object();
arg_pairs.names = new Array();
arg_pairs.values = new Array();

//	Variables to hold encoded and decoded AfmAction value.
var strAfmActionEncoded = "" ;
var strAfmActionDecoded = "" ;

//	Initialize dialog values.
window.onload=Init;

function Init()
{

	document.all.okbutton.focus() ;

	parseDialogArguments( window.dialogArguments ) ;

	document.all.target.value = arg_pairs.values[0];

	document.all.view.value = arg_pairs.values[1];

	strAfmActionEncoded = arg_pairs.values[2];

	var strRegex = /%20/g;	// space
	strAfmActionDecoded = strAfmActionEncoded.replace( strRegex, " " ) ;
	strRegex = /%22/g;		// double-quote
	strAfmActionDecoded = strAfmActionDecoded.replace( strRegex, "\"" ) ;
	strRegex = /%2F/g;		// backslash
	strAfmActionDecoded = strAfmActionDecoded.replace( strRegex, "\\" ) ;

	document.all.act.value = strAfmActionDecoded ;


}


//	Parse arguments into the arg_pairs arrays.
function parseDialogArguments( strArguments ){

    var query = strArguments ;
    if(query == "") { return null; }
    var pairs = query.split("\&");
    for(var i = 0; i < pairs.length; i++){
        var pos = pairs[i].indexOf('=');
        if(pos == -1){ continue; }
        var arg_name = pairs[i].substring(0,pos);
        var arg_value = pairs[i].substring(pos+1);
        arg_pairs.names[i] = arg_name;
        arg_pairs.values[i] = arg_value;
    }
}

</script>


</head>

<body>
<form>


<br>
<table>
	<tr>
		<td><input type="button" name="okbutton" accesskey="O" focus="1" onClick="window.close();" value="    Close    " ></td>
	</tr>
	<tr><td>&nbsp;</td></tr>
	<tr>
		<td>Target:</td>
		<td><input type="text" name="target"></td>
	<tr>
	</tr>
		<td>View:</td>
		<td>	<input type="text" name="view"></td>
	</tr>
</table>

<table>
	<tr>
		<td>
			Action:
			<textarea rows="20" cols="120" name="act">
			</textarea>
		</td>
	</tr>

	<tr>
		<td>
			Show action:<br>
			<input type="radio" checked name="encode" value="decode" onClick="document.all.act.value=strAfmActionDecoded;">
			Decoded for easy reading
			<br>
			<input type="radio" name="encode" value="encode" onClick="document.all.act.value=strAfmActionEncoded;">
			Encoded just as it is when it is posted
		</td>
	</tr>
</table>
</form>
</BODY>