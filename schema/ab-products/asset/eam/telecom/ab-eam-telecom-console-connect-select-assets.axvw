<view version="2.0">
    <message name="eq_label" translatable="true">Equipment Code</message>
    <message name="eqport_label" translatable="true">Equipment Code</message>
    <message name="pnport_label" translatable="true">Panel Code</message>
    <message name="jk_label" translatable="true">Jack Code</message>
    <message name="jk_port_label" translatable="true">Faceplate Code</message>
    
    <message name="eq_std_label" translatable="true">Equipment Standard</message>
    <message name="eqport_std_label" translatable="true">Equipment Standard</message>
    <message name="pnport_std_label" translatable="true">Patch Standard</message>
    <message name="jk_std_label" translatable="true">Jack Standard</message>
    <message name="jk_port_std_label" translatable="true">Faceplate Standard</message>
 
    <message name="eq_ds_label" translatable="true">Equipment</message>
    <message name="eqport_ds_label" translatable="true">Equipment Port</message>
    <message name="pn_ds_label" translatable="true">Panel Port</message>
    <message name="jk_ds_label" translatable="true">Jack</message>
    <message name="open_ds_label" translatable="true">Open</message>
    <message name="hasports_ds_label" translatable="true">Equipment Ports</message>
    
    <message name="noAssetSelected" translatable="true">Please select an asset port.</message>
    <dataSource id="assetPort_ds">
        <sql dialect="generic">
            SELECT
                'eq' ${sql.as} asset_type, 
                eq.eq_id ${sql.as} asset_id,
                NULL ${sql.as} asset_port,
                eq.eq_std ${sql.as} asset_std,
                eq.is_multiplexing ${sql.as} is_multiplexing,
                (CASE 
                    WHEN A.tc_eq_id IS NOT NULL THEN '${parameters['eqDsLabel']}: ' ${sql.concat} A.eq_id 
                    WHEN B.tc_eq_id IS NOT NULL THEN '${parameters['eqportDsLabel']}: ' ${sql.concat} B.eq_id ${sql.concat} '|' ${sql.concat} B.port_id
                    WHEN C.tc_eq_id IS NOT NULL THEN '${parameters['pnDsLabel']}: ' ${sql.concat} C.pn_id ${sql.concat} '|' ${sql.concat} C.port_id
                    WHEN D.tc_eq_id IS NOT NULL THEN '${parameters['jkDsLabel']}: ' ${sql.concat} D.jk_id
                    WHEN EXISTS(SELECT 1 FROM eqport WHERE eqport.eq_id=eq.eq_id) THEN '${parameters['hasPortsDsLabel']}'
                ELSE '${parameters['openDsLabel']}' END) ${sql.as} connected_from,
                eq.bl_id ${sql.as} bl_id,
                eq.fl_id ${sql.as} fl_id,
                eq.rm_id ${sql.as} rm_id
            FROM eq
            LEFT OUTER JOIN eq ${sql.as} A on eq.eq_id=A.tc_eq_id AND A.tc_eqport_id IS NULL
            LEFT OUTER JOIN eqport ${sql.as} B on eq.eq_id=B.tc_eq_id AND B.tc_eqport_id IS NULL
            LEFT OUTER JOIN pnport ${sql.as} C on eq.eq_id=C.tc_eq_id AND C.tc_eqport_id IS NULL
            LEFT OUTER JOIN jk ${sql.as} D on eq.eq_id=D.tc_eq_id AND D.tc_eqport_id IS NULL
            UNION
            SELECT 
                'eqport' ${sql.as} asset_type,
                eqport.eq_id ${sql.as} asset_id, 
                eqport.port_id ${sql.as} asset_port,
                NULL ${sql.as} asset_std,
                NULL ${sql.as} is_multiplexing,
                (CASE 
                    WHEN A.tc_eqport_id IS NOT NULL THEN '${parameters['eqDsLabel']}: ' ${sql.concat} A.eq_id 
                    WHEN B.tc_eqport_id IS NOT NULL THEN '${parameters['eqportDsLabel']}: ' ${sql.concat} B.eq_id ${sql.concat} '|' ${sql.concat} B.port_id
                    WHEN C.tc_eqport_id IS NOT NULL THEN '${parameters['pnDsLabel']}: ' ${sql.concat} C.pn_id ${sql.concat} '|' ${sql.concat} C.port_id
                    WHEN D.tc_eqport_id IS NOT NULL THEN '${parameters['jkDsLabel']}: ' ${sql.concat} D.jk_id
                    ELSE '${parameters['openDsLabel']}' END) ${sql.as} connected_from,
                (SELECT eq.bl_id FROM eq WHERE eq.eq_id=eqport.eq_id) ${sql.as} bl_id,
                (SELECT eq.fl_id FROM eq WHERE eq.eq_id=eqport.eq_id) ${sql.as} fl_id,
                (SELECT eq.rm_id FROM eq WHERE eq.eq_id=eqport.eq_id) ${sql.as} rm_id
            FROM eqport 
            LEFT OUTER JOIN eq ${sql.as} A on eqport.eq_id=A.tc_eq_id AND eqport.port_id=A.tc_eqport_id
            LEFT OUTER JOIN eqport ${sql.as} B on eqport.eq_id=B.tc_eq_id AND eqport.port_id=B.tc_eqport_id
            LEFT OUTER JOIN pnport ${sql.as} C on eqport.eq_id=C.tc_eq_id AND eqport.port_id=C.tc_eqport_id
            LEFT OUTER JOIN jk ${sql.as} D on eqport.eq_id=D.tc_eq_id AND eqport.port_id=D.tc_eqport_id
            UNION
            SELECT 
                'pnport' ${sql.as} asset_type,
                pnport.pn_id ${sql.as} asset_id, 
                pnport.port_id ${sql.as} asset_port,
                NULL ${sql.as} asset_std,
                NULL ${sql.as} is_multiplexing, 
                (CASE 
                    WHEN A.tc_pnport_id IS NOT NULL THEN '${parameters['eqDsLabel']}: ' ${sql.concat} A.eq_id 
                    WHEN B.tc_pnport_id IS NOT NULL THEN '${parameters['eqportDsLabel']}: ' ${sql.concat} B.eq_id ${sql.concat} '|' ${sql.concat} B.port_id
                    WHEN C.tc_pnport_id IS NOT NULL THEN '${parameters['pnDsLabel']}: ' ${sql.concat} C.pn_id ${sql.concat} '|' ${sql.concat} C.port_id
                    WHEN D.tc_pnport_id IS NOT NULL THEN '${parameters['jkDsLabel']}: ' ${sql.concat} D.jk_id
                    ELSE '${parameters['openDsLabel']}' END) ${sql.as} connected_from,
                (SELECT pn.bl_id FROM pn WHERE pn.pn_id=pnport.pn_id) ${sql.as} bl_id,
                (SELECT pn.fl_id FROM pn WHERE pn.pn_id=pnport.pn_id) ${sql.as} fl_id,
                (SELECT pn.rm_id FROM pn WHERE pn.pn_id=pnport.pn_id) ${sql.as} rm_id
            FROM pnport 
            LEFT OUTER JOIN eq ${sql.as} A on pnport.pn_id=A.tc_pn_id AND pnport.port_id=A.tc_pnport_id
            LEFT OUTER JOIN eqport ${sql.as} B on pnport.pn_id=B.tc_pn_id AND pnport.port_id=B.tc_pnport_id
            LEFT OUTER JOIN pnport ${sql.as} C on pnport.pn_id=C.tc_pn_id AND pnport.port_id=C.tc_pnport_id
            LEFT OUTER JOIN jk ${sql.as} D on pnport.pn_id=D.tc_pn_id AND pnport.port_id=D.tc_pnport_id
            UNION
            SELECT 
                'jk' ${sql.as} asset_type,
                jk.jk_id ${sql.as} asset_id,
                jk.fp_id ${sql.as} asset_port,
                jk.jk_std ${sql.as} asset_std,
                NULL ${sql.as} is_multiplexing,
                (CASE 
                    WHEN A.tc_jk_id IS NOT NULL THEN '${parameters['eqDsLabel']}: ' ${sql.concat} A.eq_id 
                    ELSE '${parameters['openDsLabel']}' END) ${sql.as} connected_from,
                jk.bl_id ${sql.as} bl_id,
                jk.fl_id ${sql.as} fl_id,
                jk.rm_id ${sql.as} rm_id
            FROM jk 
            LEFT OUTER JOIN eq ${sql.as} A on jk.jk_id=A.tc_jk_id
        </sql>
        <table name="eq"/>
        <field name="asset_type" dataType="text"/>
        <field name="asset_id" dataType="text"/>
        <field name="asset_port" dataType="text"/>
        <field name="asset_std" dataType="text"/>
        <field name="is_multiplexing" dataType="text"/>
        <field name="connected_from" dataType="text"/>
        <field name="bl_id" dataType="text"/>
        <field name="fl_id" dataType="text"/>
        <field name="rm_id" dataType="text"/>
        <parameter name="eqDsLabel" dataType="verbatim" value="Equipment"/>
        <parameter name="eqportDsLabel" dataType="verbatim" value="Equipment Port"/>
        <parameter name="pnDsLabel" dataType="verbatim" value="Panel Port"/>
        <parameter name="jkDsLabel" dataType="verbatim" value="Jack"/>
        <parameter name="openDsLabel" dataType="verbatim" value="Open"/>
        <parameter name="hasPortsDsLabel" dataType="verbatim" value="Has Ports"/>
    </dataSource>
    <panel type="grid" id="assetPortPanel" dataSource="assetPort_ds">
        <field name="asset_type" dataType="text" hidden="true"/>
        <field name="asset_id" dataType="text" controlType="link" onclick="abEamTcSelectConnectAssetsController.onSelectAsset">
            <title>Asset Code</title>
        </field>
        <field name="asset_port" dataType="text" controlType="link" onclick="abEamTcSelectConnectAssetsController.onSelectAsset">
            <title>Port Code</title>
        </field>
        <field name="asset_std" dataType="text" controlType="link" onclick="abEamTcSelectConnectAssetsController.onSelectAsset">
            <title>Asset Standard</title>
        </field>
        <field name="connected_from" dataType="text" controlType="link" onclick="abEamTcSelectConnectAssetsController.onSelectAsset">
            <title>Connected From</title>
        </field>
        <field name="is_multiplexing" controlType="link" onclick="abEamTcSelectConnectAssetsController.onSelectAsset"/>
        <field name="bl_id" dataType="text" controlType="link" onclick="abEamTcSelectConnectAssetsController.onSelectAsset">
            <title>Building Code</title>
        </field>
        <field name="fl_id" dataType="text" controlType="link" onclick="abEamTcSelectConnectAssetsController.onSelectAsset">
            <title>Floor Code</title>
        </field>
        <field name="rm_id" dataType="text" controlType="link" onclick="abEamTcSelectConnectAssetsController.onSelectAsset">
            <title>Room Code</title>
        </field>
        <sortField table="eq" name="asset_id"/>
        <indexField table="eq" name="asset_id"/>
    </panel>
    <js file="ab-eam-telecom-console-connect-select-assets.js"/>
</view>