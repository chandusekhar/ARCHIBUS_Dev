<view version="2.0">
	<layout type="borderLayout" id="mainLayout">
		<north autoScroll="true" split="true" initialSize="102"/>
		<center autoScroll="true"/>
	</layout>

	<js file="ab-ondemand-workteam-all-report.js" />
	<js file="ab-bldgops-report-common.js" />

	<title translatable="true">Work Team Performance Reports</title>
	
	<dataSource id="afmScmprefDS">
		<table name="afm_scmpref" />
		<field name="fiscalyear_startmonth" />
		<field name="fiscalyear_startday" />
	</dataSource>

	<dataSource type="grouping" id="dsYears">
		<table name="afm_cal_dates" />
		<field name="year" groupBy="true" dataType="text" formula="year" baseField="afm_cal_dates.cal_date"/>
		<sortField name="year" ascending="false" />
	</dataSource>

	<dataSource id="consoleDS">
		<table name="wr" role="main" />
		<table name="site" role="standard" />
		<field table="wr" name="prob_type" />
		<field table="wr" name="wr_id" />
		<field table="site" name="site_id" />
	</dataSource>

	<panel type="console" columns="2" id="requestConsole"
		dataSource="consoleDS" region="north">
		<title translatable="true">Filter</title>
		<action id="filter">
			<title translatable="true">Show</title>
		</action>
		<action id="clear">
			<title translatable="true">Clear</title>
		</action>
		<field  rowspan="2">
			<title translatable="true">Select Year</title>
			<html>
				<table border="0" rules="none" frame="void" cellpadding="1">
					<tr>
						<td>
							<input type="radio" name="cal_year" value="0" checked="true">
								<span id="hol.cal_year" translatable="true">Calendar Year</span>
							</input>
						</td>
						<td>
							<select  name="selectYear" id="selectYear">
							</select>
						</td>
					</tr>
					<tr>
						<td>
							<input type="radio" name="cal_year" value="1" >
								<span id="hol.fiscal_year" translatable="true">Fiscal Year</span>
							</input>
						</td>
					</tr>
				</table>
			</html>
		</field>
		<field table="site" name="site_id" selectValueType="multiple"/>
		
		<field table="wr" name="prob_type"/>
		<field table="wr" name="wr_id" hidden="true" />
	</panel>

	<dataSource id="crossTableDS" type="grouping">
		<sql dialect="generic">
			(SELECT hwr_month.wr_id, hwr_month.work_team_id,hwr_month.status,
			    hwr_month.prob_type, hwr_month.site_id, hwr_month.date_requested,hwr_month.cost_var, 
			    ${sql.yearMonthOf('hwr_month.date_completed')} ${sql.as} com_month,
			    hwr_month.cost_est_total,hwr_month.cost_total,
			    hwr_month.escalated_response,hwr_month.escalated_completion,
			    ( select case when count(a.wr_id)=0 then 0 else sum(b.satisfaction*20)/count(a.wr_id)  end
			    FROM hwr_month ${sql.as}  a  JOIN hwo  ${sql.as} c ON c.wo_id=a.wo_id  LEFT JOIN hactivity_log  ${sql.as} b ON  b.wo_id=c.wo_id OR  b.wr_id=a.wr_id 
			    WHERE a.status NOT IN ('Rej','Can') AND a.work_team_id=hwr_month.work_team_id   AND  ${sql.yearMonthOf('hwr_month.date_completed')} =${sql.yearMonthOf('a.date_completed')}  
				AND  ${parameters['surveyRes']}  AND b.satisfaction>0 ) ${sql.as} satisfaction,

			    case when ( select hactivity_log.escalated_response from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id)= 0 then 1
					else null
			    end ${sql.as} responseOnTime,
			    case when  ( select hactivity_log.escalated_completion from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id) = 0 then 1 
					else null
			    end ${sql.as} completionOnTime,
			    case when hwr_month.cost_est_total >= hwr_month.cost_total then 1
					else null
			    end ${sql.as} completeEstCost,
			    case when hwr_month.cost_est_total >= hwr_month.cost_total and  ( select hactivity_log.escalated_response from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id) = 0 then 1
					else null
			    end ${sql.as} responseOnTimeEstCost,
			    case when hwr_month.cost_est_total >= hwr_month.cost_total and  ( select hactivity_log.escalated_completion from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id) = 0 then 1
					else null
			    end ${sql.as} completeOnTimeEstCost,

			    ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ${sql.as} timeRequested,
			    ${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} ${sql.as} timeIssued,
			    
			    case when hwr_month.date_escalation_response is null then null
					else ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')}  
			    end ${sql.as} timeEscalationReponse,
			    
			    case when hwr_month.date_escalation_completion is null then null
					else ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')}  
			    end ${sql.as} timeEscalationCompletion,
			    
			    ${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} ${sql.as} timeCompleted,

			    datediff(minute, ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ,${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} )  ${sql.as} realResponsedTime,
			
			    case when hwr_month.date_escalation_response is null 
				then  datediff(minute, ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ,${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} )
				else   datediff( minute , ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} , ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')})  
			    end ${sql.as} requiredResponsedTime,
			
			    datediff(minute,  ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ,${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} )  ${sql.as} realCompletedTime, 
			
			    case when hwr_month.date_escalation_completion is null 
				then datediff(minute,  ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ,${sql.timestamp('hwr_month.date_completed',	 'hwr_month.time_completed')} ) 
				else datediff(minute, ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')}, ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')}  )
			    end ${sql.as} requiredCompletedTime

		    FROM hwr_month JOIN hwo ON hwo.wo_id=hwr_month.wo_id  LEFT JOIN hactivity_log ON  hactivity_log.wo_id=hwo.wo_id OR  hactivity_log.wr_id=hwr_month.wr_id 
		    WHERE hwr_month.status NOT IN ('Rej','Can') AND hwr_month.work_team_id is NOT NULL  AND  ${parameters['otherRes']}  
		    )
		    UNION ALL
		     
		    (SELECT hwr_month.wr_id,  hwr_month.supervisor ${sql.as}  work_team_id ,hwr_month.status,
			    hwr_month.prob_type,hwr_month.site_id, hwr_month.date_requested,hwr_month.cost_var, 
			    ${sql.yearMonthOf('hwr_month.date_completed')} ${sql.as} com_month,
			    hwr_month.cost_est_total,hwr_month.cost_total,
			    hwr_month.escalated_response,hwr_month.escalated_completion,
			    ( select case when count(a.wr_id)=0 then 0 else sum(b.satisfaction*20)/count(a.wr_id)  end
			    FROM hwr_month ${sql.as}  a  JOIN hwo  ${sql.as} c ON c.wo_id=a.wo_id  LEFT JOIN hactivity_log  ${sql.as} b ON  b.wo_id=c.wo_id OR  b.wr_id=a.wr_id 
			    WHERE a.status NOT IN ('Rej','Can') AND a.supervisor=hwr_month.supervisor   AND  ${sql.yearMonthOf('hwr_month.date_completed')} =${sql.yearMonthOf('a.date_completed')}  
				AND  ${parameters['surveyRes']}  AND b.satisfaction>0 ) ${sql.as} satisfaction,

			case when  ( select hactivity_log.escalated_completion from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id) = 0 then 1
					else null
			end ${sql.as} responseOnTime,
			    
			case when ( select hactivity_log.escalated_completion from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id) = 0 then 1 
					else null
			end ${sql.as} completionOnTime,
			    
			case when hwr_month.cost_est_total >= hwr_month.cost_total then 1
					else null
			end ${sql.as} completeEstCost,
			    
			case when hwr_month.cost_est_total >= hwr_month.cost_total and  ( select hactivity_log.escalated_response from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id) = 0 then 1
					else null
			end ${sql.as} responseOnTimeEstCost,
			    
			case when hwr_month.cost_est_total >= hwr_month.cost_total and   ( select hactivity_log.escalated_completion from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id)  = 0 then 1
					else null
			end ${sql.as} completeOnTimeEstCost,
			
			${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ${sql.as} timeRequested,
			${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} ${sql.as} timeIssued,
		    
			case when hwr_month.date_escalation_response is null then null
				else ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')}
			end ${sql.as} timeEscalationReponse,
		    
			case when hwr_month.date_escalation_completion is null then null
				else ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')}  
			end ${sql.as} timeEscalationCompletion,
		    
			${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} ${sql.as} timeCompleted,

			datediff(minute, ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ,${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} )  ${sql.as} realResponsedTime,
			
			case when hwr_month.date_escalation_response is null 
				then  datediff(minute, ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ,${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} )
				else   datediff( minute , ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} , ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')})  
			end ${sql.as} requiredResponsedTime,
			
			datediff(minute,  ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ,${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} )  ${sql.as} realCompletedTime, 
			
			case when hwr_month.date_escalation_completion is null 
				then datediff(minute,  ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ,${sql.timestamp('hwr_month.date_completed',	 'hwr_month.time_completed')} ) 
				else datediff(minute, ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')}, ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')}  )
			end ${sql.as} requiredCompletedTime

		    FROM hwr_month JOIN hwo ON hwo.wo_id=hwr_month.wo_id  LEFT JOIN hactivity_log ON  hactivity_log.wo_id=hwo.wo_id OR  hactivity_log.wr_id=hwr_month.wr_id 
		    WHERE hwr_month.status NOT IN ('Rej','Can') AND hwr_month.supervisor is NOT NULL AND hwr_month.work_team_id IS NULL  AND  ${parameters['otherRes']}  
		    )
		</sql>
		<sql dialect="oracle">
			(SELECT hwr_month.wr_id, hwr_month.work_team_id,hwr_month.status,
			    hwr_month.prob_type, hwr_month.site_id, hwr_month.date_requested,hwr_month.cost_var,
			    ${sql.yearMonthOf('hwr_month.date_completed')} ${sql.as} com_month,
			    hwr_month.cost_est_total,hwr_month.cost_total,
			    hwr_month.escalated_response,hwr_month.escalated_completion,
			    ( select case when count(a.wr_id)=0 then 0 else sum(b.satisfaction*20)/count(a.wr_id)  end
			    FROM hwr_month ${sql.as}  a  JOIN hwo  ${sql.as} c ON c.wo_id=a.wo_id  LEFT JOIN hactivity_log  ${sql.as} b ON  b.wo_id=c.wo_id OR  b.wr_id=a.wr_id 
			    WHERE a.status NOT IN ('Rej','Can') AND a.work_team_id=hwr_month.work_team_id   AND  ${sql.yearMonthOf('hwr_month.date_completed')} =${sql.yearMonthOf('a.date_completed')}  
				AND  ${parameters['surveyRes']}  AND b.satisfaction>0 ) ${sql.as} satisfaction,
			    case when   ( select hactivity_log.escalated_response from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id)  = 0 then 1
					else null
			    end ${sql.as} responseOnTime,
			    case when   ( select hactivity_log.escalated_completion from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id)  = 0 then 1 
					else null
			    end ${sql.as} completionOnTime,
			    case when hwr_month.cost_est_total >= hwr_month.cost_total then 1
					else null
			    end ${sql.as} completeEstCost,
			    case when hwr_month.cost_est_total >= hwr_month.cost_total and  ( select hactivity_log.escalated_response from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id)   = 0 then 1
					else null
			    end ${sql.as} responseOnTimeEstCost,
			    case when hwr_month.cost_est_total >= hwr_month.cost_total and hwr_month.escalated_completion = 0 then 1
					else null
			    end ${sql.as} completeOnTimeEstCost,

			    ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ${sql.as} timeRequested,
			    ${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} ${sql.as} timeIssued,
			    
			    case when hwr_month.date_escalation_response is null then null
					else ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')}  
			    end ${sql.as} timeEscalationReponse,
			    
			    case when hwr_month.date_escalation_completion is null then null
					else ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')}  
			    end ${sql.as} timeEscalationCompletion,
			    
			    ${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} ${sql.as} timeCompleted,

			   ( ${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} - ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} )  ${sql.as} realResponsedTime,
			
			    case when hwr_month.date_escalation_response is null 
				then  ( ${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} - ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} )
				else   ( ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')}- ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} )  
			    end ${sql.as} requiredResponsedTime,
			
			    ${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} -  ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ${sql.as} realCompletedTime, 
			
			    case when hwr_month.date_escalation_completion is null 
				then ( ${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} - ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ) 
				else ( ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')} - ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')})
			    end ${sql.as} requiredCompletedTime

		    FROM hwr_month JOIN hwo ON hwo.wo_id=hwr_month.wo_id  LEFT JOIN hactivity_log ON  hactivity_log.wo_id=hwo.wo_id OR  hactivity_log.wr_id=hwr_month.wr_id 
		    WHERE hwr_month.status NOT IN ('Rej','Can') AND hwr_month.work_team_id is NOT NULL  AND  ${parameters['otherRes']}  
		    )
		    UNION ALL
		     
		    (SELECT hwr_month.wr_id,  hwr_month.supervisor ${sql.as}  work_team_id ,hwr_month.status,
			    hwr_month.prob_type,hwr_month.site_id, hwr_month.date_requested,hwr_month.cost_var, 
			    ${sql.yearMonthOf('hwr_month.date_completed')} ${sql.as} com_month,
			    hwr_month.cost_est_total,hwr_month.cost_total,
			    hwr_month.escalated_response,hwr_month.escalated_completion,
			    ( select case when count(a.wr_id)=0 then 0 else sum(b.satisfaction*20)/count(a.wr_id)  end
			    FROM hwr_month ${sql.as}  a  JOIN hwo  ${sql.as} c ON c.wo_id=a.wo_id  LEFT JOIN hactivity_log  ${sql.as} b ON  b.wo_id=c.wo_id OR  b.wr_id=a.wr_id 
			    WHERE a.status NOT IN ('Rej','Can') AND a.supervisor=hwr_month.supervisor   AND  ${sql.yearMonthOf('hwr_month.date_completed')} =${sql.yearMonthOf('a.date_completed')}  
				AND  ${parameters['surveyRes']}  AND b.satisfaction>0 ) ${sql.as} satisfaction,

			case when  ( select hactivity_log.escalated_response from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id)  = 0 then 1
					else null
			end ${sql.as} responseOnTime,
			    
			case when  ( select hactivity_log.escalated_completion from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id)   = 0 then 1 
					else null
			end ${sql.as} completionOnTime,
			    
			case when hwr_month.cost_est_total >= hwr_month.cost_total then 1
					else null
			end ${sql.as} completeEstCost,
			    
			case when hwr_month.cost_est_total >= hwr_month.cost_total and ( select hactivity_log.escalated_response from hwr left outer join hactivity_log on hactivity_log.activity_log_id=hwr.activity_log_id where hwr.wr_id=hwr_month.wr_id) = 0 then 1
					else null
			end ${sql.as} responseOnTimeEstCost,
			    
			case when hwr_month.cost_est_total >= hwr_month.cost_total and hwr_month.escalated_completion = 0 then 1
					else null
			end ${sql.as} completeOnTimeEstCost,
			
			${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ${sql.as} timeRequested,
			${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} ${sql.as} timeIssued,
		    
			case when hwr_month.date_escalation_response is null then null
				else ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')}
			end ${sql.as} timeEscalationReponse,
		    
			case when hwr_month.date_escalation_completion is null then null
				else ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')}  
			end ${sql.as} timeEscalationCompletion,
		    
			${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} ${sql.as} timeCompleted,

			( ${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} - ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} )  ${sql.as} realResponsedTime,
			
			 case when hwr_month.date_escalation_response is null 
				then  ( ${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} - ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} )
				else   ( ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')}- ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} )  
			 end ${sql.as} requiredResponsedTime,
			
			 ${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} -  ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ${sql.as} realCompletedTime, 
			
			 case when hwr_month.date_escalation_completion is null 
				then ( ${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} - ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ) 
				else ( ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')} - ${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')})
			 end ${sql.as} requiredCompletedTime

		    FROM hwr_month JOIN hwo ON hwo.wo_id=hwr_month.wo_id  LEFT JOIN hactivity_log ON  hactivity_log.wo_id=hwo.wo_id OR  hactivity_log.wr_id=hwr_month.wr_id 
		    WHERE hwr_month.status NOT IN ('Rej','Can') AND hwr_month.supervisor is NOT NULL AND hwr_month.work_team_id IS NULL  AND  ${parameters['otherRes']}  
		    )
		</sql>
		<table name="hwr_month" role="main" />
		<sortField name="work_team_id" ascending="true" />
	        <sortField name="com_month" ascending="true"/>
		
		<field name="work_team_id" dataType="text" groupBy="true">
			<title translatable="true">Work Team</title>
		</field>
		
		<field name="com_month" dataType="text"  baseField="hwr_month.date_completed" groupBy="true">
			<title translatable="true">Month</title>
		</field>
 
		<field name="Count" formula="count" dataType="number"
			 baseField="hwr_month.wr_id" decimals="0">
			<title translatable="true">Number of Requests</title>
		</field>
		<field name="Actual_Cost" formula="sum" dataType="number"
			 baseField="hwr_month.cost_total" decimals="2">
			<title translatable="true">Actual Cost</title>
		</field>
		
		<field name="Estimated_Cost" formula="sum" dataType="number"
			 baseField="hwr_month.cost_est_total" decimals="2">
			<title translatable="true">Estimated Cost</title>
		</field>
		<field name="Cost_Variance" formula="sum" dataType="number"
			 baseField="hwr_month.cost_var" size="6" decimals="2">
			<title translatable="true">Cost Variance</title>
		</field>
		<field name="pctResponseOnTime" baseField="hwr_month.Count" dataType="number" decimals="0">
			<title translatable="true">% Responded On Time</title>
		    <sql dialect="generic">CASE WHEN count(hwr_month.wr_id)=0 THEN 0 ELSE 100*count(hwr_month.responseOnTime) /count(hwr_month.wr_id) END</sql>
		</field>
		<field name="pctCompletionOnTime" baseField="hwr_month.Count" dataType="number" decimals="0">
			<title translatable="true">% Completed On Time</title>
		    <sql dialect="generic">CASE WHEN count(hwr_month.wr_id)=0 THEN 0 ELSE 100*count(hwr_month.completionOnTime) /count(hwr_month.wr_id) END</sql>
		</field>
		<field name="pctcompleteEstCost" baseField="hwr_month.Count" dataType="number" decimals="0">
			<title translatable="true">% Completed within Estimated Cost</title>
		    <sql dialect="generic">CASE WHEN count(hwr_month.wr_id)=0 THEN 0 ELSE 100*count(hwr_month.completeEstCost) /count(hwr_month.wr_id) END</sql>
		</field>
		<field name="pctcompleteOnTimeEstCost" baseField="hwr_month.Count" dataType="number" decimals="0">
			<title translatable="true">% Completed  On Time within Estimated Cost</title>
		    <sql dialect="generic">CASE WHEN count(hwr_month.wr_id)=0 THEN 0 ELSE 100*count(hwr_month.completeOnTimeEstCost) /count(hwr_month.wr_id) END</sql>
		</field>
		<field name="responsedWithinRequiredTime" baseField="hwr_month.realResponsedTime" dataType="number" decimals="0">
			<title translatable="true">% of Allotted Time Responded Within</title>
			<sql dialect="generic">
			      CASE WHEN sum(${sql.isNull('hwr_month.requiredResponsedTime','0')} ) = 0 THEN null ELSE  100* sum(${sql.isNull('hwr_month.realResponsedTime','0')})/sum(${sql.isNull('hwr_month.requiredResponsedTime','0')} )   END
			</sql>		
		</field>
		<field name="completedWithinRequiredTime" baseField="hwr_month.realCompletedTime" dataType="number" decimals="0">
		    <title translatable="true">% of Allotted Time Completed Within</title>
		    <sql dialect="generic">
		       CASE WHEN sum(${sql.isNull('hwr_month.requiredCompletedTime','0')})=0 THEN NULL ELSE  100*sum(${sql.isNull('hwr_month.realCompletedTime','0')})/sum(${sql.isNull('hwr_month.requiredCompletedTime','0')} )  END 
		    </sql>
		</field>
		<field name="satisfactionAverage" baseField="hwr_month.satisfaction" formula="avg" dataType="number" decimals="0">
			<title translatable="true">Satisfaction Survey Average</title>
		</field>
		<parameter name="otherRes" dataType="verbatim" value=" 1=1 "/>
		<parameter name="surveyRes" dataType="verbatim" value=" 1=1 "/>
	</dataSource>
	
	<panel id="reportPanel" type="crossTable" region="center" 
		dataSource="crossTableDS" showOnLoad="false">
        <title translatable="true">Work Team Performance</title>
		<event type="onClickItem">
		    <command type="callFunction" functionName="onClickItem"/>
		</event>
		<action id="showChart">
			<title translatable="true">Bar Chart</title>
		</action>
		<action id="exportDOCX">
			<title translatable="true">XLS</title> 
			<tooltip translatable="true">Export to XLS</tooltip>
			<command type="exportPanel" outputType="xls" panelId="reportPanel"/>
		</action>
	</panel>

	<dataSource id="hwrGridDS">
		<sql dialect="generic">
          	(SELECT hwr_month.wr_id, hwr_month.work_team_id,hwr_month.status,
		    ${sql.yearMonthOf('hwr_month.date_completed')} ${sql.as} com_month,
			hwr_month.cost_var, hwr_month.cost_est_total,hwr_month.cost_total,
			hwr_month.escalated_response,hwr_month.escalated_completion,

			${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ${sql.as} timeRequested,
			${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} ${sql.as} timeIssued,
		    
			case when hwr_month.date_escalation_response is null then null
				else ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')}
			end ${sql.as} timeEscalationReponse,
		    
			case when hwr_month.date_escalation_completion is null then null
				else ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')}  
			end ${sql.as} timeEscalationCompletion,
		    
			${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} ${sql.as} timeCompleted

		FROM hwr_month  JOIN hwo ON hwo.wo_id=hwr_month.wo_id 
		WHERE hwr_month.status NOT IN ('Rej','Can') AND hwr_month.work_team_id is NOT NULL AND hwo.wo_id=hwr_month.wo_id AND  ${parameters['otherRes']} 
		)
		UNION ALL 
	        (SELECT hwr_month.wr_id, hwr_month.supervisor ${sql.as} work_team_id,hwr_month.status,
		    ${sql.yearMonthOf('hwr_month.date_completed')} ${sql.as} com_month,
			hwr_month.cost_var, hwr_month.cost_est_total,hwr_month.cost_total,
			hwr_month.escalated_response,hwr_month.escalated_completion,

			${sql.timestamp('hwr_month.date_requested', 'hwr_month.time_requested')} ${sql.as} timeRequested,
			${sql.timestamp('hwo.date_issued', 'hwo.time_issued')} ${sql.as} timeIssued,
		    
			case when hwr_month.date_escalation_response is null then null
				else ${sql.timestamp('hwr_month.date_escalation_response', 'hwr_month.time_escalation_response')}  
			end ${sql.as} timeEscalationReponse,
		    
			case when hwr_month.date_escalation_completion is null then null
				else ${sql.timestamp('hwr_month.date_escalation_completion', 'hwr_month.time_escalation_completion')}  
			end ${sql.as} timeEscalationCompletion,
		    
			${sql.timestamp('hwr_month.date_completed', 'hwr_month.time_completed')} ${sql.as} timeCompleted
		    FROM hwr_month  JOIN hwo ON hwo.wo_id=hwr_month.wo_id 
		    WHERE hwr_month.status NOT IN ('Rej','Can') AND hwr_month.supervisor is NOT NULL AND hwo.wo_id=hwr_month.wo_id AND hwr_month.work_team_id IS NULL AND  ${parameters['otherRes']} 
		    )
		</sql>
		<table name="hwr_month" role="main" />
		<sortField name="work_team_id" ascending="true" />
		
		<field name="wr_id"  dataType="text"/>
		<field name="work_team_id" dataType="text">
			<title translatable="true">Work Team Code/Supervisor</title>
		</field>
		
		<field name="com_month" dataType="text"  baseField="hwr_month.date_completed">
			<title translatable="true">Month</title>
		</field>
 
		<field name="cost_total" dataType="number"  decimals="2">
		</field>
		
		<field name="cost_est_total" dataType="number"  decimals="2">
		</field>

		<field name="cost_var" dataType="number"  decimals="2">
		</field>

		<field name="escalated_response" dataType="text"/>
		<field name="escalated_completion" dataType="text"/>

		<field name="timeRequested" dataType="text">
			<title translatable="true">Requested DateTime</title>
		</field>
		<field name="timeIssued" dataType="text">
			<title translatable="true">Issued DateTime</title>
		</field>
		<field name="timeCompleted" dataType="text">
			<title translatable="true">Completed DateTime</title>
		</field>
		<field name="timeEscalationReponse" dataType="text">
			<title translatable="true">Response Escalation DateTime</title>
		</field>
		<field name="timeEscalationCompletion" dataType="text">
			<title translatable="true">Completion Escalation DateTime</title>
		</field>
		<parameter name="otherRes" dataType="verbatim" value=" 1=1 "/>
	</dataSource>
	<panel id="hwrGridPanel" type="grid" dataSource="hwrGridDS" showOnLoad="false">
		<title translatable="true">
			Work Requests
		</title>
	</panel>

</view>