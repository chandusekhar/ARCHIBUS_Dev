<view version="2.0">
    <dataSource id="buildingTreeDataSource">
        <sql dialect="generic">
            SELECT DISTINCT (bl.bl_id ${sql.concat} ' ' ${sql.concat} bl.name) ${sql.as} buildingIdName, bl.bl_id, bl.lat, bl.lon 
            FROM bl
            LEFT OUTER JOIN gp ON gp.bl_id = bl.bl_id
            WHERE  ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateRestriction']}
            AND ${parameters['scenarioIdRestriction']}
			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION
            
            SELECT DISTINCT gp.bl_id ${sql.as} buildingIdName, gp.bl_id, bl.lat, bl.lon 
            FROM gp	LEFT OUTER JOIN bl on gp.bl_id=bl.bl_id 
            WHERE gp.bl_id IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateRestriction']}
            AND ${parameters['scenarioIdRestriction']}
			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            AND NOT EXISTS (SELECT 1 FROM bl WHERE gp.bl_id = bl.bl_id)
        </sql>
        <table name="gp" role="main"/>
        <field name="buildingIdName" table="gp" dataType="text"/>
        <field name="bl_id" table="gp" dataType="text"/>
        <field name="lat" table="gp" dataType="number"/>
        <field name="lon" table="gp" dataType="number"/>
        <sortField table="gp" name="buildingIdName" ascending="true"/>
        <parameter name="siteIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="blIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="scenarioIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="planning_bu_id" dataType="verbatim" value="1=1"/>
        <parameter name="dv_id" dataType="verbatim" value="1=1"/>
        <parameter name="dp_id" dataType="verbatim" value="1=1"/>
        <parameter name="gp_function" dataType="verbatim" value="1=1"/>
    </dataSource>
    
    <dataSource id="floorTreeDataSource">
        <sql dialect="generic">
            SELECT DISTINCT (bl.bl_id ${sql.concat} ' ' ${sql.concat} bl.name) ${sql.as} buildingIdName,
            (fl.fl_id ${sql.concat} ' ' ${sql.concat} fl.name) ${sql.as} floorIdName,
            '' ${sql.as} locateFloor,
            '' ${sql.as} displayFloor
            FROM fl 
            LEFT OUTER JOIN bl ON fl.bl_id = bl.bl_id
            LEFT OUTER JOIN gp ON fl.fl_id = gp.fl_id AND gp.bl_id=fl.bl_id
            WHERE ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateRestriction']}
            AND ${parameters['scenarioIdRestriction']}
			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION 
            
            SELECT DISTINCT gp.bl_id ${sql.as} buildingIdName,
            gp.fl_id ${sql.as} floorIdName,
            '' ${sql.as} locateFloor,
            '' ${sql.as} displayFloor
            FROM gp 
            WHERE ${parameters['dateRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
       </sql>
        <table name="gp" role="main"/>
        <field name="floorIdName" table="gp" dataType="text"/>
        <field name="buildingIdName" table="gp" dataType="text" hidden="true"/>
        <field name="locateFloor" table="gp" dataType="text"/>
        <field name="displayFloor" table="gp" dataType="text"/>
        <parameter name="siteIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="blIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="scenarioIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="planning_bu_id" dataType="verbatim" value="1=1"/>
        <parameter name="dv_id" dataType="verbatim" value="1=1"/>
        <parameter name="dp_id" dataType="verbatim" value="1=1"/>
        <parameter name="gp_function" dataType="verbatim" value="1=1"/>
    </dataSource>
    
    <dataSource id="addNewSpaceGpDataSource">
        <table name="gp" role="main"/>
        <field name="bl_id" table="gp"/>
        <field name="fl_id" table="gp"/>
        <field name="name" table="gp"/>
        <field name="date_start" table="gp"/>
        <field name="date_end" table="gp"/>
        <field name="area_manual" table="gp"/>
        <field name="sort_order" table="gp"/>
        <field name="event_name" table="gp"/>
        <field name="portfolio_scenario_id" table="gp"/>
        <field name="gp_id" table="gp" hidden="true"/>
        <field name="allocation_type" table="gp" hidden="true"/>
    </dataSource>
    
    
    <dataSource id="eventsTreeGpYearDataSource">
        <sql dialect="generic">
            SELECT DISTINCT ${sql.yearOf('gp.date_start')} ${sql.as} dv_id
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_start IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateStartRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION
            
            SELECT DISTINCT ${sql.yearOf('gp.date_end')} ${sql.as} dv_id
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_end IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateEndRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
        </sql>
        <table name="gp" role="main"/>
        <field name="dv_id" dataType="text" table="gp"/>
        <sortField table="gp" name="dv_id" ascending="true"/>
        <parameter name="siteIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="blIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateStartRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateEndRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="scenarioIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="planning_bu_id" dataType="verbatim" value="1=1"/>
        <parameter name="dv_id" dataType="verbatim" value="1=1"/>
        <parameter name="dp_id" dataType="verbatim" value="1=1"/>
        <parameter name="gp_function" dataType="verbatim" value="1=1"/>
    </dataSource>
    
    <dataSource id="eventsTreeGPEventNameDataSource">
        <sql dialect="generic">
            SELECT DISTINCT CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_start')} ${sql.concat} '-' ${sql.concat} gp.event_name ELSE ${sql.yearMonthDayOf('gp.date_start')} END ${sql.as} event_name,
            ${sql.yearOf('gp.date_start')} ${sql.as} dv_id,
            ${sql.yearMonthDayOf('gp.date_start')} ${sql.as} dp_id,
            gp.event_name ${sql.as} sort_event_name
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_start IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateStartRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION 
            
            SELECT DISTINCT CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-' ${sql.concat} gp.event_name ${sql.concat} '-End' ELSE ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-End' END ${sql.as} event_name,
            ${sql.yearOf('gp.date_end')} ${sql.as} dv_id,
            ${sql.yearMonthDayOf('gp.date_end')} ${sql.as} dp_id,
            gp.event_name ${sql.as} sort_event_name
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_end IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateEndRestriction']}
            AND ${parameters['scenarioIdRestriction']}
            AND gp.allocation_type IN ('Usable Area - Owned','Usable Area - Leased')
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION
            
            SELECT DISTINCT CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-' ${sql.concat} gp.event_name ${sql.concat} '-End' ELSE ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-End' END ${sql.as} event_name,
            ${sql.yearOf('gp.date_end')} ${sql.as} dv_id,
            ${sql.yearMonthDayOf('gp.date_end')} ${sql.as} dp_id,
            gp.event_name ${sql.as} sort_event_name
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_end IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateEndRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            AND NOT EXISTS (SELECT 1 FROM gp ${sql.as} sgp WHERE gp.gp_id = sgp.parent_group_id)
        </sql>
        <table name="gp" role="main"/>
        <field name="event_name" dataType="text" table="gp"/>
        <field name="dv_id" dataType="text" table="gp" hidden="true"/>
        <sortField name="dp_id" table="gp" ascending="true"/>
        <sortField name="sort_event_name" table="gp" ascending="true"/>
        <parameter name="siteIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="blIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateStartRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateEndRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="scenarioIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="planning_bu_id" dataType="verbatim" value="1=1"/>
        <parameter name="dv_id" dataType="verbatim" value="1=1"/>
        <parameter name="dp_id" dataType="verbatim" value="1=1"/>
        <parameter name="gp_function" dataType="verbatim" value="1=1"/>
    </dataSource>
    
    <dataSource id="eventsTreeGpNameDataSource">
        <sql dialect="generic">
            SELECT DISTINCT gp.name ${sql.as} name, 
            CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_start')} ${sql.concat} '-' ${sql.concat} gp.event_name ELSE ${sql.yearMonthDayOf('gp.date_start')} END ${sql.as} event_name
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_start IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateStartRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION 
            
            SELECT DISTINCT gp.name ${sql.as} name,
            CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-' ${sql.concat} gp.event_name ${sql.concat} '-End' ELSE ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-End' END ${sql.as} event_name
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_end IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateEndRestriction']}
            AND ${parameters['scenarioIdRestriction']}
            AND gp.allocation_type IN ('Usable Area - Owned','Usable Area - Leased')
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION
            
            SELECT DISTINCT gp.name ${sql.as} name,
            CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-' ${sql.concat} gp.event_name ${sql.concat} '-End' ELSE ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-End' END ${sql.as} event_name
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_end IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateEndRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            AND NOT EXISTS (SELECT 1 FROM gp ${sql.as} sgp WHERE gp.gp_id = sgp.parent_group_id)
        </sql>
        <table name="gp" role="main"/>
        <field name="name" dataType="text" table="gp"/>
        <field name="event_name" dataType="text" table="gp"/>
        <parameter name="siteIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="blIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateStartRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateEndRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="scenarioIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="planning_bu_id" dataType="verbatim" value="1=1"/>
        <parameter name="dv_id" dataType="verbatim" value="1=1"/>
        <parameter name="dp_id" dataType="verbatim" value="1=1"/>
        <parameter name="gp_function" dataType="verbatim" value="1=1"/>
    </dataSource>
    
    <dataSource id="eventsGroupDetailDataSource">
        <sql dialect="sqlserver">
            SELECT DISTINCT gp.bl_id ${sql.concat} ' ' ${sql.concat} gp.fl_id ${sql.concat} ' ' ${sql.concat} CONVERT(nvarchar(60), CAST((gp.area_manual * ${parameters['areaUnitsConversionFactor']}) AS DECIMAL(10, 2))) ${sql.concat} ' ' ${sql.concat} gp.description ${sql.as} description,
            CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_start')} ${sql.concat} '-' ${sql.concat} gp.event_name ELSE ${sql.yearMonthDayOf('gp.date_start')} END ${sql.as} event_name,
            gp.name ${sql.as} name, 
			bl.name ${sql.as} blName 
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_start IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateStartRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION 
            
            SELECT DISTINCT gp.bl_id ${sql.concat} ' ' ${sql.concat} gp.fl_id ${sql.concat} ' ' ${sql.concat} CONVERT(nvarchar(60), CAST((gp.area_manual * ${parameters['areaUnitsConversionFactor']}) AS DECIMAL(10, 2))) ${sql.concat} ' ' ${sql.concat} gp.description ${sql.as} description,
            CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-' ${sql.concat} gp.event_name ${sql.concat} '-End' ELSE ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-End' END ${sql.as} event_name,
            gp.name ${sql.as} name,
			bl.name ${sql.as} blName 
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_end IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateEndRestriction']}
            AND ${parameters['scenarioIdRestriction']}
            AND gp.allocation_type IN ('Usable Area - Owned','Usable Area - Leased')
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION
            
            SELECT DISTINCT gp.bl_id ${sql.concat} ' ' ${sql.concat} gp.fl_id ${sql.concat} ' ' ${sql.concat} CONVERT(nvarchar(60), CAST((gp.area_manual * ${parameters['areaUnitsConversionFactor']}) AS DECIMAL(10, 2))) ${sql.concat} ' ' ${sql.concat} gp.description ${sql.as} description,
            CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-' ${sql.concat} gp.event_name ${sql.concat} '-End' ELSE ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-End' END ${sql.as} event_name,
            gp.name ${sql.as} name, 
			bl.name ${sql.as} blName 
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_end IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateEndRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            AND NOT EXISTS (SELECT 1 FROM gp ${sql.as} sgp WHERE gp.gp_id = sgp.parent_group_id)
        </sql>
        <sql dialect="generic">
            SELECT DISTINCT gp.bl_id ${sql.concat} ' ' ${sql.concat} gp.fl_id ${sql.concat} ' ' ${sql.concat} CAST((gp.area_manual * ${parameters['areaUnitsConversionFactor']}) AS DECIMAL(10, 2)) ${sql.concat} ' ' ${sql.concat} gp.description ${sql.as} description,
            CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_start')} ${sql.concat} '-' ${sql.concat} gp.event_name ELSE ${sql.yearMonthDayOf('gp.date_start')} END ${sql.as} event_name,
            gp.name ${sql.as} name, 
			bl.name ${sql.as} blName 
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_start IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateStartRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION 
            
            SELECT DISTINCT gp.bl_id ${sql.concat} ' ' ${sql.concat} gp.fl_id ${sql.concat} ' ' ${sql.concat}  CAST((gp.area_manual * ${parameters['areaUnitsConversionFactor']}) AS DECIMAL(10, 2)) ${sql.concat} ' ' ${sql.concat} gp.description ${sql.as} description,
            CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-' ${sql.concat} gp.event_name ${sql.concat} '-End' ELSE ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-End' END ${sql.as} event_name,
            gp.name ${sql.as} name, 
			bl.name ${sql.as} blName 
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_end IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateEndRestriction']}
            AND ${parameters['scenarioIdRestriction']}
            AND gp.allocation_type IN ('Usable Area - Owned','Usable Area - Leased')
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            
            UNION
            
            SELECT DISTINCT gp.bl_id ${sql.concat} ' ' ${sql.concat} gp.fl_id ${sql.concat} ' ' ${sql.concat} CAST((gp.area_manual * ${parameters['areaUnitsConversionFactor']}) AS DECIMAL(10, 2)) ${sql.concat} ' ' ${sql.concat} gp.description ${sql.as} description,
            CASE WHEN gp.event_name IS NOT NULL THEN ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-' ${sql.concat} gp.event_name ${sql.concat} '-End' ELSE ${sql.yearMonthDayOf('gp.date_end')} ${sql.concat} '-End' END ${sql.as} event_name,
            gp.name ${sql.as} name, 
			bl.name ${sql.as} blName 
            FROM gp
            LEFT OUTER JOIN bl on gp.bl_id = bl.bl_id
            WHERE gp.date_end IS NOT NULL
            AND ${parameters['siteIdRestriction']}
            AND ${parameters['blIdRestriction']}
            AND ${parameters['dateEndRestriction']}
            AND ${parameters['scenarioIdRestriction']}
 			AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']} 
            AND NOT EXISTS (SELECT 1 FROM gp ${sql.as} sgp WHERE gp.gp_id = sgp.parent_group_id)
        </sql>
        <table name="gp" role="main"/>
        <field name="description" table="gp" dataType="text"/>
        <field name="name" table="gp" dataType="text" hidden="true"/>
        <field name="blName" table="gp" dataType="text" hidden="true"/>
        <parameter name="siteIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="blIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateStartRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateEndRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="scenarioIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="areaUnitsConversionFactor" dataType="verbatim" value="1"/>
        <parameter name="planning_bu_id" dataType="verbatim" value="1=1"/>
        <parameter name="dv_id" dataType="verbatim" value="1=1"/>
        <parameter name="dp_id" dataType="verbatim" value="1=1"/>
        <parameter name="gp_function" dataType="verbatim" value="1=1"/>
    </dataSource>
    
    <dataSource id="addSpaceInventoryBlDataSource">
        <sql dialect="generic">
            SELECT DISTINCT rm.bl_id ${sql.as} bl_id, bl.site_id ${sql.as} site_id,
            bl.name ${sql.as} name,bl.address1 ${sql.as} address1, bl.address2 ${sql.as} address2
            FROM rm
            LEFT OUTER JOIN dv ON rm.dv_id = dv.dv_id
            LEFT OUTER JOIN bl ON bl.bl_id = rm.bl_id
            WHERE NOT EXISTS (SELECT 1 FROM gp WHERE gp.bl_id = rm.bl_id AND gp.portfolio_scenario_id = ${parameters['scn_id']})
						OR  (SELECT COUNT(*) FROM FL WHERE fl.bl_id = rm.bl_id) != ( select COUNT(distinct g1.fl_id) from gp ${sql.as} g1 where g1.bl_id = rm.bl_id AND g1.portfolio_scenario_id = ${parameters['scn_id']} )
        </sql>
        <table name="bl" role="main"/>
        <field name="bl_id" table="bl"/>
        <field name="site_id" table="bl"/>
        <field name="name" table="bl"/>
        <field name="address1" table="bl"/>
        <field name="address2" table="bl"/>
        <parameter name="scn_id" dataType="text" value=""/>
    </dataSource>
    
    <dataSource id="notAddedToGroupFlDataSource">
        <sql dialect="generic">
            SELECT fl.bl_id ${sql.as} bl_id, fl.fl_id ${sql.as} fl_id, fl.name ${sql.as} name FROM fl
            WHERE NOT EXISTS (SELECT 1 FROM gp WHERE gp.bl_id = fl.bl_id AND gp.fl_id=fl.fl_id AND gp.portfolio_scenario_id = ${parameters['scn_id']})
        </sql>
        <table name="fl" role="main"/>
        <field name="fl_id" table="fl"/>
        <field name="bl_id" table="fl"/>
        <parameter name="scn_id" dataType="text" value="%"/>
    </dataSource>
    
    <dataSource id="groupRecordsDataSource">
        <table name="gp" role="main"/>
        <field name="gp_id" table="gp"/>
        <field name="name" table="gp"/>
        <field name="bl_id" table="gp"/>
        <field name="fl_id" table="gp"/>
        <field name="date_start" table="gp"/>
        <field name="portfolio_scenario_id" table="gp"/>
        <field name="event_name" table="gp"/>
        <field name="description" table="gp"/>
        <field name="ls_id" table="gp"/>
        <field name="allocation_type" table="gp"/>
        <field name="sort_order" table="gp"/>
        <field name="parent_group_id" table="gp"/>
        <field name="date_end" table="gp"/>
        <field name="dp_id" table="gp"/>
        <field name="dv_id" table="gp"/>
        <field name="gp_std" table="gp"/>
        <field name="area" table="gp"/>
        <field name="area_chargable" table="gp"/>
        <field name="area_comn" table="gp"/>
        <field name="area_comn_gp" table="gp"/>
        <field name="area_comn_serv" table="gp"/>
        <field name="area_manual" table="gp"/>
        <field name="cost" table="gp"/>
        <field name="em_per_seat" table="gp"/>
        <field name="count_em" table="gp"/>
        <field name="gp_function" table="gp"/>
        <field name="planning_bu_id" table="gp"/>
        <field name="hpattern_acad" table="gp"/>
        
        <sortField name="sort_order" table="gp" ascending="true"/>
    </dataSource>
    
    <dataSource id="leaseDataSource">
        <table name="ls" role="main"/>
        <field name="ls_id" table="ls"/>
        <field name="date_end" table="ls"/>
    </dataSource>
    
    <dataSource id="portfolioScenarioDataSource">
        <table name="portfolio_scenario" role="main"/>
        <field name="portfolio_scenario_id" table="portfolio_scenario"/>
        <field name="scn_name" table="portfolio_scenario"/>
        <field name="date_start" table="portfolio_scenario"/>
        <field name="scn_level" table="portfolio_scenario"/>
    </dataSource>
    
    <dataSource id="buildingAssetDS">
        <table name="bl"/>
        <field name="bl_id" table="bl"/>
        <field name="lat" table="bl"/>
        <field name="lon" table="bl"/>
        <field name="name" table="bl"/>
    </dataSource>
    
	<dataSource id="defaultMarkerPropertyDataSource">
        <table name="bl" role="main"/>
        <field table="bl" name="lat"/>
        <field table="bl" name="lon"/>
        <field table="bl" name="name"/>
        <field name="utilization" dataType="number" decimals="2">
           <sql dialect="generic">
				( 0.5 )
		   </sql>
		</field>
        <restriction type="sql" sql="bl.lat is not null and bl.lon is not null and bl_id=( select max(b.bl_id) from bl ${sql.as} b where b.lat is not null and b.lon is not null) " />
    </dataSource>

    <dataSource id="scenarioMarkerPropertyDataSource" type="grouping">
        <table name="gp" role="main"/>
        <table name="bl" role="standard"/>
        
        <field table="gp" name="bl_id" groupBy="true"/>
        <field table="bl" name="lat" groupBy="true"/>
        <field table="bl" name="lon" groupBy="true"/>
        <field table="bl" name="name" groupBy="true"/>
        <field table="gp" name="portfolio_scenario_id" groupBy="true"/>
     
                                                
        <field name="sum_alloc" dataType="number" decimals="2">
           <title translatable="true">Allocated (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END
           </sql>
        </field> 

        <field name="sum_usable_leased" dataType="number" decimals="2">
           <title translatable="true">Usable Leased (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END           
           </sql>
        </field> 

        <field name="sum_usable_owned" dataType="number" decimals="2">
           <title translatable="true">Usable Owned (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END        
           </sql>
        </field>
        
        <field name="unavailable" dataType="number" decimals="2">
            <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END       
           </sql>
        </field> 
    
        <field name="utilization" dataType="number" decimals="2">
           <title translatable="true">Allocation Rate(%)</title>
           <sql dialect="sybase">
                CASE WHEN (sum_usable_leased + sum_usable_owned - unavailable) &lt;&gt; 0 THEN 100*sum_alloc / (sum_usable_leased + sum_usable_owned - unavailable) ELSE 0 END          
           </sql>
           <sql dialect="oracle">
                CASE WHEN
                (
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) = 0 THEN 0 ELSE
                
                
                100*(SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id)  
                / 
                (
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) END             
           </sql>
           <sql dialect="sqlserver">
                CASE WHEN
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) = 0 THEN 0 ELSE
                
                
                100*(SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id)  
                / 
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                )
                END
           </sql>
        </field>              
        <parameter name="innerDateStartAsOfDate" dataType="verbatim" value="1=1"/>
        <parameter name="innerDateEndAsOfDate" dataType="verbatim" value="1=1"/>
    </dataSource>
    
    <dataSource id="chartTabBuildingUtilizationDs" type="grouping">
        <table name="gp" role="main"/>
        <table name="bl" role="standard"/>
        
        <field table="gp" name="bl_id" groupBy="true"/>
        <field table="gp" name="portfolio_scenario_id" groupBy="true"/>
     
                                                
        <field name="sum_alloc" dataType="number" decimals="2">
           <title translatable="true">Allocated (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END
           </sql>
        </field> 

        <field name="sum_usable_leased" dataType="number" decimals="2">
           <title translatable="true">Usable Leased (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END           
           </sql>
        </field> 

        <field name="sum_usable_owned" dataType="number" decimals="2">
           <title translatable="true">Usable Owned (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END        
           </sql>
        </field>
        
        <field name="unavailable" dataType="number" decimals="2">
            <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END       
           </sql>
        </field> 
    
        <field name="utilization" dataType="number" decimals="2">
           <title translatable="true">Allocation</title>
           <sql dialect="sybase">
                CASE WHEN (sum_usable_leased + sum_usable_owned - unavailable) &lt;&gt; 0 THEN sum_alloc / (sum_usable_leased + sum_usable_owned - unavailable)  ELSE 0 END          
           </sql>
           <sql dialect="oracle">
                CASE WHEN
                (
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) = 0 THEN 0 ELSE
                
                
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id)  
                / 
                (
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) END              
           </sql>
           <sql dialect="sqlserver">
                CASE WHEN
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) = 0 THEN 0 ELSE
                
                
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id)  
                / 
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                )
                END
           </sql>
        </field>              

        
        <field name="notUtilization"  dataType="number" decimals="2">
           <title translatable="true">Not Allocated</title>
           <sql dialect="sybase">
                1 - utilization          
           </sql>
           <sql dialect="oracle">
                1-(
                CASE WHEN
                (
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) = 0 THEN 0 ELSE
                
                
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id)  
                / 
                (
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) END )
           </sql> 
           <sql dialect="sqlserver">
                1-(
                CASE WHEN
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) = 0 THEN 0 ELSE
                
                
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id)  
                / 
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                )
                END )                  
           </sql>
        </field>
        <restriction type="sql" sql="gp.bl_id !='UNALLOC' " />
        <parameter name="innerDateStartAsOfDate" dataType="verbatim" value="1=1"/>
        <parameter name="innerDateEndAsOfDate" dataType="verbatim" value="1=1"/>
    </dataSource>
    
    <!-- The following data sources are for stack chart -->
    <dataSource id="abAllocWizStackDs_gp">
        <sql dialect="generic">
            SELECT gp.bl_id ${sql.as} bl_id,gp.fl_id ${sql.as} fl_id,
            gp.sort_order ${sql.as} sort_order,gp.dv_id ${sql.as} dv_id,gp.dp_id ${sql.as} dp_id,
            gp.gp_id ${sql.as} gp_id,gp.allocation_type ${sql.as} allocation_type, gp.area_manual ${sql.as} area_manual,
            gp.count_em ${sql.as} count_em, gp.planning_bu_id ${sql.as} planning_bu_id,
            gp.portfolio_scenario_id ${sql.as} portfolio_scenario_id, gp.date_start ${sql.as} date_start, gp.date_end ${sql.as} date_end,
            (CASE 
				WHEN gp.hpattern_acad is not null and gp.hpattern_acad!='14 0 7 13421772' THEN gp.hpattern_acad 
                WHEN portfolio_scenario.scn_level='bu' THEN bu.hpattern_acad
                WHEN portfolio_scenario.scn_level='dv' THEN dv.hpattern_acad
                WHEN portfolio_scenario.scn_level='dp' THEN dp.hpattern_acad
                WHEN portfolio_scenario.scn_level='fg' THEN (CASE WHEN gp.hpattern_acad IS NOT NULL  and gp.hpattern_acad!='14 0 7 13421772' THEN gp.hpattern_acad ELSE dp.hpattern_acad END)
            END) ${sql.as} hpattern_acad,
            fl.sort_order ${sql.as} fl_sort_order,gp.name ${sql.as} name , fl.name ${sql.as} fl_name, gp.option1, gp.event_name FROM gp 
            LEFT OUTER JOIN dv ON gp.dv_id=dv.dv_id 
            LEFT OUTER JOIN fl ON gp.bl_id=fl.bl_id AND gp.fl_id=fl.fl_id
            LEFT OUTER JOIN portfolio_scenario ON portfolio_scenario.portfolio_scenario_id = gp.portfolio_scenario_id
            LEFT OUTER JOIN bu ON bu.bu_id = gp.planning_bu_id
            LEFT OUTER JOIN dp ON dp.dv_id = gp.dv_id AND dp.dp_id = gp.dp_id
            WHERE gp.allocation_type NOT IN ('Usable Area - Owned', 'Usable Area - Leased') 
            AND ${parameters['portfolioScenarioId']} AND ${parameters['dateStartAsOfDate']} AND ${parameters['dateEndAsOfDate']}
 
            UNION  
            
            SELECT gp.bl_id, gp.fl_id, 9999 ${sql.as} sort_order, NULL ${sql.as} dv_id, NULL ${sql.as} dp_id, 99999999 ${sql.as} gp_id, 'Available - Remaining Area' ${sql.as} allocation_type, 
                CASE WHEN ( SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id=gp.portfolio_scenario_id AND gp_inner.allocation_type IN ('Usable Area - Owned', 'Usable Area - Leased') AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id) IS NULL THEN 0 ELSE  ( SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id=gp.portfolio_scenario_id AND gp_inner.allocation_type IN ('Usable Area - Owned', 'Usable Area - Leased') AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id) END -   
                CASE WHEN ( SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id=gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id) IS NULL THEN 0 ELSE ( SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id=gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id) END -  
                CASE WHEN ( SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id=gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id) IS NULL THEN 0 ELSE ( SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id=gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id) END AS area_manual, 
                0 ${sql.as} count_em, NULL ${sql.as} planning_bu_id, ${parameters['portfolio_scenario_id']} ${sql.as} portfolio_scenario_id, ${parameters['asOfDate']} ${sql.as} date_start, NULL ${sql.as} date_end, '0 7' ${sql.as} hpattern_acad, 
                fl.sort_order ${sql.as} fl_sort_order, 
                'AVAILABLE AREA' ${sql.as} name,
                fl.name ${sql.as} fl_name,  '0' ${sql.as} option1, null ${sql.as}  event_name     
            FROM gp LEFT OUTER JOIN fl ON gp.bl_id=fl.bl_id AND gp.fl_id=fl.fl_id 
            WHERE ${parameters['portfolioScenarioId']} AND ${parameters['dateStartAsOfDate']} AND ${parameters['dateEndAsOfDate']}
            GROUP BY gp.bl_id, fl.sort_order, gp.fl_id, fl.name, gp.portfolio_scenario_id
        </sql>
        <table name="gp" role="main"/>
        <field table="gp" name="bl_id"/>
        <field table="gp" name="fl_id"/>
        <field table="gp" name="fl_sort_order"/>
        <field table="gp" name="sort_order"/>
        <field table="gp" name="name"/>
        <field table="gp" name="dv_id"/>
        <field table="gp" name="dp_id"/>
        <field table="gp" name="hpattern_acad" controlType="color"/>
        <field table="gp" name="gp_id"/>
        <field table="gp" name="allocation_type"/>
        <field table="gp" name="area_manual"/>
        <field table="gp" name="count_em"/>
        <field table="gp" name="planning_bu_id"/>
        <field table="gp" name="portfolio_scenario_id"/>
        <field table="gp" name="fl_name"/>
        <field table="gp" name="option1"/>
        <field table="gp" name="event_name"/>
        
        <parameter name="portfolio_scenario_id" dataType="text" value=""/>
        <parameter name="dateStartAsOfDate" dataType="verbatim" value="1=1"/>
        <parameter name="dateEndAsOfDate" dataType="verbatim" value="1=1"/>
        <parameter name="portfolioScenarioId" dataType="verbatim" value="1=1"/>
        <parameter name="asOfDate" dataType="date" value="2003-01-01"/>
        <parameter name="innerDateStartAsOfDate" dataType="verbatim" value="1=1"/>
        <parameter name="innerDateEndAsOfDate" dataType="verbatim" value="1=1"/>
        
        <sortField name="bl_id" table="gp" ascending="true" />
        <sortField name="fl_sort_order" table="gp" ascending="false" />
        <sortField name="fl_id" table="gp" ascending="false" />
        <sortField name="sort_order" table="gp" ascending="true" />
    </dataSource>

	<dataSource id="abAllocWizStackStatsDs_bl" type="grouping">
        <table name="gp" role="main"/>
        <table name="bl" role="standard"/>
        
        <field table="gp" name="bl_id" groupBy="true"/>
        <field table="bl" name="name" groupBy="true"/>
        <field table="bl" name="address1" groupBy="true"/>
        <field table="bl" name="address2" groupBy="true"/>
        <field table="bl" name="city_id" groupBy="true"/>
        <field table="bl" name="state_id" groupBy="true"/>
        <field table="bl" name="use1" groupBy="true"/>
        <field table="bl" name="bldg_photo" groupBy="true"/>
        <field table="gp" name="portfolio_scenario_id" groupBy="true"/>
     
                                                
        <field name="sum_alloc" dataType="number" numericFormat="area" decimals="2">
           <title translatable="true">Allocated (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END
           </sql>
        </field> 

        <field name="sum_usable_leased" dataType="number" numericFormat="area" decimals="2">
           <title translatable="true">Usable Leased (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END           
           </sql>
        </field> 

        <field name="sum_usable_owned" dataType="number" numericFormat="area" decimals="2">
           <title translatable="true">Usable Owned (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END        
           </sql>
        </field>
        
        <field name="unavailable" dataType="number" numericFormat="area" decimals="2">
            <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) END       
           </sql>
        </field> 
    
        <field name="util" dataType="integer">
           <title translatable="true">Allocation Rate Overall</title>
           <sql dialect="sybase">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id) IS NULL
						 THEN 0 
						 ELSE CASE	WHEN (sum_usable_leased + sum_usable_owned - unavailable) &lt;&gt; 0 
											THEN CAST(ROUND(sum_alloc / (sum_usable_leased + sum_usable_owned - unavailable)  * 100, 0) AS int)  
											ELSE 0 
								  END
				END          
           </sql>
           <sql dialect="oracle">
                CASE WHEN
					(
					NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
					+ 
					NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
					-
					NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
					) = 0 
				THEN 0 
				ELSE                
					CAST( ROUND( 100 * NVL( (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)/(
					NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
					+ 
					NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
					-
					NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
					), 0) AS int) 
				END             
           </sql>
           <sql dialect="sqlserver">
                CASE WHEN
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                ) = 0 THEN 0 ELSE
                
                CAST(ROUND(
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id)  
                / 
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                )
                * 100, 0) AS int) END
           </sql>
        </field>              

        
        <field name="avail"  dataType="number" numericFormat="area" decimals="2">
           <title translatable="true">Sqft Available</title>
           <sql dialect="sybase">
                sum_usable_leased + sum_usable_owned - sum_alloc - unavailable          
           </sql>
           <sql dialect="oracle">
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
           </sql> 
           <sql dialect="sqlserver">
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id), 0)                  
           </sql>
        </field> 
        
        <field name="availableSeats" dataType="integer">
           <title translatable="true">Seats Available</title>
           <sql dialect="generic">
				(SELECT SUM(rm.cap_em) FROM rm where rm.bl_id = gp.bl_id and exists ( select 1 from gp  ${sql.as} gp_inner where gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND  ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']}  and gp_inner.fl_id=rm.fl_id )   ) 
				- 
               (SELECT SUM(gp_inner.count_em) 
				FROM gp  ${sql.as}   gp_inner 
			   WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND  ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id )
           </sql>
        </field>
        <field name="occupiedSeats" dataType="integer">
           <title translatable="true">Seats Occupied</title>
           <sql dialect="generic">
                (SELECT SUM(gp_inner.count_em) FROM gp ${sql.as}  gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id )
           </sql>
        </field>
        <field name="occupiedPct" dataType="integer">
           <title translatable="true">% Occupied </title>
           <sql dialect="oracle">
	            CASE 
					WHEN NVL(
										( SELECT SUM(rm.cap_em) FROM rm where rm.bl_id = gp.bl_id and exists ( select 1 from gp  ${sql.as} gp_inner where gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND  ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']}  and gp_inner.fl_id=rm.fl_id )   ) 
										, 0)=0 THEN 0
					ELSE 
						CAST(
							ROUND(
								NVL( (SELECT SUM(gp_inner.count_em) FROM gp ${sql.as}  gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id ), 0)*100
								/	
								( SELECT SUM(rm.cap_em) FROM rm where rm.bl_id = gp.bl_id and exists ( select 1 from gp  ${sql.as} gp_inner where gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND  ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']}  and gp_inner.fl_id=rm.fl_id )   ) 
							, 0 )
						AS int)
				END
           </sql>
           <sql dialect="generic">
				case 
						when 
							( SELECT SUM(rm.cap_em) FROM rm where rm.bl_id = gp.bl_id and exists ( select 1 from gp  ${sql.as} gp_inner where gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND  ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']}  and gp_inner.fl_id=rm.fl_id ) ) =0 
						then 0 
						else 
							CAST(
								ROUND(
									(SELECT SUM(gp_inner.count_em) FROM gp ${sql.as}  gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.portfolio_scenario_id )*100 
									/ 
									( SELECT SUM(rm.cap_em) FROM rm where rm.bl_id = gp.bl_id and exists ( select 1 from gp  ${sql.as} gp_inner where gp_inner.bl_id = gp.bl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND  ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']}  and gp_inner.fl_id=rm.fl_id ) )
							, 0 )
						AS int)
				end
           </sql>
        </field>
        <parameter name="innerDateStartAsOfDate" dataType="verbatim" value="1=1"/>
        <parameter name="innerDateEndAsOfDate" dataType="verbatim" value="1=1"/>
        <sortField table="gp" name="bl_id"/>
    </dataSource>
   
    <dataSource id="abAllocWizStackStatsDs_fl" type="grouping">
        <table name="gp" role="main"/>
        <table name="fl" role="standard"/>
        <field table="gp" name="bl_id" groupBy="true"/>
        <field table="gp" name="fl_id" groupBy="true"/>
        <field table="gp" name="portfolio_scenario_id" groupBy="true"/>
        <field table="fl" name="sort_order" groupBy="true"/>
        <field table="fl" name="std_area_per_em" groupBy="true"/>
        
        <field name="sum_alloc" dataType="number" numericFormat="area" decimals="2">
           <title translatable="true">Allocated (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id) END
           </sql>
        </field> 

        <field name="sum_usable_leased"  dataType="number" numericFormat="area" decimals="2">
           <title translatable="true">Usable Leased (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id) END
           </sql>
        </field> 

        <field name="sum_usable_owned"  dataType="number" numericFormat="area" decimals="2">
           <title translatable="true">Usable Owned (Sum)</title>
           <sql dialect="generic">
                CASE WHEN (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id) END
           </sql>
        </field> 
        
        <field name="unavailable" dataType="number" numericFormat="area" decimals="2">
            <sql dialect="generic">
                CASE WHEN 
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id) IS NULL THEN 0 ELSE
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id) END
            </sql>
        </field>

        <!-- Util -->
        <field name="util"  dataType="integer">
           <title translatable="true">Allocation Rate</title>
           <sql dialect="sybase">
               CASE WHEN (sum_usable_leased + sum_usable_owned - unavailable) &lt;&gt; 0 THEN CAST(ROUND(sum_alloc / (sum_usable_leased + sum_usable_owned - unavailable)  * 100, 0) AS int)  ELSE 0 END      
           </sql>
           <sql dialect="oracle">
                CASE WHEN
                (
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                ) = 0 THEN 0 ELSE
                
                CAST(ROUND(
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id)  
                / 
                (
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                )
                * 100, 0) AS int) END 
           </sql>
           <sql dialect="sqlserver">
                CASE WHEN
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                ) = 0 THEN 0 ELSE
                
                CAST(ROUND(
                (SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id)  
                / 
                (
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id=gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                )
                * 100, 0) AS int) END 
           </sql>
        </field>              

        <!-- Avail Sqft. -->
        <field name="avail" dataType="number" numericFormat="area" decimals="2">
           <title translatable="true">Avail. Sqft</title>
           <sql dialect="sybase">
                sum_usable_leased + sum_usable_owned - sum_alloc - unavailable             
           </sql>
           <sql dialect="oracle">
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                -       
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                -
                NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
           </sql>
           <sql dialect="sqlserver">
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0) 
                + 
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
                -
                ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
           </sql>
        </field> 

        <!-- Seats. -->        
        <field name="seats"  dataType="integer">
           <title translatable="true">Avail. Headcount</title>
           <sql dialect="sybase">
                CASE WHEN fl.std_area_per_em = 0 THEN 0 
							ELSE	CAST(ROUND(avail/fl.std_area_per_em, 0)AS int)
				END   
           </sql>
           <sql dialect="oracle">
                CASE WHEN fl.std_area_per_em = 0 THEN 0 
						ELSE 
							CAST(
								ROUND(
									(NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0) 
										+ 
										NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
										-       
										NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
										-
										NVL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
										) / fl.std_area_per_em,  
									0)
								AS int)
				END
           </sql>
           <sql dialect="sqlserver">
                CASE WHEN fl.std_area_per_em = 0 THEN 0 
						ELSE 
							CAST(
								ROUND(
									(ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Leased' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0) 
									+ 
									ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Usable Area - Owned' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
									-
									ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Allocated Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
									-
									ISNULL((SELECT SUM(gp_inner.area_manual) FROM gp gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND gp_inner.allocation_type = 'Unavailable Area' AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,gp_inner.fl_id, gp_inner.portfolio_scenario_id), 0)
									) / fl.std_area_per_em,  
								0)
							AS int)				
				END
           </sql>
        </field>

        <field name="availableSeats" dataType="integer">
           <title translatable="true">Seats Available</title>
           <sql dialect="generic">
                (SELECT SUM(rm.cap_em) FROM rm where rm.bl_id = gp.bl_id and rm.fl_id = gp.fl_id) - (SELECT SUM(gp_inner.count_em) FROM gp ${sql.as}  gp_inner WHERE gp_inner.bl_id = gp.bl_id AND gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id, gp_inner.fl_id, gp_inner.portfolio_scenario_id )
           </sql>
        </field>
        <field name="occupiedSeats" dataType="integer">
           <title translatable="true">Seats Occupied</title>
           <sql dialect="generic">
                (SELECT SUM(gp_inner.count_em) FROM gp ${sql.as}  gp_inner WHERE gp_inner.bl_id = gp.bl_id AND  gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']})
           </sql>
        </field>
        <field name="occupiedPct" dataType="integer">
           <title translatable="true">% Occupied </title>
           <sql dialect="generic">
		   ( case when (SELECT SUM(rm.cap_em) FROM rm where rm.bl_id = gp.bl_id  and rm.fl_id = gp.fl_id) is null or (SELECT SUM(rm.cap_em) FROM rm where rm.bl_id = gp.bl_id  and rm.fl_id = gp.fl_id)=0 
					then 0 
			 else 
				CAST(
					ROUND(
						(SELECT SUM(gp_inner.count_em) FROM gp ${sql.as}  gp_inner WHERE gp_inner.bl_id = gp.bl_id AND  gp_inner.fl_id = gp.fl_id AND gp_inner.portfolio_scenario_id = gp.portfolio_scenario_id AND ${parameters['innerDateStartAsOfDate']} AND ${parameters['innerDateEndAsOfDate']} GROUP BY gp_inner.bl_id,  gp_inner.fl_id, gp_inner.portfolio_scenario_id ) *100
						/ 
						(SELECT SUM(rm.cap_em) FROM rm where rm.bl_id = gp.bl_id  and rm.fl_id = gp.fl_id) 
					, 0 )
				AS int)
			end )
           </sql>
        </field>

		<parameter name="innerDateStartAsOfDate" dataType="verbatim" value="1=1"/>
        <parameter name="innerDateEndAsOfDate" dataType="verbatim" value="1=1"/>
                
        <!-- important to have the correct sort order, so that the groups are displayed correctly in the stack -->        
        <sortField name="bl_id" table="gp" ascending="true" />
        <sortField name="sort_order" table="fl" ascending="false" />
        <sortField name="fl_id" table="gp" ascending="false" />
    </dataSource>
    
    <!-- The following data sources are for stack chart -->
    <dataSource id="abAllocWizStackDs_destGp">
        <table name="gp" role="main"/>
        <field table="gp" name="bl_id"/>
        <field table="gp" name="fl_id"/>
        <field table="gp" name="fl_sort_order"/>
        <field table="gp" name="sort_order"/>
        <field table="gp" name="name"/>
        <field table="gp" name="dv_id"/>
        <field table="gp" name="dp_id"/>
        <field table="gp" name="hpattern_acad" controlType="color"/>
        <field table="gp" name="gp_id"/>
        <field table="gp" name="allocation_type"/>
        <field table="gp" name="area_manual"/>
        <field table="gp" name="count_em"/>
        <field table="gp" name="planning_bu_id"/>
        <field table="gp" name="portfolio_scenario_id"/>
        <field table="gp" name="fl_name"/>
        <field table="gp" name="option1"/>
        
        <parameter name="scenarioId" dataType="text" value=""/>
        <parameter name="asOfDate" dataType="date" value="2003-01-01"/>
        <parameter name="blId" dataType="text" value=""/>
        <parameter name="flId" dataType="text" value=""/>
        <parameter name="negativeGpId" dataType="verbatim" value=""/>
        <parameter name="sameOrgCondition" dataType="verbatim" value=""/>
        <restriction type="sql" sql="gp.portfolio_scenario_id=${parameters['scenarioId']} AND  gp.bl_id=${parameters['blId']} AND  gp.fl_id=${parameters['flId']} AND gp.date_start &lt;=${parameters['asOfDate']} AND ( gp.date_end is null or gp.date_end &gt;=${parameters['asOfDate']}) and exists (select 1 from gp ${sql.as} g1 where g1.gp_id=${parameters['negativeGpId']} and ${parameters['sameOrgCondition']} )" />
	</dataSource>
	
    <!-- The following data sources are for detectiving sb_items of group -->
    <dataSource id="abAllocWizStackDs_hasSbItemsGp">
        <table name="gp" role="main"/>
        <field table="gp" name="gp_id"/>
        <restriction type="sql" sql=" exists ( select 1 from sb_items where sb_items.gp_id=gp.gp_id )" />
	</dataSource>
	
    <dataSource id="roomDataSource" type="grouping">
        <table name="rm" role="main"/>
        <field name="bl_id" table="rm" groupBy="true"/>
        <field name="fl_id" table="rm" groupBy="true"/>
        <field name="totalAreaManual" baseField="rm.area" dataType="number" decimals="2" formula="sum"/>   
        <field name="totalAreaChargable" baseField="rm.area_chargable" dataType="number" decimals="2" formula="sum"/>
        <field name="totalAreaComn" baseField="rm.area_comn" dataType="number" decimals="2" formula="sum"/>
        <field name="totalAreaComnRm" baseField="rm.area_comn_rm" dataType="number" decimals="2" formula="sum"/>
        <field name="totalAreaCommonServ" baseField="rm.area_comn_serv" dataType="number" decimals="2" formula="sum"/>
    </dataSource>
    
    <dataSource id="projectDS">
        <table name="project"/>
        <field name="project_id"/>
        <field name="project_name"/>
    </dataSource>
    
    <dataSource id="sbItemsForToolTipDs">
        <table name="sb_items" role="main"/>
        <field name="auto_number" table="sb_items"/>
        <field name="eq_std" table="sb_items"/>
        <field name="sb_name" table="sb_items"/>
        <field name="fl_id" table="sb_items"/>
        <field name="bu_id" table="sb_items"/>
        <field name="dp_id" table="sb_items"/>
        <field name="gp_id" table="sb_items"/>
        <field name="bl_id" table="sb_items"/>
        <field name="dv_id" table="sb_items"/>
        <field name="rm_std" table="sb_items"/>
        <field name="alloc_score" table="sb_items"/>
        <field name="alloc_score_ext" table="sb_items"/>
        <field name="auto_allocated" table="sb_items"/>
        <field name="cost_of_furn" table="sb_items"/>
        <field name="cost_of_move" table="sb_items"/>
        <field name="cost_of_space" table="sb_items"/>
        <field name="description" table="sb_items"/>
        <field name="eq_cost" table="sb_items"/>
        <field name="fg_title" table="sb_items"/>
        <field name="rm_std_area" table="sb_items"/>
        <field name="unit_area" table="sb_items"/>
        <field name="unit_headcount" table="sb_items"/>
        <field name="p00_expr" table="sb_items"/>
        <field name="p00_value" table="sb_items"/>
        <field name="p01_expr" table="sb_items"/>
        <field name="p01_value" table="sb_items"/>
        <field name="p02_expr" table="sb_items"/>
        <field name="p02_value" table="sb_items"/>
        <field name="p03_expr" table="sb_items"/>
        <field name="p03_value" table="sb_items"/>
        <field name="p04_expr" table="sb_items"/>
        <field name="p04_value" table="sb_items"/>
        <field name="p05_expr" table="sb_items"/>
        <field name="p05_value" table="sb_items"/>
        <field name="p06_expr" table="sb_items"/>
        <field name="p06_value" table="sb_items"/>
        <field name="p07_expr" table="sb_items"/>
        <field name="p07_value" table="sb_items"/>
        <field name="p08_expr" table="sb_items"/>
        <field name="p08_value" table="sb_items"/>
        <field name="p09_expr" table="sb_items"/>
        <field name="p09_value" table="sb_items"/>
        <field name="p10_expr" table="sb_items"/>
        <field name="p10_value" table="sb_items"/>
        <field name="p11_expr" table="sb_items"/>
        <field name="p11_value" table="sb_items"/>
        <field name="p12_expr" table="sb_items"/>
        <field name="p12_value" table="sb_items"/>
    </dataSource>

    <dataSource id="floorPlanRoomDataSource">
        <table name="rm" role="main"/>
        <field name="bl_id" table="rm"/>
        <field name="fl_id" table="rm"/>
        <field name="rm_id" table="rm"/>
        <field name="dwgname" table="rm"/>
    </dataSource>

    <panel type="view" id="allocWizScn_commonView" file="ab-alloc-wiz-common.axvw" showOnLoad="false"/>  

    <dataSource id="eventsHighlightGpDataSource">
        <table name="gp" role="main"/>
        <table name="bl" role="standard"/>
        <field  table="gp" name="gp_id"/>
        <sortField table="gp"  name="gp_id" ascending="true"/>
        <parameter name="siteIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="blIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="dateStartRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="scenarioIdRestriction" dataType="verbatim" value="1=1"/>
        <parameter name="planning_bu_id" dataType="verbatim" value="1=1"/>
        <parameter name="dv_id" dataType="verbatim" value="1=1"/>
        <parameter name="dp_id" dataType="verbatim" value="1=1"/>
        <parameter name="gp_function" dataType="verbatim" value="1=1"/>
        <parameter name="highlightRestriction" dataType="verbatim" value="1=1"/>
        <restriction type="sql" sql=" ${parameters['siteIdRestriction']}  AND ${parameters['blIdRestriction']}  AND ${parameters['dateStartRestriction']} AND ${parameters['scenarioIdRestriction']}
 						AND ${parameters['planning_bu_id']} AND ${parameters['dv_id']} AND ${parameters['dp_id']} AND ${parameters['gp_function']}   AND ${parameters['highlightRestriction']}  " />
    </dataSource>

    <dataSource id="floorDataSource">
        <table name="fl" role="main"/>
        <field name="bl_id"/>
        <field name="fl_id"/>
    </dataSource>
</view>