<!-- Example: wizard form with customized UI style.
     This example does not contain any real functionality as is intended only to show UI customization options.

     The UI is created as a combination of:
     1) standard view panels, with additional HTML classes;
     2) HTML panels with static HTML content defined in the view;
     3) dynamic HTML content generated by JS code using templates.

     Use standard view panels whenever possible.
     Use HTML panels when standard panels do not suffice and the HTML content is known in advance.
     Use dynamic HTML content to show data that is calculated or retrieved from the server.  -->

<view version="2.0" type="form">
    <title>Example of customized interface style: Manage service level agreements</title>

    <!-- HTML classes for this example. -->
    <css file="ab-ex-wizard-style.css"/>

    <!-- Example JS code. -->
    <js file="ab-ex-wizard-style.js"/>

    <!-- File with HTML templates used to create dynamic HTML content. Includes additional HTML classes.  -->
    <panel type="view" id="templates" file="ab-ex-html-templates.axvw"/>

    <!-- These data sources are required to display standard view forms. -->
    <dataSource id="requestParametersDS">
        <table name="helpdesk_sla_request"/>

        <field name="site_id"/>
        <field name="bl_id"/>
        <field name="fl_id"/>
        <field name="rm_id"/>

        <field name="requestor"/>
        <field name="em_std"/>
        <field name="dv_id"/>
        <field name="dp_id"/>

        <field name="prob_type"/>
        <field name="eq_std"/>
        <field name="eq_id"/>
        <field name="default_priority"/>

        <restriction type="parsed">
            <clause table="helpdesk_sla_request" name="prob_type" op="IS NOT NULL"/>
        </restriction>
    </dataSource>

    <dataSource id="responseParametersDS">
        <table name="helpdesk_sla_response"/>

        <field name="cf_id"/>
        <field name="default_duration"/>
        <field name="supervisor"/>
        <field name="work_team_id"/>
    </dataSource>

    <!-- The UI displays three tabs: Request parameters, On-demand Workflow, and Service Parameters.
         Tabs use optional core CSS class to display numbered wizard steps. -->
    <tabs id="requestTabs" workflow="enforced" cssClass="wizard numberedSteps">

        <!-- The Request Parameters tab demonstrates new form field type for multiple value editing.
             Text fields with controlType="multiEdit":
             1. Displays the ANY placeholder if the field is empty.
             2. Auto-grows if the user selects or types more values than fit into one line.
             3. Can optionally display field actions as links below the field. -->
        <tab name="requestParametersTab">
            <title>Define the request parameters</title>

            <!-- Standard form panel with new multi-edit fields. -->
            <panel type="form" id="requestParametersForm" dataSource="requestParametersDS" columns="2">
                <instructions>What are the types and scope of these requests?</instructions>

                <fieldset>
                    <title>Location</title>
                    <!-- Set controlType="multiEdit" to auto-grow the field.
                         Set actionPosition="bottom" to display field actions below the field. -->
                    <field name="site_id" controlType="multiEdit" actionsPosition="bottom"/>
                    <field name="bl_id" controlType="multiEdit" actionsPosition="bottom"/>
                    <field name="fl_id" controlType="multiEdit" actionsPosition="bottom"/>
                    <field name="rm_id" controlType="multiEdit" actionsPosition="bottom"/>
                </fieldset>

                <fieldset>
                    <title>Person</title>
                    <field name="requestor" controlType="multiEdit" actionsPosition="bottom"/>
                    <field name="em_std" controlType="multiEdit" actionsPosition="bottom"/>
                    <field name="dv_id" controlType="multiEdit" actionsPosition="bottom"/>
                    <field name="dp_id" controlType="multiEdit" actionsPosition="bottom"/>
                </fieldset>

                <fieldset>
                    <title>Issue</title>
                    <field name="prob_type" controlType="multiEdit"/>
                    <field name="eq_std" controlType="multiEdit"/>
                    <field name="eq_id" controlType="multiEdit"/>
                </fieldset>
            </panel>

            <!-- Custom HTML panel. Displays standard actions and custom HTML summary at the bottom of the first wizard tab. -->
            <panel type="html" id="requestParametersButtons" cssClass="exSummaryPanel">

                <!-- Standard panel actions. -->
                <action>
                    <title>Cancel this SLA</title>
                </action>
                <action mainAction="true">
                    <title>Proceed to next step</title>
                    <command type="selectTabPage" tabPageName="workflowTab"/>
                </action>

                <!-- Custom HTML content. It is styled using CSS classes defined in ab-ex-wizard-style.css. -->
                <html>
                    <h3>Summary:</h3>
                    <div class="exSummaryBlock">
                        <div>
                            <h4>Request parameters</h4>
                        </div>
                        <div>
                            <h4>On-demand workflow</h4>
                        </div>
                        <div>
                            <h4>Service parameters</h4>
                        </div>
                    </div>
                </html>
            </panel>
        </tab>

        <!-- The On-demand Workflow tab demonstrates how to display custom content using HTML, CSS, and Java Script.
             HTML panels with static HTML content is defined in the view.
             Dynamic HTML content is generated by JS code using templates.

             This tab displays multiple forms. Each form has input fields for one workflow step,
             and is displayed in a callout-like box, with the workflow step title and a graphical arrow to the left of the box. -->
        <tab name="workflowTab" selected="true">
            <title>Define the on-demand workflow</title>

            <!-- A separate panel displays instructions, because other panels are displayed using custom CSS style. -->
            <panel type="html" id="workflowInstructions">
                <instructions>What must be done before a process may change status?</instructions>
            </panel>

            <!-- A form with input field for the Requested workflow step.
                 The panelCallout CSS class is defined in ab-ex-wizard-style.css, and is not a part of the core. -->
            <panel type="form" id="workflowStepRequestedForm" dataSource="none" labelsPosition="top"
                   bodyCssClass="exCalloutFormPanel">

                <field id="requestedOptions" controlType="checkBox">
                    <option value="one">Approval required</option>
                    <option value="two">Notify requestor of all status changes</option>
                </field>

                <field id="requestedOptionalSteps">
                    <title>Optional Steps:</title>

                    <!-- The fieldLink CSS class is a part of the core. It displays the action as a link instead of a button. -->
                    <action cssClass="fieldLink">
                        <title>Add approval</title>
                    </action>
                    <action cssClass="fieldLink">
                        <title>Add notification</title>
                    </action>
                    <action cssClass="fieldLink">
                        <title>Add edit and approve</title>
                    </action>
                </field>
            </panel>

            <!-- A form with input fields for the Approved workflow step.
                 The panelCallout CSS class is defined in ab-ex-wizard-style.css, and is not a part of the core. -->
            <panel type="form" id="workflowStepApprovedForm" dataSource="responseParametersDS" labelsPosition="top" columns="3"
                   bodyCssClass="exCalloutFormPanel">

                <field id="approvedOptions" controlType="checkBox" rowspan="2">
                    <option value="one">Auto issue</option>
                    <option value="two">Notify supervisor(s)</option>
                </field>

                <field name="cf_id" controlType="multiEdit" actionsPosition="bottom" cssClass="shortField">
                    <title>Craftsperson code</title>
                    <action>
                        <title>Add more</title>
                    </action>
                </field>

                <field rowspan="2">
                    <html>
                        <div><input type="radio" id="dispatchToWorkTeam"/><span translatable="true">Dispatch request to a work team</span></div>
                        <div class="inputContainer"><span translatable="true">Work team code:</span><input type="text"></input></div>
                        <div><input type="radio" id="dispatchToSupervisor"/><span translatable="true">Dispatch request to a supervisor</span></div>
                        <div class="inputContainer"><span translatable="true">Supervisor:</span><input type="text"></input></div>
                        <div><input type="radio" id="dispatchToDispatcher"/><span translatable="true">Assign request to a dispatcher</span></div>
                        <div class="inputContainer"><a class="fieldLink">Add dispatch step</a></div>
                    </html>
                </field>

                <field name="default_duration" cssClass="shortField">
                    <title>Default duration, hours</title>
                </field>

                <field id="approvedOptionalSteps" colspan="2">
                    <title>Optional Steps:</title>

                    <!-- The fieldLink CSS class is a part of the core. It displays the action as a link instead of a button. -->
                    <action cssClass="fieldLink">
                        <title>Add approval</title>
                    </action>
                    <action cssClass="fieldLink">
                        <title>Add estimation</title>
                    </action>
                    <action cssClass="fieldLink">
                        <title>Add notification</title>
                    </action>
                    <action cssClass="fieldLink">
                        <title>Add scheduling</title>
                    </action>
                </field>
            </panel>

            <!-- A form with input field for the Issued workflow step.
                 The panelCallout CSS class is defined in ab-ex-wizard-style.css, and is not a part of the core. -->
            <panel type="form" id="workflowStepIssuedForm" dataSource="none" labelsPosition="top"
                   bodyCssClass="exCalloutFormPanel">

                <field id="issuedOptions" controlType="checkBox">
                    <option value="one">Notify Craftsperson(s)</option>
                </field>

                <field id="issuedOptionalSteps">
                    <title>Optional Steps:</title>

                    <!-- The fieldLink CSS class is a part of the core. It displays the action as a link instead of a button. -->
                    <action cssClass="fieldLink">
                        <title>Add notification</title>
                    </action>
                </field>
            </panel>

            <!-- A custom HTML panel with additional controls that cannot be implemented using standard form panels.
                 HTML elements are styled using CSS classes defined in ab-ex-wizard-style.css. -->
            <panel type="html" id="workflowOptionsForm">
                <html>
                    <!-- Actions that let the user add more workflow steps.
                         Each action is displayed as a link using the fieldLink core CSS class. -->
                    <div class="exOptionsBlock">
                        <span>Add options for:</span>
                        <a class="fieldLink">Rejected</a>
                        <a class="fieldLink">Stopped</a>
                        <a class="fieldLink">Cancelled</a>
                    </div>

                    <div class="exSaveBlockWrapper">
                        <!-- Controls that let the user save entered parameters.
                             The wrapper element is displayed as a white box using a custom CSS class. -->
                        <div class="exSaveBlock">
                            <span><b>Save</b> these parameters for pre-filling other SLAs</span>
                            <input placeholder="Enter name"></input>
                            <a class="button mainAction">OK</a>
                        </div>

                        <!-- Controls that let the user load parameters from another SLA.
                             The wrapper element is displayed as a white box using a custom CSS class. -->
                        <div class="exSaveBlock">
                            <span><b>Pre-fill</b> this step by copying parameters from another SLA</span>
                            <a class="fieldLink">Find SLA</a>
                            <a class="button mainAction">OK</a>
                        </div>
                    </div>
                </html>
            </panel>

            <!-- Custom HTML panel. Displays standard actions and custom HTML summary at the bottom of the first wizard tab. -->
            <panel type="html" id="workflowButtons" cssClass="exSummaryPanel">

                <!-- Standard panel actions. -->
                <action>
                    <title>Cancel this SLA</title>
                </action>
                <action>
                    <title>Previous step</title>
                    <command type="selectTabPage" tabPageName="requestParametersTab"/>
                </action>
                <action mainAction="true">
                    <title>Proceed to next step</title>
                    <command type="selectTabPage" tabPageName="serviceParametersTab"/>
                </action>

                <!-- Custom HTML content. It is styled using CSS classes defined in ab-ex-wizard-style.css. -->
                <html>
                    <h3>Summary:</h3>
                    <div class="exSummaryBlock">
                        <!-- This element is a placeholder for request parameters entered by the user.
                             JS code moves the requestParametersReport panel content (below) inside this element. -->
                        <div id="requestParametersSummary">
                            <h4 class="exSummaryComplete">Request parameters</h4>
                        </div>

                        <!-- This element is a placeholder for on-demand workflow summary.
                             JS code populates it with generated HTML content. -->
                        <div id="workflowSummary">
                            <h4 class="exSummaryComplete">On-demand workflow</h4>
                        </div>

                        <div id="serviceParametersSummary">
                            <h4>Service parameters</h4>
                        </div>
                    </div>
                </html>
            </panel>
        </tab>

        <!-- This tab has no content. -->
        <tab name="serviceParametersTab">
            <title>Define the service parameters</title>
        </tab>
    </tabs>

    <!-- This panel displays an SLA in a read-only mode. Initially it is hidden.
         JS code moves this panel's content to the requestParametersSummary DOM element (above)
         and displays it there. -->
    <panel id="requestParametersReport" type="columnReport" dataSource="requestParametersDS"
           showOnLoad="false" hidden="true">
        <field name="prob_type"/>
        <field name="site_id"/>
        <field name="bl_id"/>
    </panel>

    <!-- Workflow step titles. -->
    <message name="workflowStepRequestedFormTitle">Requested</message>
    <message name="workflowStepApprovedFormTitle">Approved</message>
    <message name="workflowStepIssuedFormTitle">Issued</message>
    <message name="workflowOptionsFormTitle">Completed</message>
</view>