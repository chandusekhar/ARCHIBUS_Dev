/**
 * Handles events generated by the app document feature
 * @author Ana Paduraru
 * @since 21.2
 */
Ext.define('SpaceBook.controller.Documents', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            roomSurveyView: 'spaceRoomSurveyPanel',
            cameraPanel: 'camera',
            documentViewItem: 'documentItem'
        },
        control: {
            cameraPanel: {
                attach: 'onAttachPhoto'
            },
            documentViewItem: {
                displaydocument: 'onDisplayDocument'
            }
        },

        photoReplaceTitle: LocaleManager.getLocalizedString('Attach photo',
            'SpaceBook.controller.Documents'),

        photoReplaceMessage: LocaleManager.getLocalizedString('Overwrite existing photo?',
            'SpaceBook.controller.Documents'),

        attachPhotoText: LocaleManager.getLocalizedString('Attaching photo', 'SpaceBook.controller.Documents')
    },

    /**
     * Saves the photo data in the Room Survey record.
     * @param cameraPanel
     */
    onAttachPhoto: function (cameraPanel) {
        var me = this,
            imageData = cameraPanel.getImageData(),
            roomSurveyView = me.getRoomSurveyView(),
            roomSurveyRecord = roomSurveyView.getRecord(),
            roomSurveyStore = Ext.getStore('roomSurveyStore'),
            attachPhotoFunction = function () {
                roomSurveyStore.setAutoSync(false);
                document.activeElement.blur();
                me.addPhotoToRoomSurveyRecord(roomSurveyRecord, imageData);
                roomSurveyStore.sync(function () {
                    roomSurveyView.setRecord(roomSurveyRecord);
                    roomSurveyStore.setAutoSync(true);
                    cameraPanel.onClosePanel();
                    Mask.hideLoadingMask();
                }, me);
            };
        Mask.displayLoadingMask(me.getAttachPhotoText());
        me.verifyExistsOtherDocAttached(true, null, attachPhotoFunction, me);
    },

    /**
     * Verify if another photo is saved in the room survey record and ask for confirmation if necesary.
     * @param isPhoto true is image data is from taking photos, and false if it is redline image data
     * @param record room survey record for saving redline picture
     * @param callbackFn
     * @param scope
     */
    verifyExistsOtherDocAttached: function (isPhoto, record, callbackFn, scope) {
        var me = this,
            roomSurveyView = me.getRoomSurveyView(),
            roomSurveyRecord,
            existOthers = false;

        if (isPhoto) {
            roomSurveyRecord = roomSurveyView.getRecord();
            existOthers = (!Ext.isEmpty(roomSurveyRecord.get('survey_photo')));
        } else {
            roomSurveyRecord = record;
            existOthers = (!Ext.isEmpty(roomSurveyRecord.get('survey_redline_rm')));
        }

        if (existOthers) {
            Ext.Msg.confirm(me.getPhotoReplaceTitle(), me.getPhotoReplaceMessage(),
                function (buttonId) {
                    if (buttonId === 'yes') {
                        Ext.callback(callbackFn, scope || me);
                    } else {
                        Mask.hideLoadingMask();
                    }
                }
            );
        } else {
            Ext.callback(callbackFn, scope || me);
        }
    },

    addPhotoToRoomSurveyRecord: function (roomSurveyRecord, imageData) {
        var documentField = roomSurveyRecord.getDocumentField();

        roomSurveyRecord.setDocumentFieldData(documentField, imageData);
    },

    onDisplayDocument: function (roomMobileId, fileName, documentFieldId, fieldName) {
        var me = this,
            roomSurveyStore = Ext.getStore('roomSurveyStore'),
            roomSurveyRecord = roomSurveyStore.findRecord('id', roomMobileId),
            documentField = fieldName + '_contents',
            documentData;

        if (roomSurveyRecord) {
            documentData = roomSurveyRecord.get(documentField);
            // If the document is an image then we display it using the photo panel
            DocumentManager.displayDocumentOrImage(documentData, fileName, me.getCameraPanel());
        }
    }
});