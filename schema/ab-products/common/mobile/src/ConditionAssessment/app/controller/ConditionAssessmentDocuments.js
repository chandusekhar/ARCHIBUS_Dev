/**
 * Handles events generated by the ConditionAssessment document feature
 * @author Cristina Moldovan
 * @since 21.2
 */
Ext.define('ConditionAssessment.controller.ConditionAssessmentDocuments', {
    extend: 'Ext.app.Controller',

    requires: ['Common.document.DocumentManager'],

    config: {
        refs: {
            mainView: 'mainview',
            conditionAssessmentView: 'conditionAssessmentEditPanel',
            documentViewItem: 'documentItem',
            cameraPanel: 'camera',
            documentListView: 'conditionAssessmentDocumentsList'
        },
        control: {
            cameraPanel: {
                attach: 'onAttachPhoto'
            },
            documentViewItem: {
                displaydocument: 'onDisplayDocument',
                downloadDocument: 'onDownloadDocument'
            }
        },

        documentFieldsUsedMessage: LocaleManager.getLocalizedString('All Assessment item document fields are in use.<br>The photo cannot be attached to the Assessment item',
            'ConditionAssessment.controller.ConditionAssessmentDocuments'),

        documentFieldsUsedTitle: LocaleManager.getLocalizedString('Documents', 'ConditionAssessment.controller.ConditionAssessmentDocuments')
    },

    onDisplayDocument: function (assessmentId, fileName, documentFieldId, fieldName, isOnDemandDocument) {
        var conditionAssessmentStore = Ext.getStore('conditionAssessmentsStore'),
            conditionAssessmentRecord = conditionAssessmentStore.findRecord('id', assessmentId),
            documentField = fieldName + '_contents',
            documentData,
            key = {
                activity_log_id: conditionAssessmentRecord.get('activity_log_id')
            };

        if (conditionAssessmentRecord) {
            if (isOnDemandDocument) {
                DocumentManager.displayOnDemandDocument(key, 'activity_log', fieldName, fileName);
            }
            else {
                documentData = conditionAssessmentRecord.get(documentField);
                DocumentManager.displayDocumentOrImage(documentData, fileName, this.cameraPanel);
            }
        }
    },

    /**
     * Saves the photo data in the Condition Assessment record.
     * Camera panel can be displayed from 3 places: condition assesments list, condition assessment edit form (carousel) and condition assessment add form.
     * @param cameraPanel
     */
    onAttachPhoto: function (cameraPanel) {
        var me = this,
            imageData = cameraPanel.getImageData(),
            navBar = me.getMainView().getNavigationBar(),
            currentView = navBar.getCurrentView(),

            editView = currentView,
            conditionAssessmentRecord,
            conditionAssessmentStore = Ext.getStore('conditionAssessmentsStore'),
            documentListView = me.getDocumentListView();

        //verify if camera panel was opened from add form
        if (ConditionAssessment.util.Ui.lastViewDispayed.xtype === 'conditionAssessmentEditPanel') {
            // add form is modal and it is not the currentView in the navigationBar
            editView = ConditionAssessment.util.Ui.lastViewDispayed;
        }
        conditionAssessmentRecord = editView.getRecord();

        document.activeElement.blur();

        //Disable autoSync to prevent duplicate update statements from being generated.
        conditionAssessmentStore.setAutoSync(false);
        me.addPhotoToConditionAssessmentRecord(conditionAssessmentRecord, imageData);
        conditionAssessmentStore.setAutoSync(true);

        if (documentListView) {
            documentListView.setRecord(conditionAssessmentRecord);
        }

        // If this is an update view we need to save the record
        if (Ext.isFunction(editView.getIsCreateView) && editView.getIsCreateView()) {
            editView.applyPhotoData();
        } else {
            conditionAssessmentStore.sync();
        }

        cameraPanel.onClosePanel();
    },

    addPhotoToConditionAssessmentRecord: function (conditionAssessmentRecord, imageData) {
        var me = this,
            documentField = conditionAssessmentRecord.getAvailableDocumentField(conditionAssessmentRecord);

        if (documentField === null) {
            Ext.Msg.alert(me.getDocumentFieldsUsedTitle(), me.getDocumentFieldsUsedMessage());
        } else {
            conditionAssessmentRecord.setDocumentFieldData(documentField, imageData);
        }
    },

    /**
     * Downloads documents from the Web Central server and saves the document to the device file system.
     * This function is only used if the {@link CondtionAssessment.store.ConditionAssessments#includeDocumentDataInSync}
     * property is set to false.
     * @param documentListItem
     * @param recordId
     * @param documentFileName
     * @param documentFieldId
     * @param fieldName
     */
    onDownloadDocument: function (documentListItem, recordId, documentFileName, documentFieldId, fieldName) {
        var conditionAssessmentStore = Ext.getStore('conditionAssessmentsStore'),
            conditionAssessmentRecord = conditionAssessmentStore.findRecord('id', recordId),
            primaryKey = {
                activity_log_id: conditionAssessmentRecord.get('activity_log_id')
            };

        DocumentManager.downloadOnDemandDocument('activity_log', fieldName, documentFileName, primaryKey)
            .then(function () {
                documentListItem.setDocumentIsDownloaded(true);
            });
    }


});