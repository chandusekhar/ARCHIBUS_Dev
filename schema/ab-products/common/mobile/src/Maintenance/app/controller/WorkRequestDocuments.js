/**
 * Handles events generated by the Maintenance document feature
 * @author Jeff Martin
 * @since 21.1
 */
Ext.define('Maintenance.controller.WorkRequestDocuments', {
    extend: 'Ext.app.Controller',

    requires: ['Common.document.DocumentManager'],

    config: {
        refs: {
            mainView: 'mainview',
            workRequestView: 'workRequestPanel',
            approveFromView: 'approveFormPanel',
            scheduleFormView: 'scheduleFormPanel',
            estimateFormView: 'estimateFormPanel',
            updateFormView: 'updateFormPanel',
            documentViewItem: 'documentItem',
            cameraPanel: 'camera',
            documentListView: 'workRequestDocumentList',
            //KB#3050980 Add Document item ref
            referenceDcumentViewItem: 'workRequestReferencesList documentItem'

        },
        control: {
            cameraPanel: {
                attach: 'onAttachPhoto'
            },
            documentViewItem: {
                displaydocument: 'onDisplayDocument',
                deleteDocument: 'onDeleteDocument'
            },
            //KB#3050980 Reference document display event controller
            referenceDcumentViewItem: {
                displaydocument: 'onDisplayReferenceDocument'
            },

            'button[action=showURL]': {
                tap: 'onTapShowURL'
            }
        },

        documentFieldsUsedMessage: LocaleManager.getLocalizedString('All Work Request document fields are in use.<br>The photo cannot be attached to the Work Request',
            'Maintenance.controller.WorkRequestDocuments'),

        documentFieldsUsedTitle: LocaleManager.getLocalizedString('Documents', 'Maintenance.controller.WorkRequestDocuments'),
        documentDeleteMessage: LocaleManager.getLocalizedString('This action will remove the document. Do you want to proceed?', 'Maintenance.controller.WorkRequestDocuments')
    },

    onDisplayDocument: function (mobileWrId, fileName, documentFieldId, fieldName) {
        var me = this,
            workRequestStore = Ext.getStore('workRequestsStore'),
            workRequestRecord = workRequestStore.findRecord('id', mobileWrId),
            documentField = fieldName + '_contents',
            documentData;

        if (workRequestRecord) {
            documentData = workRequestRecord.get(documentField);
            DocumentManager.displayDocumentOrImage(documentData, fileName, me.getCameraPanel());
        }
    },
    /**
     * KB#3050980 Display Reference Document
     */
    onDisplayReferenceDocument: function (mobileDocId, fileName, documentFieldId, fieldName) {
        var me = this,
            workRequestStore = Ext.getStore('referenceStore'),
            workRequestRecord = workRequestStore.findRecord('mob_doc_id', mobileDocId),
            documentField = fieldName + '_contents',
            documentData;

        if (workRequestRecord) {
            documentData = workRequestRecord.get(documentField);
            DocumentManager.displayDocumentOrImage(documentData, fileName, me.getCameraPanel());
        }
    },
    onDeleteDocument: function (recordId, documentFieldId, fieldName, documentData, documentListItem) {
        var me = this,
            store = Ext.getStore('workRequestsStore'),
            record = store.findRecord('id', recordId);

        if (record) {
            Ext.Msg.confirm(me.getDocumentFieldsUsedTitle(), me.getDocumentDeleteMessage(), function (buttonId) {
                if (buttonId === 'yes') {
                    documentListItem.setDocumentData(documentListItem.MARK_DELETED_TEXT);
                    me.doDeleteDocument(store, record, fieldName);
                }
            });
        }
    },

    doDeleteDocument: function (store, record, fieldName) {
        var me = this;
        // if record was not synchronized yet it can be removed immediately
        if (record.get(fieldName + '_isnew')) {
            me.clearDocumentContents(record, fieldName);
            me.getDocumentListView().processDocumentFields(record);
        } else {
            return DocumentManager.deleteDocumentFile(store, record, fieldName)
                .then(function () {
                    return DocumentManager.markDocumentDeleted(store, record, fieldName);
                })
                .then(function (record) {
                    me.getDocumentListView().processDocumentFields(record);
                })
                .then(null, function (error) {
                    Log.log(error, 'error');
                    Ext.Msg.alert('', error);
                });
        }
    },

    clearDocumentContents: function (record, documentField) {
        record.set(documentField, null);
        record.set(documentField + '_contents', null);
        record.set(documentField + '_isnew', false);
        record.set(documentField + '_file', '');
    },

    /**
     * Saves the photo data in the Work Request record.
     * @param cameraPanel
     */
    onAttachPhoto: function (cameraPanel) {
        var me = this,
            imageData = cameraPanel.getImageData(),
            viewStack = me.getMainView().getNavigationBar().getViewStack(),
            form,
            workRequestRecord,
            workRequestStore = Ext.getStore('workRequestsStore'),
            documentListView = me.getDocumentListView();

        if(viewStack.length>0){
            form = viewStack[viewStack.length - 1];
        }else{
            form = me.getWorkRequestView();
        }

        workRequestRecord = form.getRecord();

        workRequestStore.setAutoSync(false);
        me.addPhotoToWorkRequestRecord(workRequestRecord, imageData);
        if (documentListView) {
            documentListView.setRecord(workRequestRecord);
        }
        workRequestStore.setAutoSync(true);

        // If this is an update view we need to save the work request record
        if (NavigationUtil.isWorkRequestEditView(form) && form.getIsCreateView()) {
            form.applyPhotoData();
        } else {
            workRequestStore.sync();
        }

        cameraPanel.onClosePanel();
    },

    addPhotoToWorkRequestRecord: function (workRequestRecord, imageData) {
        var me = this,
            documentField = workRequestRecord.getAvailableDocumentField();

        if (documentField === null) {
            Ext.Msg.alert(me.getDocumentFieldsUsedTitle(), me.getDocumentFieldsUsedMessage());
        } else {
            workRequestRecord.setDocumentFieldData(documentField, imageData);
        }
    }
});