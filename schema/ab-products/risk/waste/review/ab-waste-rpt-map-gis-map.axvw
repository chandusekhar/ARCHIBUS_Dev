<view version="2.0">
    <!-- esri js library (required) -->
    <js url="//js.arcgis.com/3.9/"/>
    <css url="//js.arcgis.com/3.9/js/esri/css/esri.css" />
    <!-- ab core map control (required) -->
    <js file="ab-arcgis-map.js"/>
    <css file="ab-arcgis-map.css"/>
    <js file="colorbrewer.js"/>

	<js file="ab-waste-rpt-map-gis-map.js"/>

	<message name="not_geocoded" translatable="true">You have selected at least one item that is not geocoded. Non-geocoded items will not be shown on the map.</message>
    <message name="makerSize" translatable="true">Marker Size by</message>
	<message name="makerColor" translatable="true">Marker Color by</message>
	
	<message name="option_solid_waste_generated" translatable="true">Total solid waste generated</message>
	<message name="option_liquid_waste_generated" translatable="true">Total liquid waste generated</message>
	<message name="option_gas_waste_generate" translatable="true">Total gas waste generated</message>
	<message name="option_solid_waste_accumulated" translatable="true">Total solid waste accumulated</message>
	<message name="option_liquid_waste_accumulated" translatable="true">Total liquid waste accumulated</message>
	<message name="option_gas_waste_accumulated" translatable="true">Total gas waste accumulated</message>
	<message name="option_solid_mass_waste_stored" translatable="true">Total solid waste stored</message>
	<message name="option_liquid_volume_waste_stored" translatable="true">Total liquid waste stored</message>
	<message name="option_gas_volume_waste_stored" translatable="true">Total gas waste stored</message>
	<message name="option_solid_mass_waste_disposed" translatable="true">Total solid mass waste disposed</message>
	<message name="option_liquid_volume_waste_disposed" translatable="true">Total liquid volume waste disposed</message>
	<message name="option_gas_volume_waste_disposed" translatable="true">Total gas volume waste disposed</message>
	<message name="option_stored_status" translatable="true">Hazardous waste storage status</message>
    <message name="labelShowDetails" translatable="true">Show Details</message>
	
	<dataSource id="dsBuilding">
		<table name="site" role="main"/>
		<field table="site" name="site_id"/>
		<field table="site" name="name"/>
        <field name="lat" dataType="number" decimals="6">
            <title>lat</title>
            <sql dialect="generic">
                (SELECT CASE WHEN site.lat IS NOT NULL THEN site.lat ELSE AVG(bl.lat) END from bl where bl.site_id=site.site_id AND bl.lat IS NOT NULL AND bl.lon IS NOT NULL)
            </sql>
            
        </field><field name="lon" dataType="number" decimals="6">
            <title>lon</title>
            <sql dialect="generic">
                (SELECT CASE WHEN site.lon IS NOT NULL THEN site.lon ELSE AVG(bl.lon) END from bl where bl.site_id=site.site_id AND bl.lat IS NOT NULL AND bl.lon IS NOT NULL)
            </sql>
           
        </field>
		<field name="total_solid_generated" dataType="number" decimals="4">
			<title>Total solid waste generated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='G' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='G' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_liquid_generated" dataType="number" decimals="4">
			<title>Total liquid waste generated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='G' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='G' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_gas_generated" dataType="number" decimals="4">
			<title>Total gas waste generated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='G' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='G' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_solid_accumulated" dataType="number" decimals="4">
			<title>Total solid waste accumulated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='A' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='A' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_liquid_accumulated" dataType="number" decimals="4">
			<title>Total liquid waste accumulated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='A' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='A' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_gas_accumulated" dataType="number" decimals="4">
			<title>Total gas waste accumulated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='A' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='A' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_solid_stored" dataType="number" decimals="4">
			<title>Total solid mass waste stored</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='S' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='S' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_liquid_stored" dataType="number" decimals="4">
			<title>Total liquid volume waste stored</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='S' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile  ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='S' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_gas_stored" dataType="number" decimals="4">
			<title>Total gas volume waste stored</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='S' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='S' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_solid_disposed" dataType="number" decimals="4">
			<title>Total solid mass waste disposed</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='D' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='D' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_liquid_disposed" dataType="number" decimals="4">
			<title>Total liquid volume waste disposed</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='D' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='D' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_gas_disposed" dataType="number" decimals="4">
			<title>Total gas volume waste disposed</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.site_id = site.site_id and waste_out.status='D' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.site_id = site.site_id and waste_out.status='D' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="hazardous_waste_storage_level" dataType="verbatim">
			<title>Hazardous Waste Storage Status</title>
			<sql dialect="generic">
			   (case when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.site_id = site.site_id 
			   and (waste_out.date_start IS NULL 
				or (waste_generators.type='L' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_large_gen']})
				or (waste_generators.type='S' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_small_gen']})
				or ((waste_generators.type IS NULL OR  waste_generators.type NOT IN ('L','S')) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_na_gen']})
			   )) then 'Exceeds Limit'
			   when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.site_id = site.site_id and (
			      (waste_generators.type='L' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_large_gen']}-${parameters['haz_days_deadline']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_large_gen']})
			   or (waste_generators.type='S' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_small_gen']}-${parameters['haz_days_deadline']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_small_gen']})
			   or ((waste_generators.type IS NULL OR  waste_generators.type NOT IN ('L','S')) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_na_gen']}-${parameters['haz_days_deadline']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_na_gen']})
			   )) then 'Nearing Limit'
			   when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.site_id = site.site_id ) then 'Within Limit'
			   else 'No Status' end)
			</sql>
			<sql dialect="sqlserver">
			   (case when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.site_id = site.site_id 
			   and (waste_out.date_start IS NULL 
				or (waste_generators.type='L' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_large_gen_mssql']})
				or (waste_generators.type='S' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_small_gen_mssql']})
				or ((waste_generators.type IS NULL OR  waste_generators.type NOT IN ('L','S')) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_na_gen_mssql']})
			   )) then 'Exceeds Limit'
			   when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.site_id = site.site_id and (
			      (waste_generators.type='L' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_large_gen_mssql']}-${parameters['haz_days_deadline_mssql']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_large_gen_mssql']})
			   or (waste_generators.type='S' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_small_gen_mssql']}-${parameters['haz_days_deadline_mssql']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_small_gen_mssql']})
			   or ((waste_generators.type IS NULL OR  waste_generators.type NOT IN ('L','S')) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_na_gen_mssql']}-${parameters['haz_days_deadline_mssql']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_na_gen_mssql']})
			   )) then 'Nearing Limit'
			   when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.site_id = site.site_id ) then 'Within Limit'
			   else 'No Status' end)
			</sql>
		</field>
		
		
		<field table="site" name="city_id"/>
		<field table="site" name="ctry_id"/>
		<field table="site" name="regn_id"/>
		<field table="site" name="state_id"/>
		<parameter name="consoleRestriction" dataType="verbatim" value="1=1"/>
		<parameter name="reportquantity" dataType="verbatim" value="(waste_out.quantity* (select bill_unit.conversion_factor from bill_unit where bill_unit.bill_unit_id=waste_out.units  and bill_unit.bill_type_id=waste_out.units_type ) /
                case when 
                    ( select bu.conversion_factor from bill_unit  ${sql.as}  bu ,bill_type ${sql.as}  bt where  bt.bill_type_id = bu.bill_type_id 
                     and bt.bill_type_id='REPORTS '${sql.concat}waste_out.units_type and bt.activity_id = 'AbRiskWasteMgmt' and bu.is_dflt=1)
                is null 
                then 
                    (select bu.conversion_factor from bill_unit ${sql.as}  bu where  
                        bu.bill_unit_id =( select min(bu1.bill_unit_id)  from bill_unit ${sql.as}  bu1,bill_type ${sql.as}  bt1 where  bt1.bill_type_id =    bu1.bill_type_id and bt1.activity_id = 'AbRiskWasteMgmt'  and bt1.bill_type_id='REPORTS '${sql.concat}waste_out.units_type )
                        and bu.bill_type_id='REPORTS '${sql.concat}waste_out.units_type 
                    )
                else
                    ( select bu.conversion_factor from bill_unit  ${sql.as}  bu ,bill_type ${sql.as}  bt where  bt.bill_type_id = bu.bill_type_id 
                     and bt.bill_type_id='REPORTS '${sql.concat}waste_out.units_type and bt.activity_id = 'AbRiskWasteMgmt' and bu.is_dflt=1)
                end
            )"/>
		<parameter name="reportquantityMSSQL" dataType="verbatim" value="(waste_out.quantity* billUnit.conversion_factor /
                case when defaultReportBillUnit.conversion_factor is null 
                then reportBillUnit.conversion_factor
                else defaultReportBillUnit.conversion_factor
                end
            )"/>
		
		<parameter name="crossApplyMSSQL" dataType="verbatim" value=" cross apply (select bill_unit.conversion_factor from bill_unit where bill_unit.bill_unit_id=waste_out.units  and bill_unit.bill_type_id=waste_out.units_type ) billUnit
		 cross apply ( select bu.conversion_factor from bill_unit  ${sql.as}  bu ,bill_type ${sql.as}  bt where  bt.bill_type_id = bu.bill_type_id 
                     and bt.bill_type_id='REPORTS '${sql.concat}waste_out.units_type and bt.activity_id = 'AbRiskWasteMgmt' and bu.is_dflt=1) defaultReportBillUnit
		 cross apply (select bu.conversion_factor from bill_unit ${sql.as}  bu where  
                        bu.bill_unit_id =( select min(bu1.bill_unit_id)  from bill_unit ${sql.as}  bu1,bill_type ${sql.as}  bt1 where  bt1.bill_type_id =    bu1.bill_type_id and bt1.activity_id = 'AbRiskWasteMgmt'  and bt1.bill_type_id='REPORTS '${sql.concat}waste_out.units_type )
                        and bu.bill_type_id='REPORTS '${sql.concat}waste_out.units_type 
                    ) reportBillUnit "/>		
        <parameter name="haz_days_large_gen" dataType="verbatim" value="(select afm_activity_params.param_value from afm_activity_params where afm_activity_params.param_id = 'haz_days_large_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_small_gen" dataType="verbatim" value="(select afm_activity_params.param_value from afm_activity_params where afm_activity_params.param_id = 'haz_days_small_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_na_gen" dataType="verbatim" value="(select afm_activity_params.param_value from afm_activity_params where afm_activity_params.param_id = 'haz_days_na_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_deadline" dataType="verbatim" value="(select afm_activity_params.param_value from afm_activity_params where afm_activity_params.param_id = 'haz_days_deadline' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
	    
        <parameter name="haz_days_large_gen_mssql" dataType="verbatim" value="(select cast(afm_activity_params.param_value as int) from afm_activity_params where afm_activity_params.param_id = 'haz_days_large_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_small_gen_mssql" dataType="verbatim" value="(select cast(afm_activity_params.param_value as int) from afm_activity_params where afm_activity_params.param_id = 'haz_days_small_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_na_gen_mssql" dataType="verbatim" value="(select cast(afm_activity_params.param_value as int) from afm_activity_params where afm_activity_params.param_id = 'haz_days_na_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_deadline_mssql" dataType="verbatim" value="(select cast(afm_activity_params.param_value as int) from afm_activity_params where afm_activity_params.param_id = 'haz_days_deadline' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="waste_outJoinGeneratorsJoinProfile" dataType="verbatim" value=" waste_out LEFT OUTER JOIN waste_generators ON waste_out.generator_id=waste_generators.generator_id LEFT OUTER JOIN waste_profiles ON waste_out.waste_profile=waste_profiles.waste_profile "/>
	</dataSource>
	
	<dataSource id="dsStorageLocation">
		<table name="waste_areas"/>
		<field table="waste_areas" name="storage_location"/>
		<field table="waste_areas" name="site_id"/>
		<field name="total_solid_generated" dataType="number" decimals="4">
			<title>Total solid waste generated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='G' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile  ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='G' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_liquid_generated" dataType="number" decimals="4">
			<title>Total liquid waste generated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='G' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='G' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_gas_generated" dataType="number" decimals="4">
			<title>Total gas waste generated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='G' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='G' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_solid_accumulated" dataType="number" decimals="4">
			<title>Total solid waste accumulated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='A' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='A' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_liquid_accumulated" dataType="number" decimals="4">
			<title>Total liquid waste accumulated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='A' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='A' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_gas_accumulated" dataType="number" decimals="4">
			<title>Total gas waste accumulated</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='A' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='A' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_solid_stored" dataType="number" decimals="4">
			<title>Total solid mass waste stored</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='S' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='S' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_liquid_stored" dataType="number" decimals="4">
			<title>Total liquid volume waste stored</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='S' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='S' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_gas_stored" dataType="number" decimals="4">
			<title>Total gas volume waste stored</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='S' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='S' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_solid_disposed" dataType="number" decimals="4">
			<title>Total solid mass waste disposed</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='D' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='D' and waste_out.units_type = 'MASS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_liquid_disposed" dataType="number" decimals="4">
			<title>Total liquid volume waste disposed</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='D' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='D' and waste_out.units_type = 'VOLUME-LIQUID' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="total_gas_disposed" dataType="number" decimals="4">
			<title>Total gas volume waste disposed</title>
			<sql dialect="generic">(SELECT case when sum(${parameters['reportquantity']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantity']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='D' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
			<sql dialect="sqlserver">(SELECT case when sum(${parameters['reportquantityMSSQL']}) IS NULL THEN 0 ELSE sum(${parameters['reportquantityMSSQL']}) END from waste_out LEFT JOIN  waste_profiles on waste_profiles.waste_profile = waste_out.waste_profile ${parameters['crossApplyMSSQL']} WHERE waste_out.storage_location = waste_areas.storage_location and waste_out.status='D' and waste_out.units_type = 'VOLUME-GAS' and ${parameters['consoleRestriction']})</sql>
		</field>
		<field name="hazardous_waste_storage_level" dataType="verbatim">
			<title>Hazardous Waste Storage Status</title>
			<sql dialect="generic">
			   (case when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.storage_location = waste_areas.storage_location 
			   and (waste_out.date_start IS NULL 
				or (waste_generators.type='L' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_large_gen']})
				or (waste_generators.type='S' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_small_gen']})
				or ((waste_generators.type IS NULL OR  waste_generators.type NOT IN ('L','S')) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_na_gen']})
			   )) then 'Exceeds Limit'
			   when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.storage_location = waste_areas.storage_location and (
			      (waste_generators.type='L' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_large_gen']}-${parameters['haz_days_deadline']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_large_gen']})
			   or (waste_generators.type='S' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_small_gen']}-${parameters['haz_days_deadline']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_small_gen']})
			   or ((waste_generators.type IS NULL OR  waste_generators.type NOT IN ('L','S')) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_na_gen']}-${parameters['haz_days_deadline']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_na_gen']})
			   )) then 'Nearing Limit'
			   when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.storage_location = waste_areas.storage_location ) then 'Within Limit'
			   else 'No Status' end)
			</sql>
			<sql dialect="sqlserver">
			   (case when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.storage_location = waste_areas.storage_location 
			   and (waste_out.date_start IS NULL 
				or (waste_generators.type='L' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_large_gen_mssql']})
				or (waste_generators.type='S' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_small_gen_mssql']})
				or ((waste_generators.type IS NULL OR  waste_generators.type NOT IN ('L','S')) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; ${parameters['haz_days_na_gen_mssql']})
			   )) then 'Exceeds Limit'
			   when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.storage_location = waste_areas.storage_location and (
			      (waste_generators.type='L' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_large_gen_mssql']}-${parameters['haz_days_deadline_mssql']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_large_gen_mssql']})
			   or (waste_generators.type='S' and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_small_gen_mssql']}-${parameters['haz_days_deadline_mssql']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_small_gen_mssql']})
			   or ((waste_generators.type IS NULL OR  waste_generators.type NOT IN ('L','S')) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &gt; (${parameters['haz_days_na_gen_mssql']}-${parameters['haz_days_deadline_mssql']}) and ${sql.daysBeforeCurrentDate('waste_out.date_start')} &lt;= ${parameters['haz_days_na_gen_mssql']})
			   )) then 'Nearing Limit'
			   when exists(select 1 from ${parameters['waste_outJoinGeneratorsJoinProfile']} where waste_out.status='S' AND waste_profiles.waste_type='H' and waste_out.storage_location = waste_areas.storage_location ) then 'Within Limit'
			   else 'No Status' end)
			</sql>
		</field>
		<field table="waste_areas" name="lat"/>
		<field table="waste_areas" name="lon"/>
		<parameter name="consoleRestriction" dataType="verbatim" value="1=1"/>
		<parameter name="reportquantity" dataType="verbatim" value="(waste_out.quantity* (select bill_unit.conversion_factor from bill_unit where bill_unit.bill_unit_id=waste_out.units  and bill_unit.bill_type_id=waste_out.units_type ) /
                case when 
                    ( select bu.conversion_factor from bill_unit  ${sql.as}  bu ,bill_type ${sql.as}  bt where  bt.bill_type_id = bu.bill_type_id 
                     and bt.bill_type_id='REPORTS '${sql.concat}waste_out.units_type and bt.activity_id = 'AbRiskWasteMgmt' and bu.is_dflt=1)
                is null 
                then 
                    (select bu.conversion_factor from bill_unit ${sql.as}  bu where  
                        bu.bill_unit_id =( select min(bu1.bill_unit_id)  from bill_unit ${sql.as}  bu1,bill_type ${sql.as}  bt1 where  bt1.bill_type_id =    bu1.bill_type_id and bt1.activity_id = 'AbRiskWasteMgmt'  and bt1.bill_type_id='REPORTS '${sql.concat}waste_out.units_type )
                        and bu.bill_type_id='REPORTS '${sql.concat}waste_out.units_type 
                    )
                else
                    ( select bu.conversion_factor from bill_unit  ${sql.as}  bu ,bill_type ${sql.as}  bt where  bt.bill_type_id = bu.bill_type_id 
                     and bt.bill_type_id='REPORTS '${sql.concat}waste_out.units_type and bt.activity_id = 'AbRiskWasteMgmt' and bu.is_dflt=1)
                end
            )"/>
		<parameter name="reportquantityMSSQL" dataType="verbatim" value="(waste_out.quantity* billUnit.conversion_factor /
                case when defaultReportBillUnit.conversion_factor is null 
                then reportBillUnit.conversion_factor
                else defaultReportBillUnit.conversion_factor
                end
            )"/>
		
		<parameter name="crossApplyMSSQL" dataType="verbatim" value=" cross apply (select bill_unit.conversion_factor from bill_unit where bill_unit.bill_unit_id=waste_out.units  and bill_unit.bill_type_id=waste_out.units_type ) billUnit
		 cross apply ( select bu.conversion_factor from bill_unit  ${sql.as}  bu ,bill_type ${sql.as}  bt where  bt.bill_type_id = bu.bill_type_id 
                     and bt.bill_type_id='REPORTS '${sql.concat}waste_out.units_type and bt.activity_id = 'AbRiskWasteMgmt' and bu.is_dflt=1) defaultReportBillUnit
		 cross apply (select bu.conversion_factor from bill_unit ${sql.as}  bu where  
                        bu.bill_unit_id =( select min(bu1.bill_unit_id)  from bill_unit ${sql.as}  bu1,bill_type ${sql.as}  bt1 where  bt1.bill_type_id =    bu1.bill_type_id and bt1.activity_id = 'AbRiskWasteMgmt'  and bt1.bill_type_id='REPORTS '${sql.concat}waste_out.units_type )
                        and bu.bill_type_id='REPORTS '${sql.concat}waste_out.units_type 
                    ) reportBillUnit "/>
        <parameter name="haz_days_large_gen" dataType="verbatim" value="(select afm_activity_params.param_value from afm_activity_params where afm_activity_params.param_id = 'haz_days_large_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_small_gen" dataType="verbatim" value="(select afm_activity_params.param_value from afm_activity_params where afm_activity_params.param_id = 'haz_days_small_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_na_gen" dataType="verbatim" value="(select afm_activity_params.param_value from afm_activity_params where afm_activity_params.param_id = 'haz_days_na_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_deadline" dataType="verbatim" value="(select afm_activity_params.param_value from afm_activity_params where afm_activity_params.param_id = 'haz_days_deadline' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
	    
        <parameter name="haz_days_large_gen_mssql" dataType="verbatim" value="(select cast(afm_activity_params.param_value as int) from afm_activity_params where afm_activity_params.param_id = 'haz_days_large_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_small_gen_mssql" dataType="verbatim" value="(select cast(afm_activity_params.param_value as int) from afm_activity_params where afm_activity_params.param_id = 'haz_days_small_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_na_gen_mssql" dataType="verbatim" value="(select cast(afm_activity_params.param_value as int) from afm_activity_params where afm_activity_params.param_id = 'haz_days_na_gen' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>
        <parameter name="haz_days_deadline_mssql" dataType="verbatim" value="(select cast(afm_activity_params.param_value as int) from afm_activity_params where afm_activity_params.param_id = 'haz_days_deadline' and afm_activity_params.activity_id = 'AbRiskWasteMgmt' )"/>        
        <parameter name="waste_outJoinGeneratorsJoinProfile" dataType="verbatim" value=" waste_out LEFT OUTER JOIN waste_generators ON waste_out.generator_id=waste_generators.generator_id LEFT OUTER JOIN waste_profiles ON waste_out.waste_profile=waste_profiles.waste_profile "/>
	</dataSource>

	<panel type="html" id="htmlMap" dataSource="dsBuilding">
	    <title></title>
    	<action id="basemapLayerMenu" type="menu" imageName="/schema/ab-core/graphics/icons/view/ab-arcgis-basemap-16.png">
      		<tooltip translatable="true">Basemaps</tooltip>
    	</action>		
		<html>
			<div id="objMap">
			</div>
		</html>
	</panel>
	
	<dataSource id="unitDS">
        <table name="bill_unit" role="main" />
        <table name="bill_type" role="standard" />
        <field table="bill_unit" name="bill_type_id" />
        <field table="bill_type" name="activity_id" />
        <field table="bill_unit" name="bill_unit_id" />
        <field table="bill_unit" name="is_dflt" />
        <restriction type="sql" sql="bill_unit.is_dflt =1 and bill_type.activity_id = 'AbRiskWasteMgmt'"/>
    </dataSource>
</view>