<view version="2.0">
    <title>Incidents Log</title>
    <js file="ab-ehs-rpt-incidents-log.js"/>
    <js file="ab-ehs-rpt-common.js"/>
    <js file="ab-pdf-livecycle-command.js"/>
    
    <!-- Messages -->
    <message name="err_incident_for_dates" translatable="true">'Incident Date To' must be greater than 'Incident Date From'.</message>
    
    <!-- Layout -->
    <layout type="borderLayout" id="mainLayout">
        <north id="filterPos" initialSize="180" split="true"/>
        <center id="reportPos" autoScroll="true"/>
    </layout>
    
    
    <!-- Filter -->
    <dataSource id="abEhsIncidentsLogFilter_ds">
        <table name="ehs_incidents" role="main"/>
        <table name="bl" role="standard"/>
        <field name="incident_id" table="ehs_incidents"/>
        <field name="incident_type" table="ehs_incidents"/>
        <field name="date_incident" table="ehs_incidents"/>
        <field name="safety_officer" table="ehs_incidents"/>
        <field name="site_id" table="ehs_incidents"/>
        <field name="pr_id" table="ehs_incidents"/>
        <field name="bl_id" table="ehs_incidents"/>
        <field name="fl_id" table="ehs_incidents"/>
        <field name="em_id_affected" table="ehs_incidents"/>
        <field name="cause_category_id" table="ehs_incidents"/>
        <field name="injury_category_id" table="ehs_incidents"/>
        <field name="ctry_id" table="bl"/>
    </dataSource>
    
    <panel type="console" id="abEhsIncidentsLogFilter" dataSource="abEhsIncidentsLogFilter_ds" columns="3" layoutRegion="filterPos">
        <title>Filter</title>
        <action id="filter">
            <title>Show</title>
        </action>
        <action id="clear">
            <title>Clear</title>
            <command type="clearPanel" panelId="abEhsIncidentsLogFilter"/>
        </action>
        <field name="incident_type" table="ehs_incidents" selectValueType="multiple"/>
        <field name="incident_id" table="ehs_incidents">
            <action>
                <title translatable="false">...</title>
                <tooltip>Select Value</tooltip>
                <command type="selectValue"
                    selectValueType="grid"
                    fieldNames="ehs_incidents.incident_id"
                    selectFieldNames="ehs_incidents.incident_id"
                    visibleFieldNames="ehs_incidents.incident_id,ehs_incidents.incident_type,ehs_incidents.date_incident,ehs_incidents.em_id_affected,ehs_incidents.description"/>
            </action>
        </field>
        <field name="em_id_affected" table="ehs_incidents"/>
        <field alias="vf_date_incident_from" name="date_incident">
            <title>Incident Date From</title>
        </field>
        
        <field alias="vf_date_incident_to" name="date_incident">
            <title>Incident Date To</title>
        </field>
        <field name="safety_officer" table="ehs_incidents"/>
        <field name="site_id" table="ehs_incidents" selectValueType="multiple"/>
        <field name="pr_id" table="ehs_incidents" selectValueType="multiple"/>
        <field name="bl_id" table="ehs_incidents" selectValueType="multiple"/>
        <field name="fl_id" table="ehs_incidents" selectValueType="multiple"/>
        <field name="cause_category_id" table="ehs_incidents"/>
        <field name="injury_category_id" table="ehs_incidents"/>
        <field>
            <html>
                <input id="onlyEmployeesCheckbox" type="checkbox" value=""/>
                <span id="onlyEmployeesLabel" translatable="true" class="label">Show only employees</span>
            </html>
        </field> 
    </panel>
    
    
    <!--  Report -->
    <dataSource id="abEhsIncidentsLogReport_ds">
        <table name="ehs_incidents"/>
        <field name="parent_incident_id"/>
        <field name="incident_id"/>
        <field name="vf_affected_person" dataType="text">
            <sql dialect="generic">
                (CASE
                    WHEN ehs_incidents.em_id_affected IS NOT NULL THEN ehs_incidents.em_id_affected 
                    WHEN ehs_incidents.contact_id IS NOT NULL THEN ehs_incidents.contact_id 
                    WHEN ehs_incidents.non_em_name IS NOT NULL THEN ehs_incidents.non_em_name 
                END)
            </sql>
        </field>
        <field name="vf_job_title" dataType="text">
            <sql dialect="generic">
                (CASE 
                    WHEN ehs_incidents.em_id_affected IS NOT NULL
                        THEN (SELECT em.em_title FROM em WHERE em.em_id = ehs_incidents.em_id_affected) 
                    ELSE '' 
                 END)
            </sql>
        </field>
        <field name="date_incident"/>
        <field name="vf_year" dataType="text">
            <sql dialect="generic">SUBSTRING(${sql.yearOf('date_incident')},3,4)</sql>
            <sql dialect="oracle">SUBSTR(${sql.yearOf('date_incident')},3,4)</sql>
        </field>
        <field name="vf_date_incident" dataType="text">
            <sql dialect="generic">
                    ((CASE WHEN DATEPART(month, (date_incident))/10 &lt; 1 THEN '0' ELSE '' END)
                    ${sql.concat} TRIM(STR(DATEPART(month, (date_incident))))
                    ${sql.concat} '/'
                    ${sql.concat} (CASE WHEN DATEPART(day, (date_incident))/10 &lt; 1 THEN '0' ELSE '' END)
                    ${sql.concat} TRIM(STR(DATEPART(day, (date_incident)))))
            </sql>
            <sql dialect="oracle">
                (TO_CHAR((date_incident), 'MM/DD'))
            </sql>
            <sql dialect="sqlserver">
                ((CASE WHEN DATEPART(month, (date_incident))/10 &lt; 1 THEN '0' ELSE '' END)
                ${sql.concat} LTRIM(RTRIM(STR(DATEPART(month, (date_incident)))))
                ${sql.concat} '/'
                ${sql.concat} (CASE WHEN DATEPART(day, (date_incident))/10 &lt; 1 THEN '0' ELSE '' END)
                ${sql.concat} LTRIM(RTRIM(STR(DATEPART(day, (date_incident))))))
            </sql>
        </field>
        <field name="site_id"/>
        <field name="pr_id"/>
        <field name="bl_id"/>
        <field name="fl_id"/>
        <field name="rm_id"/>
        <field name="vf_location" dataType="text">
            <sql dialect="generic">(pr_id
                                    ${sql.concat} ' / ' ${sql.concat} bl_id
                                    ${sql.concat} ' / ' ${sql.concat} fl_id
                                    ${sql.concat} ' / ' ${sql.concat} rm_id)</sql>
            <sql dialect="sqlserver">(${sql.isNull('RTRIM(pr_id)', '\'\'')}
                                    ${sql.concat} ' / ' ${sql.concat} ${sql.isNull('RTRIM(bl_id)', '\'\'')}
                                    ${sql.concat} ' / ' ${sql.concat} ${sql.isNull('RTRIM(fl_id)', '\'\'')}
                                    ${sql.concat} ' / ' ${sql.concat} ${sql.isNull('RTRIM(rm_id)', '\'\'')})</sql>
        </field>
        <field name="incident_type"/>
        <field name="injury_category_id"/>
        <field name="vf_injury_category_id" dataType="text">
            <sql dialect="generic">
                (CASE WHEN injury_category_id = 'SKIN DISORDERS' THEN '0,1,0,0,0,0'
                    WHEN injury_category_id = 'RESPIRATORY CONDITION' THEN '0,0,1,0,0,0'
                    WHEN injury_category_id = 'POISONING' THEN '0,0,0,1,0,0'
                    WHEN injury_category_id = 'HEARING LOSS' THEN '0,0,0,0,1,0'
                    WHEN injury_category_id = 'OTHER' THEN '0,0,0,0,0,1'
                    ELSE '1,0,0,0,0,0'
                END)
            </sql>
        </field>
        <field name="injury_area_id"/>
        <field name="eq_id"/>
        <field name="vf_injury" dataType="text">
            <sql dialect="generic">(ehs_incidents.incident_type
                                    ${sql.concat} ', ' ${sql.concat} ehs_incidents.injury_category_id
                                    ${sql.concat} ', ' ${sql.concat} ehs_incidents.injury_area_id
                                    ${sql.concat} ', ' ${sql.concat} ehs_incidents.eq_id)</sql>
            <sql dialect="sqlserver">(${sql.isNull('RTRIM(ehs_incidents.incident_type)', '\'\'')}
                                    ${sql.concat} ', ' ${sql.concat} ${sql.isNull('RTRIM(ehs_incidents.injury_category_id)', '\'\'')}
                                    ${sql.concat} ', ' ${sql.concat} ${sql.isNull('RTRIM(ehs_incidents.injury_area_id)', '\'\'')}
                                    ${sql.concat} ', ' ${sql.concat} ${sql.isNull('RTRIM(ehs_incidents.eq_id)', '\'\'')})</sql>
        </field>
        <field name="date_death"/>
        <field name="vf_lost_work_days" showTotals="true" dataType="number" decimals="0">
            <sql dialect="generic">
                (SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                FROM
                    ( SELECT ehs_restrictions.incident_id,
                             (CASE lost_work_days WHEN 0 
                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                    day_type = 'Workday' AND 
                                    date_start &lt;= cal_date AND 
                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                             ELSE lost_work_days
                             END) ${sql.as} number_of_days 
                    FROM ehs_restrictions
                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                ) ${sql.as} a
                WHERE a.incident_id = ehs_incidents.incident_id
                )
            </sql>
        </field>
        <field name="vf_lost_work_days_osha" dataType="number" decimals="0">
            <sql dialect="generic">
                (SELECT (CASE WHEN ${sql.isNull('SUM(number_of_days)', 0)} &gt; 180 THEN 180 ELSE ${sql.isNull('SUM(number_of_days)', 0)} END)
                FROM
                    ( SELECT ehs_restrictions.incident_id,
                             (CASE lost_work_days WHEN 0 
                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                    day_type = 'Workday' AND 
                                    date_start &lt;= cal_date AND 
                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                             ELSE lost_work_days
                             END) ${sql.as} number_of_days 
                    FROM ehs_restrictions
                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                ) ${sql.as} a
                WHERE a.incident_id = ehs_incidents.incident_id
                )
            </sql>
        </field>
        <field name="vf_job_restriction" dataType="number" decimals="0" showTotals="true">
            <sql dialect="generic">
                (SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                FROM
                    ( SELECT ehs_restrictions.incident_id,
                             (CASE lost_work_days WHEN 0 
                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                    day_type = 'Workday' AND 
                                    date_start &lt;= cal_date AND 
                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                             ELSE lost_work_days
                             END) ${sql.as} number_of_days 
                    FROM ehs_restrictions
                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Remained-Restricted'
                ) ${sql.as} a
                WHERE a.incident_id = ehs_incidents.incident_id
                )
            </sql>
        </field>
        <field name="vf_job_restriction_osha" dataType="number" decimals="0">
            <sql dialect="generic">
                (SELECT (CASE WHEN ${sql.isNull('SUM(number_of_days)', 0)} &gt; 180 THEN 180 ELSE ${sql.isNull('SUM(number_of_days)', 0)} END)
                FROM
                    ( SELECT ehs_restrictions.incident_id,
                             (CASE lost_work_days WHEN 0 
                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                    day_type = 'Workday' AND 
                                    date_start &lt;= cal_date AND 
                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                             ELSE lost_work_days
                             END) ${sql.as} number_of_days 
                    FROM ehs_restrictions
                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Remained-Restricted'
                ) ${sql.as} a
                WHERE a.incident_id = ehs_incidents.incident_id
                )
            </sql>
        </field>
        <!-- incidents where ehs_incidents.date_death is not null -->
        <field name="vf_is_death" dataType="number" decimals="0" showTotals="true">
            <sql dialect="generic">
                (CASE WHEN ehs_incidents.date_death IS NOT NULL THEN 1 ELSE 0 END)
            </sql>
        </field>
        <!-- those incidents where ehs_incidents.lost_work_days is not null and greater than 0 
        and ehs_incidents.date_death is null -->
        <field name="vf_is_away_from_work" dataType="number" decimals="0" showTotals="true">
            <sql dialect="generic">
                (CASE WHEN (SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                FROM
                    ( SELECT ehs_restrictions.incident_id,
                             (CASE lost_work_days WHEN 0 
                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                    day_type = 'Workday' AND 
                                    date_start &lt;= cal_date AND 
                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                             ELSE lost_work_days
                             END) ${sql.as} number_of_days 
                    FROM ehs_restrictions
                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                ) ${sql.as} a
                WHERE a.incident_id = ehs_incidents.incident_id
                ) &gt; 0 AND ehs_incidents.date_death IS NULL THEN 1 ELSE 0 END)
            </sql>
        </field>
        <!-- incidents where exist a record in the ehs_restrictions table 
        where ehs_restrictions.incident_id=ehs_incidents.incident_id 
        and ehs_incidents.date_death is null and (lost_work_days is null or lost_work_days= 0) -->
        <field name="vf_is_on_restriction" dataType="number" decimals="0" showTotals="true">
            <sql dialect="generic">
                (CASE WHEN (EXISTS(SELECT ehs_restrictions.restriction_id FROM ehs_restrictions WHERE ehs_restrictions.incident_id = ehs_incidents.incident_id AND NOT restriction_class = 'Remained-Other') 
                            AND ((SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                                FROM
                                    ( SELECT ehs_restrictions.incident_id,
                                             (CASE lost_work_days WHEN 0 
                                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                                    day_type = 'Workday' AND 
                                                    date_start &lt;= cal_date AND 
                                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                             ELSE lost_work_days
                                             END) ${sql.as} number_of_days 
                                    FROM ehs_restrictions
                                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                                ) ${sql.as} a
                                WHERE a.incident_id = ehs_incidents.incident_id
                                )=0)
                            AND ehs_incidents.date_death IS NULL)
                    THEN 1
                ELSE 0 END) 
            </sql>
        </field>
        <!-- none of the previous ones is selected -->
        <field name="vf_is_other" dataType="number" decimals="0" showTotals="true">
            <sql dialect="generic">
                (CASE 
                    WHEN (ehs_incidents.date_death IS NOT NULL OR 
                         ((SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                            FROM
                                ( SELECT ehs_restrictions.incident_id,
                                         (CASE lost_work_days WHEN 0 
                                         THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                                day_type = 'Workday' AND 
                                                date_start &lt;= cal_date AND 
                                                cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                         ELSE lost_work_days
                                         END) ${sql.as} number_of_days 
                                FROM ehs_restrictions
                                WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                            ) ${sql.as} a
                            WHERE a.incident_id = ehs_incidents.incident_id
                            ) &gt; 0 AND ehs_incidents.date_death IS NULL) OR 
                         (EXISTS(SELECT ehs_restrictions.restriction_id FROM ehs_restrictions WHERE ehs_restrictions.incident_id = ehs_incidents.incident_id AND NOT restriction_class = 'Remained-Other') 
                                    AND ((SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                                            FROM
                                                ( SELECT ehs_restrictions.incident_id,
                                                         (CASE lost_work_days WHEN 0 
                                                         THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                                                day_type = 'Workday' AND 
                                                                date_start &lt;= cal_date AND 
                                                                cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                                         ELSE lost_work_days
                                                         END) ${sql.as} number_of_days 
                                                FROM ehs_restrictions
                                                WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                                            ) ${sql.as} a
                                            WHERE a.incident_id = ehs_incidents.incident_id
                                            )=0) 
                                    AND ehs_incidents.date_death IS NULL) ) 
                        THEN 0
                 ELSE 
                    CASE WHEN ((SELECT ${sql.isNull('COUNT(incident_id)', 0)} 
                               FROM( SELECT ehs_restrictions.incident_id
                                FROM ehs_restrictions
                                WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Remained-Other'
                               ) ${sql.as} a
                               WHERE a.incident_id = ehs_incidents.incident_id) > 0) 
                    THEN 1 ELSE 0 
                    END
                END)
            </sql>
        </field>
    </dataSource>
    
    <!-- For OSHA 300A -->
    <dataSource id="abEhsIncidentsLogReport_summary_ds" type="grouping">
        <table name="ehs_incidents"/>
        <sql dialect="generic">
            SELECT
                ehs_incidents.*,
                '' ${sql.as} vf_groupBy_all,
                (CASE WHEN ehs_incidents.date_death IS NOT NULL THEN 1 ELSE 0 END) ${sql.as} vf_is_death,
                (CASE WHEN (SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                    FROM
                        ( SELECT ehs_restrictions.incident_id,
                                 (CASE lost_work_days WHEN 0 
                                 THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                        day_type = 'Workday' AND 
                                        date_start &lt;= cal_date AND 
                                        cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                 ELSE lost_work_days
                                 END) ${sql.as} number_of_days 
                        FROM ehs_restrictions
                        WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                    ) ${sql.as} a
                    WHERE a.incident_id = ehs_incidents.incident_id
                ) &gt; 0 AND ehs_incidents.date_death IS NULL THEN 1 ELSE 0 END) ${sql.as} vf_is_away_from_work,
                
                (CASE WHEN (EXISTS(SELECT ehs_restrictions.restriction_id FROM ehs_restrictions WHERE ehs_restrictions.incident_id = ehs_incidents.incident_id AND NOT restriction_class = 'Remained-Other') 
                            AND ((SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                                FROM
                                    ( SELECT ehs_restrictions.incident_id,
                                             (CASE lost_work_days WHEN 0 
                                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                                    day_type = 'Workday' AND 
                                                    date_start &lt;= cal_date AND 
                                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                             ELSE lost_work_days
                                             END) ${sql.as} number_of_days 
                                    FROM ehs_restrictions
                                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                                ) ${sql.as} a
                                WHERE a.incident_id = ehs_incidents.incident_id
                                )=0)
                            AND ehs_incidents.date_death IS NULL)
                    THEN 1
                ELSE 0 END) ${sql.as} vf_is_on_restriction,
                
                (CASE 
                    WHEN (ehs_incidents.date_death IS NOT NULL OR 
                         ((SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                            FROM
                                ( SELECT ehs_restrictions.incident_id,
                                         (CASE lost_work_days WHEN 0 
                                         THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                                day_type = 'Workday' AND 
                                                date_start &lt;= cal_date AND 
                                                cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                         ELSE lost_work_days
                                         END) ${sql.as} number_of_days 
                                FROM ehs_restrictions
                                WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                            ) ${sql.as} a
                            WHERE a.incident_id = ehs_incidents.incident_id
                            ) &gt; 0 AND ehs_incidents.date_death IS NULL) OR 
                         (EXISTS(SELECT ehs_restrictions.restriction_id FROM ehs_restrictions WHERE ehs_restrictions.incident_id = ehs_incidents.incident_id AND NOT restriction_class = 'Remained-Other') 
                                    AND ((SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                                            FROM
                                                ( SELECT ehs_restrictions.incident_id,
                                                         (CASE lost_work_days WHEN 0 
                                                         THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                                                day_type = 'Workday' AND 
                                                                date_start &lt;= cal_date AND 
                                                                cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                                         ELSE lost_work_days
                                                         END) ${sql.as} number_of_days 
                                                FROM ehs_restrictions
                                                WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                                            ) ${sql.as} a
                                            WHERE a.incident_id = ehs_incidents.incident_id
                                            )=0) 
                                    AND ehs_incidents.date_death IS NULL) ) 
                        THEN 0
                 ELSE 
                    CASE WHEN ((SELECT ${sql.isNull('COUNT(incident_id)', 0)} 
                               FROM( SELECT ehs_restrictions.incident_id
                                FROM ehs_restrictions
                                WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Remained-Other'
                               ) ${sql.as} a
                               WHERE a.incident_id = ehs_incidents.incident_id) > 0) 
                    THEN 1 ELSE 0 
                    END
                 END) ${sql.as} vf_is_other,
                 
                (SELECT (CASE WHEN ${sql.isNull('SUM(number_of_days)', 0)} &gt; 180 THEN 180 ELSE ${sql.isNull('SUM(number_of_days)', 0)} END)
                FROM
                    ( SELECT ehs_restrictions.incident_id,
                             (CASE lost_work_days WHEN 0 
                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                    day_type = 'Workday' AND 
                                    date_start &lt;= cal_date AND 
                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                             ELSE lost_work_days
                             END) ${sql.as} number_of_days 
                    FROM ehs_restrictions
                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                ) ${sql.as} a
                WHERE a.incident_id = ehs_incidents.incident_id
                ) ${sql.as} vf_lost_work_days,
                 
                (SELECT (CASE WHEN ${sql.isNull('SUM(number_of_days)', 0)} &gt; 180 THEN 180 ELSE ${sql.isNull('SUM(number_of_days)', 0)} END)
                FROM
                    ( SELECT ehs_restrictions.incident_id,
                             (CASE lost_work_days WHEN 0 
                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                    day_type = 'Workday' AND 
                                    date_start &lt;= cal_date AND 
                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                             ELSE lost_work_days
                             END) ${sql.as} number_of_days 
                    FROM ehs_restrictions
                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Remained-Restricted'
                ) ${sql.as} a
                WHERE a.incident_id = ehs_incidents.incident_id
                ) ${sql.as} vf_job_restriction,
                
                (CASE WHEN injury_category_id IS NULL OR injury_category_id NOT IN ('SKIN DISORDERS','RESPIRATORY CONDITION','POISONING','HEARING LOSS','OTHER') THEN 1 ELSE 0 END) ${sql.as} vf_injury, 
                (CASE WHEN injury_category_id = 'SKIN DISORDERS' THEN 1 ELSE 0 END) ${sql.as} vf_skin_disorder,
                (CASE WHEN injury_category_id = 'RESPIRATORY CONDITION' THEN 1 ELSE 0 END) ${sql.as} vf_respiratory_condition,
                (CASE WHEN injury_category_id = 'POISONING' THEN 1 ELSE 0 END) ${sql.as} vf_poisoning,
                (CASE WHEN injury_category_id = 'HEARING LOSS' THEN 1 ELSE 0 END) ${sql.as} vf_hearing_loss,
                (CASE WHEN injury_category_id = 'OTHER' THEN 1 ELSE 0 END) ${sql.as} vf_other_illnesses,
                SUBSTRING(${sql.yearOf('date_incident')},3,4)  ${sql.as} vf_year
            FROM ehs_incidents
        </sql>
        <sql dialect="oracle">
            SELECT
                ehs_incidents.*,
                '' ${sql.as} vf_groupBy_all,
                (CASE WHEN ehs_incidents.date_death IS NOT NULL THEN 1 ELSE 0 END) ${sql.as} vf_is_death,
                (CASE WHEN (SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                    FROM
                        ( SELECT ehs_restrictions.incident_id,
                                 (CASE lost_work_days WHEN 0 
                                 THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                        day_type = 'Workday' AND 
                                        date_start &lt;= cal_date AND 
                                        cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                 ELSE lost_work_days
                                 END) ${sql.as} number_of_days 
                        FROM ehs_restrictions
                        WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                    ) ${sql.as} a
                    WHERE a.incident_id = ehs_incidents.incident_id
                ) &gt; 0 AND ehs_incidents.date_death IS NULL THEN 1 ELSE 0 END) ${sql.as} vf_is_away_from_work,
                
                (CASE WHEN (EXISTS(SELECT ehs_restrictions.restriction_id FROM ehs_restrictions WHERE ehs_restrictions.incident_id = ehs_incidents.incident_id AND NOT restriction_class = 'Remained-Other') 
                            AND ((SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                                FROM
                                    ( SELECT ehs_restrictions.incident_id,
                                             (CASE lost_work_days WHEN 0 
                                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                                    day_type = 'Workday' AND 
                                                    date_start &lt;= cal_date AND 
                                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                             ELSE lost_work_days
                                             END) ${sql.as} number_of_days 
                                    FROM ehs_restrictions
                                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                                ) ${sql.as} a
                                WHERE a.incident_id = ehs_incidents.incident_id
                                )=0)
                            AND ehs_incidents.date_death IS NULL)
                    THEN 1
                ELSE 0 END) ${sql.as} vf_is_on_restriction,
                
                (CASE 
                    WHEN (ehs_incidents.date_death IS NOT NULL OR 
                         ((SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                            FROM
                                ( SELECT ehs_restrictions.incident_id,
                                         (CASE lost_work_days WHEN 0 
                                         THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                                day_type = 'Workday' AND 
                                                date_start &lt;= cal_date AND 
                                                cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                         ELSE lost_work_days
                                         END) ${sql.as} number_of_days 
                                FROM ehs_restrictions
                                WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                            ) ${sql.as} a
                            WHERE a.incident_id = ehs_incidents.incident_id
                            ) &gt; 0 AND ehs_incidents.date_death IS NULL) OR 
                         (EXISTS(SELECT ehs_restrictions.restriction_id FROM ehs_restrictions WHERE ehs_restrictions.incident_id = ehs_incidents.incident_id AND NOT restriction_class = 'Remained-Other') 
                                    AND ((SELECT ${sql.isNull('SUM(number_of_days)', 0)}
                                            FROM
                                                ( SELECT ehs_restrictions.incident_id,
                                                         (CASE lost_work_days WHEN 0 
                                                         THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                                                day_type = 'Workday' AND 
                                                                date_start &lt;= cal_date AND 
                                                                cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                                                         ELSE lost_work_days
                                                         END) ${sql.as} number_of_days 
                                                FROM ehs_restrictions
                                                WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                                            ) ${sql.as} a
                                            WHERE a.incident_id = ehs_incidents.incident_id
                                            )=0) 
                                    AND ehs_incidents.date_death IS NULL) ) 
                        THEN 0
                 ELSE
                    CASE WHEN ((SELECT ${sql.isNull('COUNT(incident_id)', 0)} 
                               FROM( SELECT ehs_restrictions.incident_id
                                FROM ehs_restrictions
                                WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Remained-Other'
                               ) ${sql.as} a
                               WHERE a.incident_id = ehs_incidents.incident_id) > 0) 
                    THEN 1 ELSE 0 
                    END 
                 END) ${sql.as} vf_is_other,
                 
                 (SELECT (CASE WHEN ${sql.isNull('SUM(number_of_days)', 0)} &gt; 180 THEN 180 ELSE ${sql.isNull('SUM(number_of_days)', 0)} END)
                FROM
                    ( SELECT ehs_restrictions.incident_id,
                             (CASE lost_work_days WHEN 0 
                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                    day_type = 'Workday' AND 
                                    date_start &lt;= cal_date AND 
                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                             ELSE lost_work_days
                             END) ${sql.as} number_of_days 
                    FROM ehs_restrictions
                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Away'
                ) ${sql.as} a
                WHERE a.incident_id = ehs_incidents.incident_id
                ) ${sql.as} vf_lost_work_days,
                 
                (SELECT (CASE WHEN ${sql.isNull('SUM(number_of_days)', 0)} &gt; 180 THEN 180 ELSE ${sql.isNull('SUM(number_of_days)', 0)} END)
                FROM
                    ( SELECT ehs_restrictions.incident_id,
                             (CASE lost_work_days WHEN 0 
                             THEN (SELECT COUNT(cal_date) FROM afm_cal_dates WHERE 
                                    day_type = 'Workday' AND 
                                    date_start &lt;= cal_date AND 
                                    cal_date &lt;= CASE WHEN date_end IS NULL THEN ${sql.currentDate} ELSE date_end END) 
                             ELSE lost_work_days
                             END) ${sql.as} number_of_days 
                    FROM ehs_restrictions
                    WHERE ehs_restrictions.incident_id IS NOT NULL AND restriction_class = 'Remained-Restricted'
                ) ${sql.as} a
                WHERE a.incident_id = ehs_incidents.incident_id
                ) ${sql.as} vf_job_restriction,
                
                (CASE WHEN injury_category_id IS NULL OR injury_category_id NOT IN ('SKIN DISORDERS','RESPIRATORY CONDITION','POISONING','HEARING LOSS','OTHER') THEN 1 ELSE 0 END) ${sql.as} vf_injury, 
                (CASE WHEN injury_category_id = 'SKIN DISORDERS' THEN 1 ELSE 0 END) ${sql.as} vf_skin_disorder,
                (CASE WHEN injury_category_id = 'RESPIRATORY CONDITION' THEN 1 ELSE 0 END) ${sql.as} vf_respiratory_condition,
                (CASE WHEN injury_category_id = 'POISONING' THEN 1 ELSE 0 END) ${sql.as} vf_poisoning,
                (CASE WHEN injury_category_id = 'HEARING LOSS' THEN 1 ELSE 0 END) ${sql.as} vf_hearing_loss,
                (CASE WHEN injury_category_id = 'OTHER' THEN 1 ELSE 0 END) ${sql.as} vf_other_illnesses,
                SUBSTR(${sql.yearOf('date_incident')},3,4)  ${sql.as} vf_year
            FROM ehs_incidents
        </sql>
        <field name="vf_groupBy_all" dataType="text" groupBy="true"/>
        <field name="vf_is_death" formula="sum" baseField="ehs_incidents.vf_is_death" dataType="number" decimals="0"/> 
        <field name="vf_is_away_from_work" formula="sum" baseField="ehs_incidents.vf_is_away_from_work" dataType="number" decimals="0"/>
        <field name="vf_is_on_restriction" formula="sum" baseField="ehs_incidents.vf_is_on_restriction" dataType="number" decimals="0"/>
        <field name="vf_is_other" formula="sum" baseField="ehs_incidents.vf_is_other" dataType="number" decimals="0"/>
        <field name="lost_work_days" formula="sum" baseField="ehs_incidents.vf_lost_work_days" dataType="number" decimals="0"/>
        <field name="vf_job_restriction" formula="sum" baseField="ehs_incidents.vf_job_restriction" dataType="number" decimals="0"/>
        <field name="vf_injury" formula="sum" baseField="ehs_incidents.vf_injury" dataType="number" decimals="0"/>
        <field name="vf_skin_disorder" formula="sum" baseField="ehs_incidents.vf_skin_disorder" dataType="number" decimals="0"/>
        <field name="vf_respiratory_condition" formula="sum" baseField="ehs_incidents.vf_respiratory_condition" dataType="number" decimals="0"/>
        <field name="vf_poisoning" formula="sum" baseField="ehs_incidents.vf_poisoning" dataType="number" decimals="0"/>
        <field name="vf_hearing_loss" formula="sum" baseField="ehs_incidents.vf_hearing_loss" dataType="number" decimals="0"/>
        <field name="vf_other_illnesses" formula="sum" baseField="ehs_incidents.vf_other_illnesses" dataType="number" decimals="0"/>
        <field name="vf_year" formula="max" baseField="ehs_incidents.vf_year" dataType="text"/>
    </dataSource>
    
    <panel type="grid" id="abEhsIncidentsLogReport" dataSource="abEhsIncidentsLogReport_ds" layoutRegion="reportPos" showOnLoad="false">
        <sortField table="ehs_incidents" name="date_incident" ascending="false"/>
        <sortField table="ehs_incidents" name="parent_incident_id" ascending="true"/>
        <sortField table="ehs_incidents" name="incident_id" ascending="true"/>
        
        <title translatable="true">Incidents Log -- Confidential -- may contain personal information</title>
        <instructions translatable="true">Attention: This form contains information relating to employee health.  It is your responsibility to record and use this information in a manner that ensures the confidentiality of employees and that complies with all legal restrictions on recording employee data.[br/]Select an Incident in the list to see its Details, Witnesses, generated Work Restrictions and assigned Training Programs.</instructions>

        <action id="DOCX">
            <title translatable="true">DOCX</title>
        </action>
        <action id="XLS">
            <title translatable="true">XLS</title>
            <command type="exportPanel" outputType="xls" panelId="abEhsIncidentsLogReport"/>
        </action>
        <action id="OSHA_300">
            <title>OSHA Log Report</title>
            <command type="callFunction" functionName="exportOsha"/>
        </action>
        <action id="OSHA_300A">
            <title>OSHA Summary Report</title>
            <command type="callFunction" functionName="exportOsha"/>
        </action>
        
        <field name="parent_incident_id" controlType="link">
            <command type="callFunction" functionName="showIncidentDetails"/>
        </field>
        <field name="incident_id" controlType="link">
            <command type="callFunction" functionName="showIncidentDetails"/>
        </field>
        <field name="vf_affected_person" dataType="text" controlType="link">
            <title>Affected Person</title>
            <command type="callFunction" functionName="showIncidentDetails"/>
        </field>
        <field name="vf_job_title" dataType="text">
            <title>Job Title</title>
        </field>
        <field name="date_incident"/>
        <field name="site_id"/>
        <field name="pr_id"/>
        <field name="bl_id"/>
        <field name="fl_id"/>
        <field name="rm_id"/>
        <field name="incident_type"/>
        <field name="injury_category_id"/>
        <field name="injury_area_id"/>
        <field name="eq_id"/>
        <field name="vf_is_death" dataType="number" decimals="0" showTotals="true">
            <title>Death</title>
        </field>
        <field name="vf_is_away_from_work" dataType="number" decimals="0" showTotals="true">
            <title>Days away from work</title>
        </field>
        <field name="vf_is_on_restriction" dataType="number" decimals="0" showTotals="true">
            <title>Job restriction</title>
        </field>
        <field name="vf_is_other" dataType="number" decimals="0" showTotals="true">
            <title>Other case</title>
        </field>
        <field name="vf_lost_work_days" dataType="number" decimals="0" showTotals="true">
            <title>Lost Work (Days)</title>
        </field>
        <field name="vf_job_restriction" dataType="number" decimals="0" showTotals="true">
            <title>Days on restriction</title>
        </field>
    </panel>

    <dataSource id="abEhsIncidentsLogYears_ds" type="grouping">
        <table name="afm_cal_dates"/>
        <field name="transfer_status" formula="max" baseField="afm_cal_dates.transfer_status" dataType="text"/>
        <field name="vf_year" dataType="text" groupBy="true">
            <sql dialect="generic">${sql.yearOf('afm_cal_dates.cal_date')}</sql>
        </field>
        <restriction type="sql"
            sql="afm_cal_dates.cal_date &lt;= ${sql.currentDate}
                AND (afm_cal_dates.cal_date &gt;= (SELECT CASE WHEN MIN(date_incident) IS NULL THEN ${sql.date('1970-01-01')} ELSE MIN(date_incident) END FROM ehs_incidents))"/>
        <sortField table="afm_cal_dates" name="vf_year" ascending="false"/>
    </dataSource>
    
    <panel type="console" id="abEhsIncidentsLogYears_panel" dataSource="abEhsIncidentsLogFilter_ds" columns="1" hidden="true" showOnLoad="false">
        <title translatable="true">Incidents Log OSHA Reports - Filter</title>
        <instructions translatable="true">Note: The filter restriction in effect for the web-based Incidents Log report will not apply to the formatted PDF report. Please select a reporting year and optional other filter criteria, then click 'OK' to continue.</instructions>
        <action id="selectYear">
            <title translatable="true">OK</title>
            <command type="callFunction" functionName="setOshaRestrictionAndExport"/>
        </action>
        <field id="vf_year">
            <title translatable="true">Year</title>
            <html>
                <select class="inputField_box" name="select_year" id="select_year">
                </select>
            </html>
        </field>
        <field name="transfer_status" dataType="text" hidden="true"/>
        <field name="ctry_id" table="bl" selectValueType="multiple"/>
        <field name="site_id" table="ehs_incidents" selectValueType="multiple"/>
        <field name="bl_id" table="ehs_incidents" selectValueType="multiple"/>
    </panel>
</view>