<view version="2.0">
	<title>Room Highlights by Category and Type</title>

	<js file="ab-sp-hl-rm-by-rmcat-rmtype-trans.js"/>
    <js file="ab-sp-common.js"/>
    <js file="ab-sp-timeline-common.js"/>
	<layout id="main">
		<north id="filterPosition" initialSize="70" split="true"/>
		<west id="selectedPosition" initialSize="200" split="true"/>
		<center/>
	</layout>

	<layout id="nested_center" containingLayout="main" region="center">
		<center/>
		<south id="legentPosition" initialSize="30%" split="true"/>
	</layout>

	<layout id="nested_nested_center" containingLayout="nested_center" region="center">
		<center id="dwgPosition"/>
		<east id="attributePosition" initialSize="350" split="true"/>
	</layout>

	<message name="total" translatable="true">Total</message>
	<message name="drawingPanelTitle1" translatable="true">Highlight Rooms by Category and Type</message>
	<message name="drawingPanelTitle2" translatable="true">Highlight Rooms for Floor: {0}</message>

	<dataSource id="abSpHlRmByRmcatRmtypeTrans_console_DS">
		<table name="rmpct" role="main"/>
		<field table="rmpct" name="bl_id"/>
		<field table="rmpct" name="rm_cat"/>
        <field table="rmpct" name="date_start"/>
	</dataSource>

	<panel type="console" id="abSpHlRmByRmcatRmtypeTrans_console" columns="3" dataSource="abSpHlRmByRmcatRmtypeTrans_console_DS" layoutRegion="filterPosition">
		<title>Filter</title>
		<action id="showTree">
			<title>Show</title>
		</action>
		<action id="clear">
			<title>Clear</title>
			<command type="clearPanel" panelId="abSpHlRmByRmcatRmtypeTrans_console"/>
		</action>
		<field table="rmpct" name="bl_id"/>
		<field table="rmpct" name="rm_cat"/>
        <field table="rmpct" name="date_start"/>
	</panel>

	<dataSource id="abSpHlRmByRmcatRmtypeTrans_flTree_bl_DS">
		<table name="bl" role="main"/>
		<field table="bl" name="bl_id"/>
		<parameter name="blConsoleRes" dataType="verbatim" value="1=1"/>
		<restriction type="sql" sql="${parameters['blConsoleRes']} AND EXISTS (SELECT 1 FROM rm WHERE rm.bl_id= bl.bl_id AND rm.dwgname IS NOT NULL)"/>
		<sortField table="bl" name="bl_id" ascending="true"/>
	</dataSource>

	<dataSource id="abSpHlRmByRmcatRmtypeTrans_flTree_fl_DS">
		<sql dialect="generic">
			SELECT
			rm.bl_id ${sql.as} bl_id,
			rm.fl_id ${sql.as} fl_id,
			rm.dwgname ${sql.as} dwgname
			FROM rm WHERE rm.dwgname IS NOT NULL AND rm.rm_cat IS NOT NULL AND rm.rm_type IS NOT NULL GROUP BY rm.bl_id,rm.fl_id,rm.dwgname
        </sql>
		<table name="fl" role="main"/>
		<field name="fl_id"/>
		<field name="dwgname"/>
		<sortField table="fl" name="fl_id" ascending="true"/>
	</dataSource>

	<panel type="tree" id="abSpHlRmByRmcatRmtypeTrans_flTree" dataSource="abSpHlRmByRmcatRmtypeTrans_flTree_bl_DS" layoutRegion="selectedPosition">
		<title>Select Floor</title>
		<panel type="tree" id="abSpHlRmByRmcatRmtypeTrans_flTree_level2" dataSource="abSpHlRmByRmcatRmtypeTrans_flTree_fl_DS">
			<event type="onClickNode">
				<command type="callFunction" functionName="onFlTreeClick"/>
			</event>
		</panel>
	</panel>

	<panel type="view" id="abSpHlRmByRmcatRmtypeTrans_shareDS" file="ab-sp-share-ds-for-hl-rmpct-by-cat-type.axvw"/>
    <panel type="html" id="timeLineButton"  layoutRegion="dwgPosition">
        <action id="previousYear">
            <tooltip translatable="true">Year</tooltip>
            <title translatable="true">&lt;&lt;&lt;</title>
            <command type="callFunction" functionName="previousYear"/>
        </action>
        <action id="previousMonth">
            <title translatable="true">&lt;&lt;</title>
            <tooltip translatable="true">Month</tooltip>
            <command type="callFunction" functionName="previousMonth"/>
        </action>
        <action id="previousWeek">
            <title translatable="true">&lt;</title>
            <tooltip translatable="true">Week</tooltip>
            <command type="callFunction" functionName="previousWeek"/>
        </action>
        <action id="currentDate">
            <title translatable="true">current date</title>
        </action>
        <action id="nextWeek">
            <title translatable="true">&gt;</title>
            <tooltip translatable="true">Week</tooltip>
            <command type="callFunction" functionName="nextWeek"/>
        </action>
        <action id="nextMonth">
            <title translatable="true">&gt;&gt;</title>
            <tooltip translatable="true">Month</tooltip>
            <command type="callFunction" functionName="nextMonth"/>
        </action>
        <action id="nextYear">
            <title translatable="true">&gt;&gt;&gt;</title>
            <tooltip translatable="true">Year</tooltip>
            <command type="callFunction" functionName="nextYear"/>
        </action>
    </panel>
	<panel type="drawing" id="abSpHlRmByRmcatRmtypeTrans_DrawingPanel" layoutRegion="dwgPosition" selectionMode="0" multiple="false" highlightDataSource="abSpShareDSForHlRmpctForCatType_rmHighlightCatDS" labelsDataSource="abSpShareDSForHlRmpctForCatType_rmLabelCatDS">
        <action id="exportDOCX">
			<title>DOC</title>
			<tooltip translatable="true">Export current view of drawing to Docx file.</tooltip>
			<command type="exportPanel" outputType="docx" panelId="abSpHlRmByRmcatRmtypeTrans_DrawingPanel"/>
		</action>
		<title></title>
	</panel>

	<dataSource id="abSpHlRmByRmcatRmtypeTrans_rmSummaryByCatDS">
		<table name="rmcat" role="main"/>
		<field name="rm_cat" table="rmcat"/>
		<field name="count_rm" dataType="number" decimals="0" showTotals="true">
			<title>Total Count</title>
			<sql dialect="generic">(select count(distinct bl_id${sql.concat}fl_id${sql.concat}rm_id) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from rmpct 
			    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from hrmpct ) 
			    rmpct where rmpct.rm_cat = rmcat.rm_cat and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
				and ${parameters['rmpctConsoleRes']} 
				
				and (  rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )
				) </sql>
		</field>

		<field name="area_rm_total" dataType="number" showTotals="true">
			<title>Total Area</title>
			<sql dialect="generic">(select sum(case when rmpct.day_part=0 then rmpct.pct_space/100.00*rm.area else rmpct.pct_space/200.00*rm.area end) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm,pct_space, day_part from rmpct 
			    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm,pct_space, day_part from hrmpct ) 
			    ${sql.as} rmpct left outer join rm on rmpct.bl_id=rm.bl_id and rmpct.fl_id=rm.fl_id and rmpct.rm_id=rm.rm_id where rmpct.rm_cat = rmcat.rm_cat and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
				and ${parameters['rmpctConsoleRes']} 
				
				and ( rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )
				
				)
			</sql>
		</field>
		<field name="area_avg_rm" dataType="number">
			<title>Average Area</title>
			<sql dialect="generic">(case when (select count(distinct bl_id${sql.concat}fl_id${sql.concat}rm_id) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from rmpct 
			    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from hrmpct ) 
			    rmpct where rmpct.rm_cat = rmcat.rm_cat and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
				and ${parameters['rmpctConsoleRes']} 
				
				and (  rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )
				) = 0 then 0
				else (select sum(case when rmpct.day_part=0 then rmpct.pct_space/100.00*rm.area else rmpct.pct_space/200.00*rm.area end) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm,pct_space, day_part from rmpct 
				    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm,pct_space, day_part from hrmpct ) 
				    ${sql.as} rmpct left outer join rm on rmpct.bl_id=rm.bl_id and rmpct.fl_id=rm.fl_id and rmpct.rm_id=rm.rm_id where rmpct.rm_cat = rmcat.rm_cat and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
					and ${parameters['rmpctConsoleRes']} 
					
					and (  rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )
					
					)/
					(select count(distinct bl_id${sql.concat}fl_id${sql.concat}rm_id) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from rmpct 
			    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from hrmpct ) 
			    rmpct where rmpct.rm_cat = rmcat.rm_cat and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
				and ${parameters['rmpctConsoleRes']} 
				
				and (  rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )
				) 
				end)</sql>
		</field>
		<field name="hpattern_acad" table="rmcat"/>
		<parameter name="blId" dataType="text" value=""/>
		<parameter name="flId" dataType="text" value=""/>
		<parameter name="date" dataType="date" value=""/>
		<parameter name="rmpctConsoleRes" dataType="verbatim" value="1=1"/>
		<restriction type="sql" sql="EXISTS(select 1 FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status from rmpct 
			union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status from hrmpct ) 
			rmpct where rmpct.rm_cat = rmcat.rm_cat and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']} 
		  and ${parameters['rmpctConsoleRes']} 
		  
		  and (  rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )
		  
		  )"/>
	</dataSource>

	<panel type="grid" id="abSpHlRmByRmcatRmtypeTrans_rmSummaryByCat" showCounts="true" dataSource="abSpHlRmByRmcatRmtypeTrans_rmSummaryByCatDS" showOnLoad="false" layoutRegion="legentPosition">
		<title>Summary by Category</title>
		<sortField table="rmcat" name="rm_cat" ascending="true"/>
		<field id="abSpHlRmByRmcatRmtypeTrans_rmSummaryByCat_legend" table="rmcat" name="hpattern_acad" controlType="color">
			<title>Legend</title>
		</field>
		<field table="rmcat" name="rm_cat"/>
		<field name="count_rm" dataType="number" decimals="0" showTotals="true">
			<title>Total Count</title>
		</field>

		<field name="area_rm_total" dataType="number" showTotals="true">
			<title>Total Area</title>
		</field>
		<field name="area_avg_rm" dataType="number">
			<title>Average Area</title>
		</field>
	</panel>

	<dataSource id="abSpHlRmByRmcatRmtypeTrans_rmSummaryByTypeDS">
		<table name="rmtype" role="main"/>
		<field name="rm_cat" table="rmtype"/>
		<field name="rm_type" table="rmtype"/>
		<field name="count_rm" dataType="number" decimals="0" showTotals="true">
			<title>Total Count</title>
			<sql dialect="generic">(select count(distinct bl_id${sql.concat}fl_id${sql.concat}rm_id) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from rmpct 
			    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from hrmpct ) 
			    rmpct where rmpct.rm_cat = rmtype.rm_cat and rmpct.rm_type = rmtype.rm_type and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
				and ${parameters['rmpctConsoleRes']} 
				
				and (rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )) </sql>
		</field>

		<field name="area_rm_total" dataType="number" showTotals="true">
			<title>Total Area</title>
			<sql dialect="generic">(select sum(case when rmpct.day_part=0 then rmpct.pct_space/100.00*rm.area else rmpct.pct_space/200.00*rm.area end) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm,pct_space, day_part from rmpct 
			    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm,pct_space, day_part from hrmpct ) 
			    ${sql.as} rmpct left outer join rm on rmpct.bl_id=rm.bl_id and rmpct.fl_id=rm.fl_id and rmpct.rm_id=rm.rm_id where rmpct.rm_cat = rmtype.rm_cat and rmpct.rm_type = rmtype.rm_type and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
				and ${parameters['rmpctConsoleRes']} 
				
				and ( rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )
				
				)
			</sql>
		</field>
		<field name="area_avg_rm" dataType="number">
			<title>Average Area</title>
			<sql dialect="generic">(case when (select count(distinct bl_id${sql.concat}fl_id${sql.concat}rm_id) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from rmpct 
			    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from hrmpct ) 
			    rmpct where rmpct.rm_cat = rmtype.rm_cat and rmpct.rm_type = rmtype.rm_type and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
				and ${parameters['rmpctConsoleRes']} 
				
				and (   rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         ))= 0 then 0
				else (select sum(case when rmpct.day_part=0 then rmpct.pct_space/100.00*rm.area else rmpct.pct_space/200.00*rm.area end) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm,pct_space, day_part from rmpct 
				    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm,pct_space, day_part from hrmpct ) 
				    ${sql.as} rmpct left outer join rm on rmpct.bl_id=rm.bl_id and rmpct.fl_id=rm.fl_id and rmpct.rm_id=rm.rm_id where rmpct.rm_cat = rmtype.rm_cat and rmpct.rm_type = rmtype.rm_type and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
					and ${parameters['rmpctConsoleRes']} 
					
					and (  rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )
					
					)/
					(select count(distinct bl_id${sql.concat}fl_id${sql.concat}rm_id) FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from rmpct 
			    union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status ,area_rm from hrmpct ) 
			    rmpct where rmpct.rm_cat = rmtype.rm_cat and rmpct.rm_type = rmtype.rm_type and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']}
				and ${parameters['rmpctConsoleRes']} 
				
				and (  rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )) 
				end)</sql>
		</field>
		<field name="hpattern_acad" table="rmtype"/>
		<field name="asset_id" dataType="text">
			<sql dialect="generic">rmtype.rm_cat${sql.concat}'-'${sql.concat}rmtype.rm_type</sql>
		</field>
		<parameter name="blId" dataType="text" value=""/>
		<parameter name="flId" dataType="text" value=""/>
		<parameter name="date" dataType="date" value=""/>
		<parameter name="rmpctConsoleRes" dataType="verbatim" value="1=1"/>
		<restriction type="sql" sql="EXISTS(select 1 FROM (select pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status from rmpct 
			union select  pct_id, activity_log_id, bl_id , fl_id, rm_id, dv_id, dp_id , rm_cat, rm_type, date_start, date_end, status from hrmpct ) 
			rmpct where rmpct.rm_cat = rmtype.rm_cat and rmpct.rm_type = rmtype.rm_type and rmpct.bl_id = ${parameters['blId']} and rmpct.fl_id = ${parameters['flId']} 
		  and ${parameters['rmpctConsoleRes']} 
		  
		  and (  rmpct.status=1 and (rmpct.date_start IS NULL OR rmpct.date_start &lt;= ${parameters['date']}) 
			                    and (rmpct.date_end IS NULL OR rmpct.date_end &gt;= ${parameters['date']})
			         )
		  
		  )"/>
	</dataSource>

	<panel type="grid" id="abSpHlRmByRmcatRmtypeTrans_rmSummaryByType" dataSource="abSpHlRmByRmcatRmtypeTrans_rmSummaryByTypeDS" showCounts="true" showOnLoad="false" layoutRegion="legentPosition">
		<title>Summary by Type</title>
		<sortField table="rmtype" name="rm_cat" ascending="true"/>
		<sortField table="rmtype" name="rm_type" ascending="true"/>
		<field id="abSpHlRmByRmcatRmtypeTrans_rmSummaryByType_legend" table="rmtype" name="hpattern_acad" controlType="color">
			<title>Legend</title>
		</field>
		<field table="rmtype" name="rm_cat"/>
		<field table="rmtype" name="rm_type"/>
		<field name="count_rm" dataType="number" decimals="0" showTotals="true">
			<title>Total Count</title>
		</field>

		<field name="area_rm_total" dataType="number" showTotals="true">
			<title>Total Area</title>
		</field>
		<field name="area_avg_rm" dataType="number">
			<title>Average Area</title>
		</field>
	</panel>

	<panel type="view" id="abSpHlRmByDpPerFlTrans_rmAttributeDS" file="ab-sp-share-ds-for-rm-attributes.axvw"/>

	<panel type="dataView" columns="2" id="abSpHlRmByRmcatRmtypeTrans_rmAttribute" dataSource="abSpShareDSForRmAttributeDS" showOnLoad="false" layoutRegion="attributePosition">
        <title>Room Attributes</title>
        <field table="rmpct" name="bl_id"/>
        <field table="rmpct" name="dv_id"/>
        <field table="rmpct" name="fl_id"/>
        <field table="rmpct" name="dp_id"/>
        <field table="rmpct" name="rm_id"/>
        <field table="rmpct" name="rm_cat"/>
        <field table="rmpct" name="em_id"/>
        <field table="rmpct" name="rm_type"/>

        <field table="rmpct" name="date_start"/>
        <field table="rmpct" name="date_end"/>
        <field/>
        <field/>
    </panel>
</view>