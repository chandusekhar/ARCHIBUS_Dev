<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ehcache="http://www.springmodules.org/schema/ehcache"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:archibus="http://www.archibus.com/schema/archibus"

    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    http://www.archibus.com/schema/archibus http://www.archibus.com/schema/archibus/webcentral-namespace.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springmodules.org/schema/ehcache http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd">

    <import resource="reservation-services.xml"/>

    <bean
        id="exchangeDayOfTheWeekConverter"
        class="com.archibus.app.reservation.exchange.util.ExchangeDayOfTheWeekConverter"
        scope="prototype">
    </bean>

    <bean
        id="exchangeRecurrenceConverter"
        class="com.archibus.app.reservation.exchange.util.ExchangeRecurrenceConverter"
        p:dayOfTheWeekConverter-ref="exchangeDayOfTheWeekConverter"
        scope="prototype">
    </bean>
    
    <bean
        id="exchangeTraceListener"
        class="com.archibus.app.reservation.exchange.util.ExchangeTraceListener"
        scope="prototype">
    </bean>

    <!-- This is a singleton bean to enable caching of auto-discover Exchange URLs. -->
    <bean
        id="autodiscoverCachingService"
        class="com.archibus.app.reservation.exchange.service.AutodiscoverCachingService"
        scope="singleton">
    </bean>

    <bean
        id="calendarServiceHelper"
        class="com.archibus.app.reservation.exchange.service.AutodiscoverExchangeServiceHelper"
        p:url="$Applications{exchange.url}"
        p:version="$Applications{exchange.version}"
        p:userName="$Applications{exchange.userName}"
        p:password="$Applications{exchange.password}"
        p:domain="$Applications{exchange.domain}"
        p:linkedDomains="$Applications{exchange.linkedDomains}"
        p:proxyServer="$Applications{exchange.proxyServer}"
        p:proxyPort="$Applications{exchange.proxyPort}"
        p:organizerAccount="$Applications{exchange.organizerAccount}"
        p:resourceAccount="$Applications{exchange.resourceAccount}"
        p:autodiscoverCache-ref="autodiscoverCachingService"
        p:traceListener-ref="exchangeTraceListener"
        scope="prototype">
    </bean>

    <bean
        id="timeZoneMapper"
        class="com.archibus.app.reservation.exchange.util.AppointmentTimeZoneMapper"
        scope="prototype">
    </bean>

    <bean
        id="appointmentPropertiesHelper"
        class="com.archibus.app.reservation.exchange.util.AppointmentPropertiesHelper"
        scope="prototype">
    </bean>

    <bean
        id="meetingRequestPropertiesHelper"
        class="com.archibus.app.reservation.exchange.util.MeetingRequestPropertiesHelper"
        scope="prototype">
    </bean>

    <bean
        id="appointmentBinder"
        class="com.archibus.app.reservation.exchange.service.AppointmentBinder"
        p:serviceHelper-ref="calendarServiceHelper"
        p:appointmentPropertiesHelper-ref="appointmentPropertiesHelper"
        scope="prototype">
    </bean>

    <bean
        id="appointmentHelper"
        class="com.archibus.app.reservation.exchange.service.AppointmentHelper"
        p:serviceHelper-ref="calendarServiceHelper"
        p:timeZoneMapper-ref="timeZoneMapper"
        p:appointmentPropertiesHelper-ref="appointmentPropertiesHelper"
        p:recurrenceConverter-ref="exchangeRecurrenceConverter"
        p:spaceService-ref="reservationSpaceService"
        scope="prototype">
    </bean>

    <bean
        id="exchangeMessagesService"
        class="com.archibus.app.reservation.exchange.service.ExchangeMessagesService"
        p:notificationMessageDao-ref="notificationMessageDao"
        scope="prototype">
    </bean>

    <bean
        id="availabilityService"
        class="com.archibus.app.reservation.exchange.service.ExchangeAvailabilityService"
        p:appointmentBinder-ref="appointmentBinder"
        scope="prototype">
    </bean>

    <bean
        id="calendarService"
        class="com.archibus.app.reservation.exchange.service.ExchangeCalendarService"
        p:appointmentBinder-ref="appointmentBinder"
        p:appointmentHelper-ref="appointmentHelper"
        p:exchangeMessagesService-ref="exchangeMessagesService"
        scope="prototype">
    </bean>

    <bean
        id="meetingItemHandler"
        class="com.archibus.app.reservation.exchange.service.MeetingItemHandler"
        p:appointmentBinder-ref="appointmentBinder"
        p:reservationService-ref="conferenceAwareReservationService"
        p:messagesService-ref="exchangeMessagesService"
        scope="prototype">
    </bean>

    <bean
        id="meetingCancellationHandler"
        class="com.archibus.app.reservation.exchange.service.MeetingCancellationHandler"
        parent="meetingItemHandler"
        p:cancelReservationService-ref="cancelReservationService"
        scope="prototype">
    </bean>

    <bean
        id="meetingRequestHandler"
        class="com.archibus.app.reservation.exchange.service.MeetingRequestHandler"
        parent="meetingItemHandler"
        scope="prototype"
        p:meetingRequestPropertiesHelper-ref="meetingRequestPropertiesHelper">
    </bean>

    <bean
        id="itemHandler"
        class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean
                class="com.archibus.app.reservation.exchange.service.ItemHandlerImpl"
                p:meetingRequestHandler-ref="meetingRequestHandler"
                p:meetingCancellationHandler-ref="meetingCancellationHandler"
                scope="prototype">
            </bean>

        </property>
        <property name="interceptorNames">
            <list>
                <value>contextInterceptor</value>
                <value>projectPopulatingContextInterceptorForExchange</value>
                <value>coreUserSessionPopulatingContextInterceptorForExchange</value>
                <value>exceptionHandlingInterceptor</value>
                <value>transactionInterceptor.data</value>
                <value>eventHandlerContextInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ProjectPopulatingContextInterceptor populates Context with specified Project. Context must already exist. The * specified projectId must exist in the ConfigManager. -->
    <bean
        id="projectPopulatingContextInterceptorForExchange"
        class="com.archibus.app.common.mobile.security.service.impl.ProjectPopulatingContextInterceptor"
        p:configManager-ref="configManager"
        p:projectId="$Applications{exchange.projectId}">
    </bean>

    <!-- CoreUserSessionPopulatingContextInterceptor populates Context with the Core user session. Context must already exist. -->
    <bean
        id="coreUserSessionPopulatingContextInterceptorForExchange"
        class="com.archibus.app.common.mobile.security.service.impl.CoreUserSessionPopulatingContextInterceptor"
        p:configManager-ref="configManager">
    </bean>

    <bean
        id="exchangeListener"
        class="com.archibus.app.reservation.exchange.service.ExchangeListener"
        p:enableListener="$Applications{exchange.enableListener}"
        p:itemHandler-ref="itemHandler"
        p:serviceHelper-ref="calendarServiceHelper">
    </bean>

</beans>