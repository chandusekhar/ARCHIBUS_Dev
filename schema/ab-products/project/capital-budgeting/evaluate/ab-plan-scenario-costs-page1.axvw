<view version="2.0">
    <js file="ab-plan-scenario-costs-page1.js"/>
    <message name="emptyRequiredFields">Missing required field</message>
    
    <dataSource id="planScenarioCostsConsoleDs">
        <table name="project" role="main"/>
        <field name="project_id"/>
        <field name="project_name"/>
    </dataSource>
    
    <panel id="planScenarioCostsConsole" type="console" columns="1" dataSource="planScenarioCostsConsoleDs">
        <title>Select Project</title>
        <action id="show">
            <title>Show</title>
        </action>
        <action id="clear">
            <title>Clear</title>                    
            <command type="clearPanel" panelId="planScenarioCostsConsole"/>
        </action>
        <field table="project" name="project_id" required="true">
            <action>
                <title>...</title>
                <command type="selectValue"
                    fieldNames="project.project_id"
                    selectFieldNames="project.project_id, project.project_name, project.project_type, project.status, project.site_id, project.bl_id, project.proj_mgr"
                    visibleFieldNames="project.project_id, project.project_name, project.project_type, project.status, project.site_id, project.bl_id, project.proj_mgr"
                    restriction="project.status NOT IN ('Requested-Rejected','Approved-Cancelled','Issued-Stopped','Completed-Verified','Closed') AND EXISTS(SELECT activity_log.project_id FROM activity_log WHERE activity_log.project_id = project.project_id)">
                    <title>Projects with Action Items</title>
                </command>
            </action>
        </field>
    </panel>
    
    <dataSource id="planScenarioCostsScenariosTableDs" type="grouping" applyVpaRestrictions="false">
        <table name="projscns" role="main"/>
        <parameter name="projectId" value="%" dataType="text"/>
        <parameter name="fundId" value="%" dataType="text"/>
        <sql dialect="generic">SELECT fiscalyear.fiscal_year, est_scenario_costs.cost_scenario, 
          CASE WHEN (action_items_design_costs.design_cost IS NULL) THEN 0 ELSE action_items_design_costs.design_cost END design_cost, 
          est_scenario_costs.proj_scenario_id, est_scenario_costs.project_id
        FROM 
         (SELECT YEAR(date_planned_for) AS fiscal_year FROM activity_log 
           WHERE project_id LIKE ${parameters['projectId']} AND date_planned_for IS NOT NULL GROUP BY YEAR(date_planned_for)
           UNION 
           SELECT fiscal_year FROM projscns 
           WHERE project_id LIKE ${parameters['projectId']} AND fund_id LIKE ${parameters['fundId']} AND fiscal_year IS NOT NULL
           GROUP BY fiscal_year ) fiscalyear
        LEFT OUTER JOIN
          (SELECT project_id, YEAR(date_planned_for) AS activity_log_year, (SUM(cost_est_cap) + SUM(cost_estimated ))
          AS design_cost FROM activity_log WHERE (activity_log.project_id LIKE ${parameters['projectId']}) 
          GROUP BY YEAR(date_planned_for), project_id) action_items_design_costs
        ON fiscalyear.fiscal_year = action_items_design_costs.activity_log_year
        LEFT OUTER JOIN
          (SELECT project_id, proj_scenario_id, fiscal_year, SUM(costs_est_exp + costs_est_cap) AS cost_scenario FROM projscns 
          WHERE (projscns.project_id LIKE ${parameters['projectId']} AND projscns.fund_id LIKE ${parameters['fundId']})
          GROUP BY fiscal_year, project_id, proj_scenario_id) est_scenario_costs 
        ON fiscalyear.fiscal_year = est_scenario_costs.fiscal_year
        WHERE est_scenario_costs.proj_scenario_id IS NOT NULL</sql>
        <sql dialect="oracle">
        SELECT fiscalyear.fiscal_year, est_scenario_costs.cost_scenario, 
          CASE WHEN (action_items_design_costs.design_cost IS NULL) THEN 0 ELSE action_items_design_costs.design_cost END design_cost, est_scenario_costs.proj_scenario_id, est_scenario_costs.project_id
        FROM 
          (SELECT TO_NUMBER(TO_CHAR(activity_log.date_planned_for, 'YYYY')) AS fiscal_year FROM activity_log 
           WHERE activity_log.project_id LIKE ${parameters['projectId']} AND activity_log.date_planned_for IS NOT NULL 
           GROUP BY TO_NUMBER(TO_CHAR(activity_log.date_planned_for, 'YYYY'))
           UNION 
           SELECT fiscal_year FROM projscns
           WHERE projscns.project_id LIKE ${parameters['projectId']} AND projscns.fund_id LIKE ${parameters['fundId']} AND fiscal_year IS NOT NULL
           GROUP BY fiscal_year ) fiscalyear,
          (SELECT project_id, TO_CHAR(date_planned_for, 'YYYY') AS activity_log_year, (SUM(activity_log.cost_est_cap) + SUM(activity_log.cost_estimated )) 
            AS design_cost FROM activity_log WHERE (activity_log.project_id LIKE ${parameters['projectId']}) 
            GROUP BY TO_CHAR(date_planned_for, 'YYYY'), project_id) action_items_design_costs,
          (SELECT project_id, proj_scenario_id, fiscal_year, SUM(costs_est_exp + costs_est_cap) AS cost_scenario FROM projscns 
            WHERE (projscns.project_id LIKE ${parameters['projectId']} AND projscns.fund_id LIKE ${parameters['fundId']})
            GROUP BY fiscal_year, project_id, proj_scenario_id) est_scenario_costs 
          WHERE est_scenario_costs.proj_scenario_id IS NOT NULL
            AND fiscalyear.fiscal_year = action_items_design_costs.activity_log_year (+)
            AND fiscalyear.fiscal_year = est_scenario_costs.fiscal_year (+)
          ORDER BY fiscalyear.fiscal_year, est_scenario_costs.proj_scenario_id
          </sql>
        <field name="proj_scenario_id" table="projscns" dataType="text" groupBy="true">
            <title>Project Scenario</title>
        </field>
        <field name="fiscal_year" table="projscns" dataType="text" groupBy="true">
            <title>Fiscal Year</title>
        </field>
        <field name="design_cost" dataType="number" decimals="2">
          <title>Baseline Cost</title>
          <sql dialect="generic">SUM(design_cost)</sql>
        </field>
        <field name="cost_scenario" dataType="number" decimals="2">
          <title>Scenario Cost</title>
          <sql dialect="generic">SUM(cost_scenario)</sql>
        </field>
        <sortField name="proj_scenario_id" table="projscns" ascending="true"/>
        <sortField name="fiscal_year" table="projscns" ascending="true"/>
    </dataSource>
    
    <panel id="planScenarioCostsScenariosTable" type="crossTable" dataSource="planScenarioCostsScenariosTableDs" showOnLoad="false" >
        <title>Edit Project Scenarios</title>
        <action id="addScenario">
            <title>Add Scenario</title>
        </action>
        <action id="exportXLS">
            <title>XLS</title>
            <command type="exportPanel" outputType="xls" panelId="planScenarioCostsScenariosTable"/>
        </action>
        <event type="onClickItem">
            <command type="callFunction" functionName="planScenarioCostsScenariosTable_onClick"/>
        </event>
    </panel>
    
    <dataSource id="planScenarioCostsAddScenarioGridDs">
        <table name="scenario" role="main"/>
        <field name="proj_scenario_id" table="scenario"/>
        <field name="description" table="scenario"/>
        <parameter name="projectId" value="" dataType="text"/>
        <restriction type="sql" sql="proj_scenario_id NOT IN (SELECT proj_scenario_id FROM projscns WHERE project_id = ${parameters['projectId']})"/>
    </dataSource>
    
    <panel type="grid" id="planScenarioCostsAddScenarioGrid" multipleSelectionEnabled="true" dataSource="planScenarioCostsAddScenarioGridDs" showOnLoad="false">
        <title>Add Scenarios to Project</title>
        <sortField name="proj_scenario_id" table="scenario" ascending="true"/> 
        <action id="select">
          <title>Select</title>
          <command type="closeDialog"/>
        </action> 
        <action>
          <title>Cancel</title>
          <command type="closeDialog"/>
        </action>      
        <field name="proj_scenario_id" table="scenario"/> 
        <field name="description" table="scenario"/>
    </panel>

</view>
